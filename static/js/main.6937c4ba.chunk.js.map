{"version":3,"sources":["recoil/Container.js","components/sidebar/Sidebar.jsx","components/TopLabelProgress.jsx","components/flowboard/LabelNodeHandle.jsx","components/flowboard/ContainerNode.jsx","components/flowboard/NetworkNode.jsx","recoil/Graph.js","utils/GraphUtils.js","components/flowboard/GraphBoard.jsx","recoil/Menu.js","recoil/Socketio.js","components/ConfirmModal.jsx","components/sidebar/panel/ContainersPanel.jsx","components/sidebar/panel/ImagesPanel.jsx","components/StackedProgress.jsx","components/UsageCard.jsx","components/sidebar/panel/OverviewPanel.jsx","components/sidebar/panel/StatusPanel.jsx","components/sidebar/model/AddImage.jsx","components/sidebar/panel/networkPanel.jsx","components/sidebar/model/recipe/RecipesBrowser.jsx","components/form/nestedFieldArray.jsx","components/form/fieldArray.jsx","components/sidebar/model/recipe/RecipeSetting.jsx","components/sidebar/model/RecipeModel.jsx","components/sidebar/panel/LogsPanel.jsx","components/sidebar/model/UploadRecipe.jsx","components/sidebar/Menu.jsx","components/StatusNag.jsx","components/SocketStatusNag.jsx","utils/Message.js","components/pages/Main.jsx","App.jsx","index.jsx"],"names":["containerListState","atom","key","default","containerStatsListState","containerNetworkListState","imagesListState","selectedContainerState","undefined","containerUsageState","selector","get","containerStatsList","Object","entries","reduce","result","value","cpu","cpu_stats","cpu_usage","total_usage","precpu_stats","system_cpu_usage","online_cpus","memory","memory_stats","usage","stats","cache","totalMemory","limit","name","Math","round","containerPanelListState","containerList","length","map","container","id","Id","Name","state","State","Status","image","Config","Image","created","Created","SidebarPanel","selectedPanel","selectedContainer","useRecoilValue","className","Header","as","Subheader","type","data","panel","TopLabelProgress","memo","title","label","total","Grid","Column","floated","width","textAlign","Progress","size","propTypes","PropTypes","string","isRequired","number","CustomHandle","styled","Handle","position","CustomNodeHandle","isConnectable","defaultProps","ContainerNode","style","wordBreak","healthyStatus","Label","color","horizontal","substring","ceil","processCount","columns","celled","verticalAlign","Row","stretched","divided","networkSettings","Ports","split","privatePort","HostPort","toUpperCase","Networks","flatMap","NetworkID","IPAddress","LabelNodeHandle","attached","content","status","NetworkNode","driver","gateway","subnet","graphPositionState","setGraphPositionState","set","newPosition","graphPosition","graphNodesState","containerNetworkList","containerUsage","Array","isArray","keys","containerNode","Health","NetworkSettings","networkNode","network","Driver","IPAM","Gateway","Subnet","graphEdgesState","some","el","source","sourceHandle","target","graphElementState","graphEdges","graphNodes","positionedNodes","node","x","y","elk","ELK","defaultLayoutOptions","updateLayout","elements","a","nodes","edges","forEach","isNode","portList","__rf","handleBounds","push","height","layoutOptions","portConstraints","ports","handle","index","sourcePort","targetPort","layout","children","newGraph","filter","find","n","random","onLoad","reactFlowInstance","console","log","fitView","nodeTypes","GraphBaord","reactFlowElement","setGraphPosition","useSetRecoilState","runOnce","useRef","useStoreState","nodeHasDimension","onLayout","assign","setSelectedContainer","useEffect","current","every","update","onElementsRemove","elementsToRemove","onSelectionChange","e","prev","left","bottom","onClick","Icon","gap","selectedMenuItemState","imagesSocket","dangerouslyAllowMutability","containersSocket","networksSocket","recipesSocket","ConfirmModal","trigger","confirmCallback","useState","open","setOpen","handleConfirmClick","choose","Modal","onClose","onOpen","Group","Content","Actions","Button","negative","positive","selectedContainersId","Set","ContainersPanel","containers","containerSocket","handlecheck","checked","add","delete","dividing","emit","toast","info","clear","Divider","Table","fixed","compact","basic","selectable","fullWidth","HeaderCell","Checkbox","disabled","Body","Cell","onChange","ImagePanel","imageList","RepoTags","join","Size","toFixed","StackedProgress","allZero","bar","i","precision","percent","Popup","backgroundColor","display","minWidth","margin","UsageCard","labelSuffix","sum","acc","b","Card","fluid","OverviewPanel","networkList","imagesList","cpuUsage","substr","memoryUsage","centered","alignItems","Description","statuslist","conatinerId","time","StatusPanel","shift","ResponsiveContainer","maxHeight","LineChart","top","right","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","Legend","Line","stroke","isAnimationActive","Menu","Item","selectedNetowrksId","networksList","networkSocket","sorted","sort","widths","RecipesBrowser","handleClick","recipeSocket","recipeList","setRecipeList","ack","header","nestIndex","control","register","getValues","useFieldArray","fields","remove","append","item","k","subheader","required","Fields","setValue","prepend","RecipeSetting","recipeName","handleClose","useForm","handleSubmit","reset","variablesFields","recipeCanonicalId","setRecipeCanonicalId","recipeJson","JSON","parse","canonical_id","defaultvalue","variables","vars","desc","description","envvar","c","nestedArray","environment_variables","env","Form","onSubmit","prefix","variablesArgs","envArgs","placeholder","RecipeModel","view","selectedRecipe","setSelectedRecipe","corner","scrolling","form","LogsPanel","term","fitAddon","FitAddon","contianerSocket","terminal","tail","on","line","writeln","removeAllListeners","fit","options","convertEol","ref","addons","onResize","UploadRecipe","Segment","stackable","Input","files","reader","FileReader","onload","evt","readAsArrayBuffer","primary","htmlFor","menuItems","icon","cornerIcon","SidebarMenu","setSelectedMenuItem","handleMouseClickPanel","_key","handleMouseClickModel","vertical","active","fitted","hidden","StatusNag","visable","setVisable","conatinerStatus","setConatinerStatus","statsStatus","setStatsStatus","netowrkStatus","setNetowrkStatus","imageStatus","setImageStatus","SocketStatusNag","keyDict","SUCCESS","RECIPE_UNPACKING","RECIPE_EXTRACT_FINISHED","RECIPE_IMPORT_FINISHED","CRAFT_PREPARE","CRAFT_PULLING_IMAGE","CRAFT_NETWORK_CREATED","CRAFT_CONTAINER_CREATED","CRAFT_FINISHED","BAD_ZIPFILE","INCORRECT_RECIPE_STRUCTURE","MISSING_RECIPE_FILE","INCORRECT_RECIPE_JSON_FORMAT","NO_SUCH_RECIPE","MISSING_VARIABLE","BAD_PREFIX_NAME","formatter","msg","Main","selectedMenuItem","setContainerListState","setContainerStatsListState","setContainerNetworkListState","setImagesListState","setContainerSocket","setImagesSocket","setNetworksSocket","setRecipesSocket","isConnected","setIsConnected","wsContainer","io","listTimer","setInterval","volatile","all","statsTimer","clearInterval","disconnect","wsNetwork","wsImage","wsRecipe","message","Sidebar","Pushable","flexGrow","animation","direction","visible","overflow","Pusher","GraphBoard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6937c4ba.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\r\n\r\nconst containerListState = atom({\r\n  key: \"containerListState\",\r\n  default: [],\r\n});\r\n\r\nconst containerStatsListState = atom({\r\n  key: \"containerStatsListState\",\r\n  default: [],\r\n});\r\n\r\nconst containerNetworkListState = atom({\r\n  key: \"containerNetworkListState\",\r\n  default: [],\r\n});\r\n\r\nconst imagesListState = atom({\r\n  key: \"imagesListState\",\r\n  default: [],\r\n});\r\n\r\nconst selectedContainerState = atom({\r\n  key: \"selectedContainerState\",\r\n  default: undefined,\r\n});\r\n\r\n// container usage\r\nconst containerUsageState = selector({\r\n  key: \"containerUsageState\",\r\n  get: ({ get }) => {\r\n    const containerStatsList = get(containerStatsListState);\r\n    return Object.entries(containerStatsList).reduce((result, [key, value]) => {\r\n      // usage calculation\r\n      const cpuDelta =\r\n        value?.cpu_stats.cpu_usage.total_usage -\r\n        value?.precpu_stats.cpu_usage.total_usage;\r\n      const systemCpuDelta =\r\n        value?.cpu_stats.system_cpu_usage -\r\n        value?.precpu_stats.system_cpu_usage;\r\n      const cpu =\r\n        (cpuDelta / systemCpuDelta) * value?.cpu_stats.online_cpus * 100.0;\r\n      const memory =\r\n        (value?.memory_stats.usage - value?.memory_stats.stats?.cache) /\r\n        1024 /\r\n        1024;\r\n      const totalMemory = value?.memory_stats.limit / 1024 / 1024;\r\n\r\n      // eslint-disable-next-line no-param-reassign\r\n      result[key] = {\r\n        name: value.name,\r\n        cpu: cpu || 0,\r\n        memory: Math.round(memory) || 0,\r\n        totalMemory: Math.round(totalMemory) || 0,\r\n      };\r\n      return result;\r\n    }, {});\r\n  },\r\n});\r\n\r\n// side panel\r\nconst containerPanelListState = selector({\r\n  key: \"containerPanelListState\",\r\n  get: ({ get }) => {\r\n    const containerList = get(containerListState);\r\n\r\n    if (containerList.length === 0) return [];\r\n    return containerList.map((container) => ({\r\n      id: container.Id,\r\n      name: container.Name,\r\n      state: container.State.Status,\r\n      image: container.Config.Image,\r\n      created: container.Created,\r\n    }));\r\n  },\r\n});\r\n\r\nexport {\r\n  containerListState,\r\n  selectedContainerState,\r\n  containerStatsListState,\r\n  imagesListState,\r\n  containerUsageState,\r\n  containerNetworkListState,\r\n  containerPanelListState,\r\n};\r\n","import { Header } from \"semantic-ui-react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport PropTypes from \"prop-types\";\r\nimport { selectedContainerState } from \"../../recoil/Container\";\r\n\r\nconst SidebarPanel = ({ selectedPanel }) => {\r\n  const selectedContainer = useRecoilValue(selectedContainerState);\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div className=\"infotitlebar\">\r\n        <Header as=\"h3\">\r\n          {selectedPanel.name}\r\n          <Header.Subheader>\r\n            {selectedPanel.type === \"host\"\r\n              ? \"Hostname\"\r\n              : selectedContainer?.data.name}\r\n          </Header.Subheader>\r\n        </Header>\r\n      </div>\r\n      {selectedPanel.panel}\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebarPanel.propTypes = {\r\n  selectedPanel: PropTypes.shape({\r\n    key: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired,\r\n    panel: PropTypes.element,\r\n  }).isRequired,\r\n};\r\n\r\nexport default SidebarPanel;\r\n","import { memo } from \"react\";\r\nimport { Progress, Grid } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TopLabelProgress = memo(({ title, label, value, total }) => (\r\n  <>\r\n    <div>\r\n      <Grid>\r\n        <Grid.Column floated=\"left\" width={8}>\r\n          {title}\r\n        </Grid.Column>\r\n        <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\r\n          {label}\r\n        </Grid.Column>\r\n      </Grid>\r\n      <Progress\r\n        value={value}\r\n        total={total}\r\n        className=\"reverse-indicating\"\r\n        size=\"tiny\"\r\n      />\r\n    </div>\r\n  </>\r\n));\r\n\r\nTopLabelProgress.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TopLabelProgress;\r\n","import PropTypes from \"prop-types\";\r\nimport { Handle } from \"react-flow-renderer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CustomHandle = styled(Handle)`\r\n  position: absolute;\r\n  width: 25px;\r\n  height: calc(100% - 4px);\r\n  background-color: #718792;\r\n  border: medium none;\r\n  transform: translateY(0px);\r\n  top: 2px;\r\n\r\n  ${({ position }) => {\r\n    switch (position) {\r\n      case \"right\":\r\n        return `border-radius: 0px 10px 10px 0px;\r\n        right: -36px;`;\r\n      case \"left\":\r\n        return `border-radius: 10px 0px 0px 10px;\r\n        left: -26px;`;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }}\r\n`;\r\n\r\nconst CustomNodeHandle = ({ id, type, position, isConnectable = true }) => (\r\n  <CustomHandle\r\n    position={position}\r\n    id={id}\r\n    type={type}\r\n    isConnectable={isConnectable}\r\n  />\r\n);\r\n\r\nCustomNodeHandle.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  position: PropTypes.string.isRequired,\r\n  isConnectable: PropTypes.bool,\r\n};\r\n\r\nCustomNodeHandle.defaultProps = {\r\n  isConnectable: true,\r\n};\r\n\r\nexport default CustomNodeHandle;\r\n","import { Header, Label, Grid } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TopLabelProgress from \"../TopLabelProgress\";\r\nimport LabelNodeHandle from \"./LabelNodeHandle\";\r\n\r\nconst ContainerNode = ({ data }) => (\r\n  <>\r\n    <Header as=\"h5\" style={{ wordBreak: \"break-all\" }}>\r\n      {data.name}\r\n      {data.healthyStatus != null && (\r\n        <Label\r\n          color={\r\n            data.healthyStatus === \"healthy\"\r\n              ? \"green\"\r\n              : data.healthyStatus === \"starting\"\r\n              ? \"yellow\"\r\n              : \"red\"\r\n          }\r\n          size=\"mini\"\r\n          horizontal\r\n        >\r\n          {data.healthyStatus}\r\n        </Label>\r\n      )}\r\n      <Header.Subheader>{`#${data.id.substring(0, 12)}`}</Header.Subheader>\r\n    </Header>\r\n\r\n    <TopLabelProgress\r\n      title=\"CPU\"\r\n      label={data.cpu != null ? `${Math.ceil(data.cpu)}%` : \"n/a\"}\r\n      value={data.cpu ?? 0}\r\n      total={100}\r\n    />\r\n\r\n    <TopLabelProgress\r\n      title=\"Memory\"\r\n      label={\r\n        data.memory !== null\r\n          ? `${Math.round(data.memory)}/${Math.round(data.totalMemory)} MiB`\r\n          : \"n/a\"\r\n      }\r\n      value={data.memory ?? 0}\r\n      total={data.totalMemory}\r\n    />\r\n\r\n    <Grid>\r\n      <Grid.Column floated=\"left\" width={8}>\r\n        Processes:\r\n      </Grid.Column>\r\n      <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\r\n        {data.processCount != null || \"n/a\"}\r\n      </Grid.Column>\r\n    </Grid>\r\n\r\n    <div>IP Table</div>\r\n    <Grid\r\n      columns=\"equal\"\r\n      className=\"\"\r\n      celled=\"internally\"\r\n      verticalAlign=\"middle\"\r\n      textAlign=\"center\"\r\n    >\r\n      <Grid.Row stretched>\r\n        <Grid.Column>\r\n          <Grid divided=\"vertically\" textAlign=\"center\">\r\n            {Object.entries(data.networkSettings.Ports).map(([id, value]) => {\r\n              const [privatePort, type] = id.split(\"/\");\r\n              return (\r\n                <Grid.Row\r\n                  key={`${data.id}-${privatePort}:${value?.HostPort}/${type}`}\r\n                >\r\n                  {value\r\n                    ? `${privatePort}:${\r\n                        value[0]?.HostPort\r\n                      }/${type.toUpperCase()}`\r\n                    : `${privatePort}/${type.toUpperCase()}`}\r\n                </Grid.Row>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n          <Grid divided=\"vertically\" textAlign=\"center\">\r\n            {Object.entries(data.networkSettings.Networks).flatMap(\r\n              ([, value]) => {\r\n                if (value.NetworkID === \"\") return [];\r\n                return (\r\n                  <Grid.Row key={`${data.id}-${value.NetworkID}`}>\r\n                    {value.IPAddress}\r\n                    <LabelNodeHandle\r\n                      type=\"source\"\r\n                      position=\"right\"\r\n                      id={`${data.id}-${value.NetworkID}`}\r\n                      isConnectable={false}\r\n                    />\r\n                  </Grid.Row>\r\n                );\r\n              },\r\n            )}\r\n          </Grid>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n\r\n    <Label\r\n      attached=\"top right\"\r\n      size=\"tiny\"\r\n      content={data.status}\r\n      color={data.status === \"running\" ? \"green\" : \"red\"}\r\n    />\r\n  </>\r\n);\r\n\r\nContainerNode.propTypes = {\r\n  data: PropTypes.shape({\r\n    healthyStatus: PropTypes.string,\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    cpu: PropTypes.number,\r\n    memory: PropTypes.number,\r\n    totalMemory: PropTypes.number,\r\n    processCount: PropTypes.number,\r\n    status: PropTypes.string,\r\n    networkSettings: PropTypes.object,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ContainerNode;\r\n","import { Header, Grid } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LabelNodeHandle from \"./LabelNodeHandle\";\r\n\r\nconst NetworkNode = ({ data }) => (\r\n  <>\r\n    <Header as=\"h5\" style={{ wordBreak: \"break-all\" }}>\r\n      {data.name}\r\n      <Header.Subheader>{`#${data.id.substring(0, 12)}`}</Header.Subheader>\r\n    </Header>\r\n\r\n    <Grid className=\"very compact\">\r\n      <Grid.Column floated=\"left\" width={8}>\r\n        Driver:\r\n      </Grid.Column>\r\n      <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\r\n        {data.driver}\r\n      </Grid.Column>\r\n\r\n      {data.gateway != null && (\r\n        <>\r\n          <Grid.Column floated=\"left\" width={8}>\r\n            Gateway:\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\r\n            {data.gateway}\r\n          </Grid.Column>\r\n        </>\r\n      )}\r\n      {data.subnet != null && (\r\n        <>\r\n          <Grid.Column floated=\"left\" width={8}>\r\n            Subnet:\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\r\n            {data.subnet}\r\n          </Grid.Column>\r\n        </>\r\n      )}\r\n    </Grid>\r\n\r\n    <LabelNodeHandle type=\"target\" position=\"left\" id={data.id} />\r\n  </>\r\n);\r\n\r\nNetworkNode.propTypes = {\r\n  data: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    id: PropTypes.string,\r\n    driver: PropTypes.string,\r\n    gateway: PropTypes.string,\r\n    subnet: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nexport default NetworkNode;\r\n","import { atom, selector } from \"recoil\";\r\nimport {\r\n  containerListState,\r\n  containerNetworkListState,\r\n  containerUsageState,\r\n} from \"./Container\";\r\n\r\nconst graphPositionState = atom({\r\n  key: \"graphPositionState\",\r\n  default: {},\r\n});\r\n\r\nconst setGraphPositionState = selector({\r\n  key: \"setGraphPositionState\",\r\n  set: ({ set, get }, newPosition) => {\r\n    const graphPosition = get(graphPositionState);\r\n    set(graphPositionState, { ...graphPosition, ...newPosition });\r\n  },\r\n});\r\n\r\nconst graphNodesState = selector({\r\n  key: \"graphNodesState\",\r\n  get: ({ get }) => {\r\n    const containerList = get(containerListState);\r\n    // const containerStatsList = get(containerStatsListState);\r\n    const containerNetworkList = get(containerNetworkListState);\r\n    const containerUsage = get(containerUsageState);\r\n\r\n    if (!Array.isArray(containerList) || !containerList.length) return [];\r\n    if (Object.keys(containerUsage).length === 0) return [];\r\n    if (!Array.isArray(containerNetworkList) || !containerNetworkList.length)\r\n      return [];\r\n\r\n    const containerNode = containerList.map((container) => {\r\n      const stats = containerUsage[container.Id];\r\n      return {\r\n        id: container.Id,\r\n        type: \"container\",\r\n        data: {\r\n          id: container.Id,\r\n          name: container.Name,\r\n          status: container.State.Status,\r\n          healthyStatus: container.State.Health?.Status,\r\n          cpu: stats?.cpu,\r\n          memory: stats?.memory,\r\n          totalMemory: stats?.totalMemory,\r\n          processCount: null,\r\n          networkSettings: container.NetworkSettings,\r\n        },\r\n      };\r\n    });\r\n\r\n    // TODO: multiple network config\r\n    const networkNode = containerNetworkList.map((network) => ({\r\n      id: network.Id,\r\n      type: \"network\",\r\n      data: {\r\n        id: network.Id,\r\n        name: network.Name,\r\n        driver: network.Driver,\r\n        gateway: network.IPAM.Config[0]?.Gateway,\r\n        subnet: network.IPAM.Config[0]?.Subnet,\r\n      },\r\n    }));\r\n    return [...containerNode, ...networkNode];\r\n  },\r\n});\r\n\r\nconst graphEdgesState = selector({\r\n  key: \"graphEdgesState\",\r\n  get: ({ get }) => {\r\n    const containerList = get(containerListState);\r\n    const containerNetworkList = get(containerNetworkListState);\r\n\r\n    if (!Array.isArray(containerList) || !containerList.length) return [];\r\n    if (!Array.isArray(containerNetworkList) || !containerNetworkList.length)\r\n      return [];\r\n\r\n    const edge = containerList.flatMap((container) =>\r\n      Object.entries(container.NetworkSettings.Networks).flatMap(\r\n        ([, value]) => {\r\n          // check network exist\r\n          if (!containerNetworkList.some((el) => el.Id === value.NetworkID))\r\n            return [];\r\n          return {\r\n            id: `${container.Id}-${value.NetworkID}`,\r\n            type: \"smoothstep\",\r\n            source: container.Id,\r\n            sourceHandle: `${container.Id}-${value.NetworkID}`,\r\n            target: value.NetworkID,\r\n          };\r\n        },\r\n      ),\r\n    );\r\n    return edge;\r\n  },\r\n});\r\n\r\nconst graphElementState = selector({\r\n  key: \"graphElementState\",\r\n  get: ({ get }) => {\r\n    const graphPosition = get(graphPositionState);\r\n    const graphEdges = get(graphEdgesState);\r\n    const graphNodes = get(graphNodesState);\r\n\r\n    if (!Array.isArray(graphNodes) || !graphNodes.length) return [];\r\n    if (!Array.isArray(graphEdges) || !graphEdges.length) return [];\r\n\r\n    const positionedNodes = graphNodes.map((node) => {\r\n      const position = graphPosition[node.id] ?? { position: { x: 0, y: 0 } };\r\n      return { ...node, ...position };\r\n    });\r\n\r\n    return [...positionedNodes, ...graphEdges];\r\n  },\r\n});\r\n\r\nexport { graphElementState, setGraphPositionState };\r\n","import ELK from \"elkjs/lib/elk.bundled\";\r\nimport { isNode } from \"react-flow-renderer\";\r\n\r\nconst elk = new ELK({\r\n  // workerUrl: \"./elk-worker.min.js\",\r\n  defaultLayoutOptions: {\r\n    \"elk.algorithm\": \"layered\",\r\n    \"elk.direction\": \"RIGHT\",\r\n    \"elk.spacing.nodeNode\": \"100\",\r\n    \"elk.layered.spacing.nodeNodeBetweenLayers\": \"100\",\r\n    \"elk.edgeRouting\": \"ORTHOGONAL\",\r\n    \"elk.layered.layering.strategy\": \"MIN_WIDTH\",\r\n    \"elk.layered.nodePlacement.strategy\": \"LINEAR_SEGMENTS\",\r\n    \"elk.spacing.edgeNode\": \"50\",\r\n  },\r\n});\r\n\r\nconst updateLayout = async (elements) => {\r\n  const DEFAULT_WIDTH = 75;\r\n  const DEFAULT_HEIGHT = 75;\r\n  const nodes = [];\r\n  const edges = [];\r\n\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      const portList =\r\n        el.__rf?.handleBounds.source ?? el.__rf?.handleBounds.target ?? [];\r\n      // console.log(el.__rf?.handleBounds);\r\n      nodes.push({\r\n        id: el.id,\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        width: el.__rf?.width ?? DEFAULT_WIDTH,\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        height: el.__rf?.height ?? DEFAULT_HEIGHT,\r\n        layoutOptions: {\r\n          portConstraints: \"FIXED_ORDER\",\r\n          \"portAlignment.east\": \"END\",\r\n        },\r\n        ports: [\r\n          ...portList.map((handle, index) => ({\r\n            id: handle.id,\r\n            width: 0,\r\n            height: 0,\r\n            layoutOptions: {\r\n              \"port.side\": handle.position === \"right\" ? \"EAST\" : \"NORTH\",\r\n              \"port.index\": index,\r\n            },\r\n          })),\r\n        ],\r\n      });\r\n    } else {\r\n      // console.log(el);\r\n      edges.push({\r\n        id: el.id,\r\n        sourcePort: `${el.source}-${el.target}`,\r\n        targetPort: el.target,\r\n        source: el.source,\r\n        target: el.target,\r\n      });\r\n    }\r\n  });\r\n\r\n  const newGraph = await elk.layout({\r\n    id: \"root\",\r\n    children: nodes,\r\n    // eslint-disable-next-line object-shorthand\r\n    edges: edges,\r\n  });\r\n\r\n  return elements\r\n    .filter((el) => {\r\n      const node = newGraph?.children?.find((n) => n.id === el.id);\r\n      return isNode(el) && node?.x && node?.y && node?.width && node?.height;\r\n    })\r\n    .map((el) => {\r\n      const node = newGraph?.children?.find((n) => n.id === el.id);\r\n      return {\r\n        [el.id]: {\r\n          position: {\r\n            // hack: slighltiy different position to notify react flow about the change\r\n            x: node.x - node.width / 2 + Math.random() / 1000,\r\n            y: node.y - node.height / 2,\r\n          },\r\n        },\r\n      };\r\n    });\r\n};\r\n\r\nexport default updateLayout;\r\n","import ReactFlow, {\r\n  removeElements,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  ControlButton,\r\n  useUpdateNodeInternals,\r\n  ReactFlowProvider,\r\n  useStoreState,\r\n} from \"react-flow-renderer\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport ContainerNode from \"./ContainerNode\";\r\nimport { selectedContainerState } from \"../../recoil/Container\";\r\nimport NetworkNode from \"./NetworkNode\";\r\nimport { graphElementState, setGraphPositionState } from \"../../recoil/Graph\";\r\nimport updateLayout from \"../../utils/GraphUtils\";\r\n\r\nconst onLoad = (reactFlowInstance) => {\r\n  console.log(\"flow loaded:\", reactFlowInstance);\r\n  reactFlowInstance.fitView();\r\n};\r\n\r\nconst nodeTypes = {\r\n  container: ContainerNode,\r\n  network: NetworkNode,\r\n};\r\n\r\nconst GraphBaord = () => {\r\n  // external state\r\n  const reactFlowElement = useRecoilValue(graphElementState);\r\n  const setGraphPosition = useSetRecoilState(setGraphPositionState);\r\n\r\n  // local state\r\n  const runOnce = useRef(false);\r\n\r\n  // reactflow state\r\n  const nodes = useStoreState((state) => state.nodes);\r\n  const edges = useStoreState((state) => state.edges);\r\n\r\n  const nodeHasDimension = (el) => el.__rf.width && el.__rf.height;\r\n\r\n  const onLayout = async () => {\r\n    const result = await updateLayout([...edges, ...nodes]);\r\n    setGraphPosition(Object.assign({}, ...result));\r\n  };\r\n\r\n  const onElementsRemove = (elementsToRemove) => console.log(elementsToRemove);\r\n  // const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n\r\n  // on selection change\r\n  const setSelectedContainer = useSetRecoilState(selectedContainerState);\r\n  const onSelectionChange = (e) => {\r\n    setSelectedContainer(\r\n      (prev) => e?.filter((x) => x.type === \"container\")?.[0] ?? prev,\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !runOnce.current &&\r\n      nodes.length !== 0 &&\r\n      nodes.every(nodeHasDimension)\r\n    ) {\r\n      const update = async () => {\r\n        await onLayout();\r\n      };\r\n      update();\r\n      runOnce.current = true;\r\n    }\r\n  }, [nodes, edges]);\r\n\r\n  return (\r\n    <ReactFlow\r\n      elements={reactFlowElement}\r\n      nodeTypes={nodeTypes}\r\n      onElementsRemove={onElementsRemove}\r\n      // onConnect={onConnect}\r\n      onLoad={onLoad}\r\n      onSelectionChange={onSelectionChange}\r\n    >\r\n      <Controls style={{ left: \"220px\", bottom: \"51px\" }}>\r\n        <ControlButton onClick={() => onLayout()}>\r\n          <Icon name=\"project diagram\" />\r\n        </ControlButton>\r\n      </Controls>\r\n      <MiniMap style={{ left: \"10px\", bottom: \"10px\" }} />\r\n      <Background color=\"#aaa\" gap={16} />\r\n    </ReactFlow>\r\n  );\r\n};\r\n\r\nexport default GraphBaord;\r\n","import { atom } from \"recoil\";\r\n\r\nconst selectedMenuItemState = atom({\r\n  key: \"selectedMenuItemState\",\r\n  default: { key: false, name: false, panel: undefined },\r\n});\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport { selectedMenuItemState };\r\n","import { atom } from \"recoil\";\r\n\r\nconst imagesSocket = atom({\r\n  key: \"imageSocket\",\r\n  default: null,\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\nconst containersSocket = atom({\r\n  key: \"containersSocket\",\r\n  default: null,\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\nconst networksSocket = atom({\r\n  key: \"networksSocket\",\r\n  default: null,\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\nconst recipesSocket = atom({\r\n  key: \"recipesSocket\",\r\n  default: null,\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport { imagesSocket, containersSocket, networksSocket, recipesSocket };\r\n","import { useEffect, useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { Modal, Icon, Button, Header, Grid, Segment } from \"semantic-ui-react\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst ConfirmModal = ({ trigger, confirmCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleConfirmClick = (choose) => {\r\n    confirmCallback(choose);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"tiny\"\r\n        trigger={trigger}\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n      >\r\n        <Modal.Header>\r\n          <Icon.Group>\r\n            <Icon name=\"exclamation triangle\" />\r\n          </Icon.Group>\r\n          <span> Confirm</span>\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          Action can&apos;t be reverted. Are you sure to proceed?\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={() => handleConfirmClick(false)} negative>\r\n            No\r\n          </Button>\r\n          <Button onClick={() => handleConfirmClick(true)} positive>\r\n            Yes\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default ConfirmModal;\r\n","import { toast } from \"react-toastify\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport {\r\n  Table,\r\n  Label,\r\n  Icon,\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { containerPanelListState } from \"../../../recoil/Container\";\r\nimport { containersSocket } from \"../../../recoil/Socketio\";\r\nimport ConfirmModal from \"../../ConfirmModal\";\r\n\r\nconst selectedContainersId = new Set([]);\r\n\r\nconst ContainersPanel = () => {\r\n  const containers = useRecoilValue(containerPanelListState);\r\n  const containerSocket = useRecoilValue(containersSocket);\r\n\r\n  const handlecheck = (e, { checked, id }) => {\r\n    if (checked) selectedContainersId.add(id);\r\n    else selectedContainersId.delete(id);\r\n  };\r\n\r\n  const startContainer = () => {\r\n    selectedContainersId.forEach((id) => {\r\n      containerSocket.emit(\"start\", id, {});\r\n      toast.info(`🟢 Starting Container: ${id.substring(0, 12)}`);\r\n    });\r\n  };\r\n\r\n  const stopContainer = () => {\r\n    selectedContainersId.forEach((id) => {\r\n      containerSocket.emit(\"stop\", id, {});\r\n      toast.info(`🟥 Stopping Container: ${id.substring(0, 12)}`);\r\n    });\r\n  };\r\n\r\n  const deleteContainer = (confirm) => {\r\n    if (!confirm) return;\r\n    selectedContainersId.forEach((id) => {\r\n      containerSocket.emit(\"remove\", id);\r\n      toast.info(`🗑️ Removing Container: ${id.substring(0, 12)}`);\r\n    });\r\n    selectedContainersId.clear();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex-box\">\r\n        <Header dividing size=\"large\">\r\n          Action\r\n        </Header>\r\n        <Button.Group>\r\n          <Button positive onClick={startContainer}>\r\n            <Icon name=\"play\" />\r\n            Start\r\n          </Button>\r\n          <Button color=\"yellow\" onClick={stopContainer}>\r\n            <Icon name=\"pause\" />\r\n            Stop\r\n          </Button>\r\n\r\n          <ConfirmModal\r\n            trigger={\r\n              <Button negative>\r\n                <Icon name=\"trash\" />\r\n                Delete\r\n              </Button>\r\n            }\r\n            confirmCallback={(choose) => deleteContainer(choose)}\r\n          />\r\n        </Button.Group>\r\n        <Divider />\r\n\r\n        <div className=\"flex-tab\">\r\n          <Table fixed compact=\"very\" basic=\"very\" selectable>\r\n            <Table.Header fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell style={{ width: \"min-content\" }}>\r\n                  <Checkbox disabled />\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>Status</Table.HeaderCell>\r\n                <Table.HeaderCell>Name</Table.HeaderCell>\r\n                <Table.HeaderCell>ID</Table.HeaderCell>\r\n                <Table.HeaderCell>Image</Table.HeaderCell>\r\n                <Table.HeaderCell>Created at</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {containers.map((container) => (\r\n                <Table.Row key={container.id}>\r\n                  <Table.Cell>\r\n                    <Checkbox id={container.id} onChange={handlecheck} />\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    {(container.state === \"exited\" ||\r\n                      container.state === \"dead\") && (\r\n                      <Label color=\"red\">{container.state}</Label>\r\n                    )}\r\n                    {container.state === \"running\" && (\r\n                      <Label color=\"green\">{container.state}</Label>\r\n                    )}\r\n                    {(container.state === \"created\" ||\r\n                      container.state === \"restarting\" ||\r\n                      container.state === \"paused\") && (\r\n                      <Label color=\"yellow\">{container.state}</Label>\r\n                    )}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"warp-text\">\r\n                    {container.name}\r\n                  </Table.Cell>\r\n                  <Table.Cell>{container.id.substring(0, 12)}</Table.Cell>\r\n                  <Table.Cell>{container.name}</Table.Cell>\r\n                  <Table.Cell>{container.created}</Table.Cell>\r\n                </Table.Row>\r\n              ))}\r\n            </Table.Body>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ContainersPanel;\r\n","import { useRecoilValue } from \"recoil\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  Divider,\r\n  Checkbox,\r\n  Popup,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { imagesListState } from \"../../../recoil/Container\";\r\n\r\nconst ImagePanel = () => {\r\n  const imageList = useRecoilValue(imagesListState);\r\n  // console.log(imageList);\r\n  return (\r\n    <>\r\n      <div className=\"flex-box\">\r\n        {/* <Header dividing size=\"large\">\r\n          Action\r\n        </Header>\r\n        <Button.Group widths=\"2\">\r\n          <Popup\r\n            content=\"Remove unused images\"\r\n            position=\"bottom center\"\r\n            trigger={\r\n              <Button>\r\n                <Icon.Group>\r\n                  <Icon name=\"database\" />\r\n                  <Icon name=\"times\" corner />\r\n                </Icon.Group>\r\n                Purge\r\n              </Button>\r\n            }\r\n          />\r\n          <Button negative>\r\n            <Icon name=\"trash\" />\r\n            Remove Selected\r\n          </Button>\r\n        </Button.Group>\r\n        <Divider /> */}\r\n        <div className=\"flex-tab\">\r\n          <Table fixed compact=\"very\" basic=\"very\" selectable>\r\n            <Table.Header fullWidth>\r\n              <Table.Row>\r\n                {/* <Table.HeaderCell style={{ width: \"min-content\" }}>\r\n                  <Checkbox />\r\n                </Table.HeaderCell> */}\r\n                <Table.HeaderCell>ID</Table.HeaderCell>\r\n                <Table.HeaderCell>Tags</Table.HeaderCell>\r\n                <Table.HeaderCell>Size</Table.HeaderCell>\r\n                <Table.HeaderCell>Created</Table.HeaderCell>\r\n                <Table.HeaderCell width=\"1\" />\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {imageList.map((e) => (\r\n                <Table.Row key={e.Id}>\r\n                  {/* <Table.Cell>\r\n                    <Checkbox />\r\n                  </Table.Cell> */}\r\n                  <Table.Cell>{e.Id}</Table.Cell>\r\n                  <Table.Cell className=\"warp-text\">\r\n                    {e.RepoTags.join(\",\")}\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    {(e.Size / 1024 / 1024).toFixed(2)} MB\r\n                  </Table.Cell>\r\n                  <Table.Cell>{e.Created}</Table.Cell>\r\n                  <Table.Cell>\r\n                    <Icon name=\"arrow right\" />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              ))}\r\n            </Table.Body>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ImagePanel;\r\n","import { memo } from \"react\";\r\nimport { Popup, Header } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// this is trash\r\n// const derivePrecision = (min, total) => {\r\n//   let precisionPower = 0;\r\n//   let precision = 1;\r\n//   let ratio = min / total;\r\n//   while (precisionPower < 10) {\r\n//     ratio *= precision;\r\n//     if (ratio > 1) {\r\n//       break;\r\n//     }\r\n//     precision = (precisionPower++) ** 10;\r\n//   }\r\n//   return precision;\r\n// };\r\n\r\nconst getPercent = (value, total, precision) =>\r\n  precision > 0\r\n    ? Math.round(value * (10 * precision)) / (10 * precision)\r\n    : Math.round(value);\r\n\r\nconst StackedProgress = memo(({ total, data }) => {\r\n  const allZero = data.every((e) => e.value === 0);\r\n  // const autoPrecision = derivePrecision(\r\n  //   Math.min.apply(\r\n  //     null,\r\n  //     data.map((e) => e.value),\r\n  //   ),\r\n  //   total,\r\n  // );\r\n\r\n  const bar = data.map((e, i, { length }) => {\r\n    const percent = (e.value / total) * 100;\r\n    return (\r\n      <Popup\r\n        key={e.id}\r\n        position=\"top center\"\r\n        value={percent}\r\n        trigger={\r\n          <div\r\n            className=\"bar highlight\"\r\n            style={{\r\n              backgroundColor: allZero\r\n                ? \"transparent\"\r\n                : `#${e.id.substring(0, 6)}`,\r\n              width: `${percent}%`,\r\n              display:\r\n                allZero && i + 1 === length\r\n                  ? \"block\"\r\n                  : percent === 0\r\n                  ? \"none\"\r\n                  : \"block\",\r\n              minWidth: \"5px\",\r\n            }}\r\n          >\r\n            <div className=\"progress\">\r\n              {`${getPercent(percent, total, 2)}%`}\r\n            </div>\r\n          </div>\r\n        }\r\n      >\r\n        <Popup.Content>\r\n          <Header size=\"tiny\">\r\n            {e.name}\r\n            <Header.Subheader>{e.id}</Header.Subheader>\r\n          </Header>\r\n        </Popup.Content>\r\n      </Popup>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ui multiple progress\" style={{ margin: \"0px\" }}>\r\n        {bar}\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nStackedProgress.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default StackedProgress;\r\n","import { Card } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StackedProgress from \"./StackedProgress\";\r\n\r\nconst UsageCard = ({ data, title, labelSuffix, total }) => {\r\n  const sum = data.reduce((acc, b) => acc + b.value, 0).toFixed(2);\r\n  return (\r\n    <>\r\n      <Card.Group>\r\n        <Card fluid>\r\n          <Card.Content>\r\n            <Card.Header>\r\n              <span>{title}</span>\r\n              <span className=\"right floated\">{sum + labelSuffix}</span>\r\n            </Card.Header>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <StackedProgress total={total} data={data} />\r\n          </Card.Content>\r\n        </Card>\r\n      </Card.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nUsageCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  labelSuffix: PropTypes.string.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default UsageCard;\r\n","import { Icon, Card } from \"semantic-ui-react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport UsageCard from \"../../UsageCard\";\r\nimport {\r\n  containerListState,\r\n  containerNetworkListState,\r\n  containerUsageState,\r\n  imagesListState,\r\n} from \"../../../recoil/Container\";\r\n\r\nconst OverviewPanel = () => {\r\n  const containerUsage = useRecoilValue(containerUsageState);\r\n  const containerList = useRecoilValue(containerListState);\r\n  const networkList = useRecoilValue(containerNetworkListState);\r\n  const imagesList = useRecoilValue(imagesListState);\r\n\r\n  const cpuUsage = Object.entries(containerUsage).map(([id, value]) => ({\r\n    id: id.substr(0, 12),\r\n    name: value.name,\r\n    value: value.cpu,\r\n  }));\r\n\r\n  const memoryUsage = Object.entries(containerUsage).map(([id, value]) => ({\r\n    id: id.substr(0, 12),\r\n    name: value.name,\r\n    value: value.memory,\r\n  }));\r\n\r\n  const totalMemory = 1.94 * 1024;\r\n\r\n  return (\r\n    <div className=\"infosidebar\">\r\n      <UsageCard\r\n        total={400}\r\n        title=\"CPU Usage\"\r\n        labelSuffix=\"%\"\r\n        data={cpuUsage}\r\n      />\r\n      <UsageCard\r\n        total={totalMemory}\r\n        title=\"Memory Usage\"\r\n        labelSuffix={` MiB / ${totalMemory} MiB`}\r\n        data={memoryUsage}\r\n      />\r\n      <Card.Group centered className=\"horizontal\">\r\n        <Card style={{ width: \"170px\", alignItems: \"center\", minWidth: \"0px\" }}>\r\n          <div>\r\n            <Icon name=\"dice d6\" size=\"huge\" />\r\n          </div>\r\n          <Card.Content>\r\n            <Card.Header>{containerList.length}</Card.Header>\r\n            <Card.Description>Containers</Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n        <Card style={{ width: \"170px\", alignItems: \"center\", minWidth: \"0px\" }}>\r\n          <Icon name=\"window restore\" size=\"huge\" />\r\n          <Card.Content>\r\n            <Card.Header>{imagesList.length}</Card.Header>\r\n            <Card.Description>Images</Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n        <Card style={{ width: \"170px\", alignItems: \"center\", minWidth: \"0px\" }}>\r\n          <Icon name=\"sitemap\" size=\"huge\" />\r\n          <Card.Content>\r\n            <Card.Header>{networkList.length}</Card.Header>\r\n            <Card.Description>Networks</Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n      </Card.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewPanel;\r\n","import {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Legend,\r\n} from \"recharts\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport {\r\n  selectedContainerState,\r\n  containerUsageState,\r\n} from \"../../../recoil/Container\";\r\n\r\nconst statuslist = {\r\n  conatinerId: \"\",\r\n  status: [...Array(50)].map(() => ({\r\n    time: null,\r\n    cpu: 0,\r\n    memory: 0,\r\n  })),\r\n};\r\n\r\nconst StatusPanel = () => {\r\n  const selectedContainer = useRecoilValue(selectedContainerState);\r\n  const containerUsage = useRecoilValue(containerUsageState);\r\n\r\n  console.log(statuslist);\r\n  if (selectedContainer.data.id === statuslist.conatinerId) {\r\n    statuslist.status.shift();\r\n    statuslist.status.push({\r\n      time: null,\r\n      cpu: containerUsage[selectedContainer.data.id].cpu,\r\n      memory: containerUsage[selectedContainer.data.id].memory,\r\n    });\r\n  } else {\r\n    statuslist.conatinerId = selectedContainer.data.id;\r\n    statuslist.status = [...Array(50)].map(() => ({\r\n      time: null,\r\n      cpu: 0,\r\n      memory: 0,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex-box\">\r\n        <h1>CPU</h1>\r\n        <ResponsiveContainer maxHeight={300}>\r\n          <LineChart\r\n            data={statuslist.status}\r\n            margin={{\r\n              top: 10,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"time\" />\r\n            <YAxis type=\"number\" domain={[0, 100]} />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line\r\n              type=\"linear\"\r\n              dataKey=\"cpu\"\r\n              stroke=\"#8884d8\"\r\n              isAnimationActive={false}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n        <h1>Memory</h1>\r\n        <ResponsiveContainer maxHeight={300}>\r\n          <LineChart\r\n            data={statuslist.status}\r\n            margin={{\r\n              top: 10,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"time\" />\r\n            <YAxis type=\"number\" domain={[0, 8192]} />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line\r\n              type=\"linear\"\r\n              dataKey=\"memory\"\r\n              stroke=\"#8884d8\"\r\n              isAnimationActive={false}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatusPanel;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Menu,\r\n  Segment,\r\n  Icon,\r\n  Tab,\r\n  Header,\r\n  Button,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\n\r\nconst panes = [\r\n  {\r\n    menuItem: (\r\n      <Menu.Item name=\"registry\">\r\n        <Icon name=\"download\" />\r\n        Pull from registry\r\n      </Menu.Item>\r\n    ),\r\n    render: () => (\r\n      <Tab.Pane>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Input label=\"Registry\" placeholder=\"docker.io\" width=\"16\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Input\r\n              label=\"Image\"\r\n              placeholder=\"hello-world:latest\"\r\n              width=\"16\"\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" positive>\r\n            Pull\r\n          </Button>\r\n        </Form>\r\n      </Tab.Pane>\r\n    ),\r\n  },\r\n  {\r\n    menuItem: (\r\n      <Menu.Item name=\"package\">\r\n        <Icon name=\"upload\" />\r\n        Upload tar/zip\r\n      </Menu.Item>\r\n    ),\r\n    render: () => (\r\n      <Tab.Pane>\r\n        <Segment placeholder>\r\n          <Header icon>\r\n            <Icon name=\"file archive\" />\r\n            Drag file here or click to browse\r\n          </Header>\r\n          <Button primary>Browse</Button>\r\n        </Segment>\r\n      </Tab.Pane>\r\n    ),\r\n  },\r\n  {\r\n    menuItem: (\r\n      <Menu.Item name=\"editor\">\r\n        <Icon name=\"code\" />\r\n        Editor\r\n      </Menu.Item>\r\n    ),\r\n    render: () => <Tab.Pane>Monaco editor here</Tab.Pane>,\r\n  },\r\n];\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst AddImage = ({ trigger }) => (\r\n  <>\r\n    <Modal size=\"large\" trigger={trigger}>\r\n      <Modal.Header>\r\n        <Icon.Group>\r\n          <Icon name=\"window restore\" />\r\n          <Icon name=\"add\" corner />\r\n        </Icon.Group>\r\n        <span> Add Images</span>\r\n      </Modal.Header>\r\n      <Modal.Content scrolling>\r\n        <Tab\r\n          menu={{ pointing: true, widths: \"3\", icon: \"labeled\" }}\r\n          panes={panes}\r\n        />\r\n      </Modal.Content>\r\n    </Modal>\r\n  </>\r\n);\r\nexport default AddImage;\r\n","import { toast } from \"react-toastify\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  Header,\r\n  Icon,\r\n  Table,\r\n} from \"semantic-ui-react\";\r\nimport { containerNetworkListState } from \"../../../recoil/Container\";\r\nimport { networksSocket } from \"../../../recoil/Socketio\";\r\nimport ConfirmModal from \"../../ConfirmModal\";\r\n\r\nconst selectedNetowrksId = new Set([]);\r\n\r\nconst ImagePanel = () => {\r\n  const networksList = useRecoilValue(containerNetworkListState);\r\n  const networkSocket = useRecoilValue(networksSocket);\r\n\r\n  const sorted = [...networksList].sort((a, b) => a.Id > b.Id);\r\n\r\n  const handlecheck = (e, { checked, id }) => {\r\n    if (checked) selectedNetowrksId.add(id);\r\n    else selectedNetowrksId.delete(id);\r\n  };\r\n\r\n  const deleteNetowrk = (confirm) => {\r\n    if (!confirm) return;\r\n    selectedNetowrksId.forEach((id) => {\r\n      networkSocket.emit(\"remove\", id);\r\n      toast.info(`🗑️ Removing Network: ${id.substring(0, 12)}`);\r\n    });\r\n    selectedNetowrksId.clear();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"flex-box\">\r\n        <Header dividing size=\"large\">\r\n          Action\r\n        </Header>\r\n        <Button.Group widths=\"2\">\r\n          <ConfirmModal\r\n            trigger={\r\n              <Button negative>\r\n                <Icon name=\"trash\" />\r\n                Remove\r\n              </Button>\r\n            }\r\n            confirmCallback={(choose) => deleteNetowrk(choose)}\r\n          />\r\n        </Button.Group>\r\n        <Divider />\r\n        <div className=\"flex-tab\">\r\n          <Table fixed compact=\"very\" basic=\"very\" selectable>\r\n            <Table.Header fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell style={{ width: \"min-content\" }}>\r\n                  <Checkbox disabled />\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>ID</Table.HeaderCell>\r\n                <Table.HeaderCell>Name</Table.HeaderCell>\r\n                <Table.HeaderCell>Driver</Table.HeaderCell>\r\n                <Table.HeaderCell>Created</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {sorted.map((e) => (\r\n                <Table.Row key={e.Id}>\r\n                  <Table.Cell>\r\n                    <Checkbox id={e.Id} onChange={handlecheck} />\r\n                  </Table.Cell>\r\n                  <Table.Cell>{e.Id}</Table.Cell>\r\n                  <Table.Cell className=\"warp-text\">{e.Name}</Table.Cell>\r\n                  <Table.Cell>{e.Driver}</Table.Cell>\r\n                  <Table.Cell>{e.Created}</Table.Cell>\r\n                </Table.Row>\r\n              ))}\r\n            </Table.Body>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ImagePanel;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport { recipesSocket } from \"../../../../recoil/Socketio\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst RecipesBrowser = ({ handleClick }) => {\r\n  const recipeSocket = useRecoilValue(recipesSocket);\r\n  const [recipeList, setRecipeList] = useState([]);\r\n  useEffect(() => {\r\n    recipeSocket.emit(\"list\", (ack) => {\r\n      setRecipeList(ack);\r\n    });\r\n  }, [recipeSocket]);\r\n  return (\r\n    <Card.Group>\r\n      {recipeList.map((name) => (\r\n        <Card key={name} id={name} header={name} onClick={handleClick} />\r\n      ))}\r\n    </Card.Group>\r\n  );\r\n};\r\n\r\nexport default RecipesBrowser;\r\n","import React from \"react\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\nimport { Divider, Header } from \"semantic-ui-react\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nexport default ({ nestIndex, control, register, getValues }) => {\r\n  const { fields, remove, append } = useFieldArray({\r\n    control,\r\n    name: `envvar.${nestIndex}.nestedArray`,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {fields.map((item, k) => (\r\n        <div key={item.id} className=\"field\">\r\n          <Header\r\n            as=\"h4\"\r\n            content={getValues(`envvar.${nestIndex}.nestedArray.${k}.key`)}\r\n            subheader={getValues(`envvar.${nestIndex}.nestedArray.${k}.desc`)}\r\n          />\r\n          <input\r\n            required={getValues(\r\n              `envvar.${nestIndex}.nestedArray.${k}.required`,\r\n            )}\r\n            type={\r\n              getValues(`envvar.${nestIndex}.nestedArray.${k}.type`) ===\r\n              \"password\"\r\n                ? \"password\"\r\n                : \"text\"\r\n            }\r\n            {...register(`envvar.${nestIndex}.nestedArray.${k}.value`)}\r\n          />\r\n        </div>\r\n      ))}\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport NestedArray from \"./nestedFieldArray\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nexport default function Fields({ control, register, setValue, getValues }) {\r\n  const { fields, append, remove, prepend } = useFieldArray({\r\n    control,\r\n    name: \"envvar\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {fields.map((item, index) => (\r\n          <li key={item.id}>\r\n            <Header as=\"h2\" content={getValues(`envvar.${index}.name`)} />\r\n            <NestedArray\r\n              nestIndex={index}\r\n              {...{ control, register, getValues }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { Divider, Form, Header } from \"semantic-ui-react\";\r\nimport { recipesSocket } from \"../../../../recoil/Socketio\";\r\nimport FieldArray from \"../../../form/fieldArray\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst RecipeSetting = ({ recipeName, handleClose }) => {\r\n  const recipeSocket = useRecoilValue(recipesSocket);\r\n\r\n  const { handleSubmit, control, register, getValues, setValue, reset } =\r\n    useForm();\r\n  const { fields: variablesFields } = useFieldArray({\r\n    control,\r\n    name: \"variables\",\r\n  });\r\n\r\n  const [recipeCanonicalId, setRecipeCanonicalId] = useState(\"\");\r\n\r\n  const onSubmit = (data) => {\r\n    const { prefix, variables, envvar } = data;\r\n    const variablesArgs = Object.assign(\r\n      {},\r\n      ...variables.map((vars) => ({\r\n        [vars.key]: vars.value,\r\n      })),\r\n    );\r\n\r\n    const envArgs = Object.assign(\r\n      {},\r\n      ...envvar.map((container) => ({\r\n        [container.name]: Object.assign(\r\n          {},\r\n          ...container.nestedArray.flatMap((env) =>\r\n            env.value !== \"\" ? { [env.key]: env.value } : [],\r\n          ),\r\n        ),\r\n      })),\r\n    );\r\n    console.log(\"sended\");\r\n    recipeSocket.emit(\r\n      \"craft\",\r\n      recipeCanonicalId,\r\n      prefix,\r\n      variablesArgs,\r\n      envArgs,\r\n    );\r\n\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (recipeSocket)\r\n      recipeSocket.emit(\"get_recipe\", recipeName, (ack) => {\r\n        const recipeJson = JSON.parse(ack);\r\n        setRecipeCanonicalId(recipeJson.canonical_id);\r\n        const defaultvalue = {\r\n          variables: recipeJson.variables.map((vars) => ({\r\n            key: vars.key,\r\n            desc: vars.description,\r\n            value: vars.default,\r\n            type: vars.type,\r\n            required: vars.required,\r\n          })),\r\n          envvar: recipeJson.containers.map((c) => ({\r\n            name: c.name,\r\n            nestedArray: c.environment_variables.map((env) => ({\r\n              key: env.key,\r\n              desc: env.description,\r\n              value: env.default,\r\n              type: env.type,\r\n              required: env.required,\r\n            })),\r\n          })),\r\n        };\r\n        reset(defaultvalue);\r\n      });\r\n  }, [recipeSocket]);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit(onSubmit)} id=\"recipe-form\">\r\n      <Header as=\"h1\" content=\"Recipe Settings\" />\r\n      <Divider />\r\n      <Header\r\n        as=\"h3\"\r\n        content=\"Prefix name\"\r\n        subheader=\"For conatiner group prefix name\"\r\n      />\r\n      <input type=\"text\" required {...register(`prefix`)} />\r\n      <Header as=\"h1\" content=\"Variables\" />\r\n      <Divider />\r\n      {variablesFields.map((item, index) => (\r\n        <div key={item.id} className=\"field\">\r\n          <Header as=\"h3\" content={item.key} subheader={item.desc} />\r\n          <input\r\n            type=\"text\"\r\n            placeholder={item.desc}\r\n            {...register(`variables.${index}.value`)}\r\n            required={item.required}\r\n          />\r\n        </div>\r\n      ))}\r\n      <Header as=\"h1\" content=\"Environment Variables\" />\r\n      <Divider />\r\n      <FieldArray {...{ control, register, getValues, setValue }} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default RecipeSetting;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Modal, Icon, Button } from \"semantic-ui-react\";\r\nimport ModeSelection from \"./recipe/ModeSelection\";\r\nimport RecipesBrowser from \"./recipe/RecipesBrowser\";\r\nimport RecipeSetting from \"./recipe/RecipeSetting\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst RecipeModel = ({ trigger }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedRecipe, setSelectedRecipe] = useState(\"\");\r\n\r\n  const handleRecipeSelectClick = (e, { id }) => {\r\n    setSelectedRecipe(id);\r\n  };\r\n\r\n  // clear state\r\n  const handleClose = () => {\r\n    setSelectedRecipe(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  let view;\r\n  view = <RecipesBrowser handleClick={handleRecipeSelectClick} />;\r\n  if (selectedRecipe !== \"\")\r\n    view = (\r\n      <RecipeSetting recipeName={selectedRecipe} handleClose={handleClose} />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"large\"\r\n        trigger={trigger}\r\n        onOpen={() => setOpen(true)}\r\n        onClose={() => handleClose()}\r\n        open={open}\r\n      >\r\n        <Modal.Header>\r\n          <Icon.Group>\r\n            <Icon name=\"window restore\" />\r\n            <Icon name=\"add\" corner />\r\n          </Icon.Group>\r\n          <span> Recipe Wizard</span>\r\n        </Modal.Header>\r\n        <Modal.Content scrolling>{view}</Modal.Content>\r\n        <Modal.Actions>\r\n          {selectedRecipe !== \"\" && (\r\n            <Button positive form=\"recipe-form\">\r\n              <Icon name=\"plus\" />\r\n              Create\r\n            </Button>\r\n          )}\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default RecipeModel;\r\n","import { useRef, useEffect } from \"react\";\r\nimport { FitAddon } from \"xterm-addon-fit\";\r\nimport { XTerm } from \"xterm-for-react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { containersSocket } from \"../../../recoil/Socketio\";\r\nimport { selectedContainerState } from \"../../../recoil/Container\";\r\n\r\nconst LogsPanel = () => {\r\n  const term = useRef(null);\r\n  const fitAddon = new FitAddon();\r\n\r\n  const contianerSocket = useRecoilValue(containersSocket);\r\n\r\n  const selectedContainer = useRecoilValue(selectedContainerState);\r\n\r\n  useEffect(() => {\r\n    term.current.terminal.clear();\r\n    contianerSocket.emit(\"listen_logs\", selectedContainer.data.id, {\r\n      tail: 200,\r\n    });\r\n    contianerSocket.on(\"logs\", (line) => {\r\n      term.current.terminal.writeln(line);\r\n    });\r\n\r\n    return () => {\r\n      contianerSocket.emit(\"stop_listen_logs\", selectedContainer.data.id);\r\n      contianerSocket.removeAllListeners(\"logs\");\r\n    };\r\n  }, [selectedContainer]);\r\n\r\n  useEffect(() => {\r\n    fitAddon.fit();\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"flex-box\">\r\n        <XTerm\r\n          className=\"flex-tab\"\r\n          options={{ convertEol: true }}\r\n          ref={term}\r\n          addons={[fitAddon]}\r\n          onResize={fitAddon.fit()}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogsPanel;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Button,\r\n  Header,\r\n  Grid,\r\n  Segment,\r\n  Input,\r\n} from \"semantic-ui-react\";\r\nimport { recipesSocket } from \"../../../recoil/Socketio\";\r\n// eslint-disable-next-line react/prop-types\r\nconst UploadRecipe = ({ trigger }) => {\r\n  const recipeSocket = useRecoilValue(recipesSocket);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleFiles = ({ target: { files } }) => {\r\n    if (files[0]) {\r\n      const reader = new FileReader();\r\n      reader.onload = (evt) => {\r\n        recipeSocket.emit(\"upload\", evt.target.result);\r\n        setOpen(false);\r\n      };\r\n      reader.readAsArrayBuffer(files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"large\"\r\n        trigger={trigger}\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n      >\r\n        <Modal.Header>\r\n          <Icon.Group>\r\n            <Icon name=\"window restore\" />\r\n            <Icon name=\"add\" corner />\r\n          </Icon.Group>\r\n          <span> Recipe Wizard</span>\r\n        </Modal.Header>\r\n        <Modal.Content scrolling>\r\n          <Segment placeholder>\r\n            <Grid columns=\"2\" stackable textAlign=\"center\">\r\n              <Grid.Row verticalAlign=\"middle\">\r\n                <Grid.Column>\r\n                  <Header>\r\n                    <div>\r\n                      <Icon.Group size=\"huge\">\r\n                        <Icon name=\"upload\" />\r\n                        <Icon corner=\"bottom right\" name=\"scroll\" />\r\n                      </Icon.Group>\r\n                    </div>\r\n                    <br />\r\n                    Upload recipe zip\r\n                  </Header>\r\n                  <Input\r\n                    id=\"file-upload\"\r\n                    type=\"file\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={handleFiles}\r\n                  />\r\n                  <Button as=\"label\" primary htmlFor=\"file-upload\">\r\n                    Select File\r\n                  </Button>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default UploadRecipe;\r\n","import { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { Icon, Menu, Divider } from \"semantic-ui-react\";\r\nimport { selectedContainerState } from \"../../recoil/Container\";\r\nimport { selectedMenuItemState } from \"../../recoil/Menu\";\r\nimport ContainersPanel from \"./panel/ContainersPanel\";\r\nimport ImagePanel from \"./panel/ImagesPanel\";\r\nimport OverviewPanel from \"./panel/OverviewPanel\";\r\nimport AttachPanel from \"./panel/AttachPanel\";\r\nimport StatusPanel from \"./panel/StatusPanel\";\r\nimport AddImage from \"./model/AddImage\";\r\nimport AddContainer from \"./model/AddContainer\";\r\nimport NetworkPanel from \"./panel/networkPanel\";\r\nimport RecipeModel from \"./model/RecipeModel\";\r\nimport LogsPanel from \"./panel/LogsPanel\";\r\nimport UploadRecipe from \"./model/UploadRecipe\";\r\n\r\nconst menuItems = [\r\n  {\r\n    key: \"overview\",\r\n    type: \"host\",\r\n    name: \"Overview\",\r\n    icon: \"desktop\",\r\n    panel: <OverviewPanel />,\r\n  },\r\n  {\r\n    key: \"containers\",\r\n    type: \"host\",\r\n    name: \"Containers\",\r\n    icon: \"dice d6\",\r\n    panel: <ContainersPanel />,\r\n  },\r\n  {\r\n    key: \"images\",\r\n    type: \"host\",\r\n    name: \"Images\",\r\n    icon: \"window restore\",\r\n    panel: <ImagePanel />,\r\n  },\r\n  {\r\n    key: \"networks\",\r\n    type: \"host\",\r\n    name: \"Networks\",\r\n    icon: \"sitemap\",\r\n    panel: <NetworkPanel />,\r\n  },\r\n  {\r\n    key: \"status\",\r\n    type: \"container\",\r\n    name: \"Status\",\r\n    icon: \"chart area\",\r\n    panel: <StatusPanel />,\r\n  },\r\n  // {\r\n  //   key: \"terminal\",\r\n  //   type: \"container\",\r\n  //   name: \"Terminal\",\r\n  //   icon: \"terminal\",\r\n  //   panel: <AttachPanel />,\r\n  // },\r\n  {\r\n    key: \"logs\",\r\n    type: \"container\",\r\n    name: \"Logs\",\r\n    icon: \"stream\",\r\n    panel: <LogsPanel />,\r\n  },\r\n  // { key: \"inspect\", type: \"container\", name: \"Inspect\", icon: \"search\" },\r\n  // { key: \"setting\", type: \"container\", name: \"Settings\", icon: \"wrench\" },\r\n\r\n  // {\r\n  //   key: \"CreateContainer\",\r\n  //   type: \"action\",\r\n  //   name: \"Create Container\",\r\n  //   icon: \"dice d6\",\r\n  //   cornerIcon: \"add\",\r\n  //   panel: (trigger) => (\r\n  //     <AddContainer key=\"CreateContainer\" trigger={trigger} />\r\n  //   ),\r\n  // },\r\n  // {\r\n  //   key: \"CreateImage\",\r\n  //   type: \"action\",\r\n  //   name: \"Create Images\",\r\n  //   icon: \"window restore\",\r\n  //   cornerIcon: \"add\",\r\n  //   panel: (trigger) => <AddImage key=\"CreateImage\" trigger={trigger} />,\r\n  // },\r\n  {\r\n    key: \"UploadRecipe\",\r\n    type: \"action\",\r\n    name: \"Upload Recipe\",\r\n    icon: \"upload\",\r\n    cornerIcon: \"scroll\",\r\n    panel: (trigger) => <UploadRecipe key=\"CreateImage\" trigger={trigger} />,\r\n  },\r\n  {\r\n    key: \"CreateRecipe\",\r\n    type: \"action\",\r\n    name: \"Create Recipe\",\r\n    icon: \"scroll\",\r\n    cornerIcon: \"add\",\r\n    panel: (trigger) => <RecipeModel key=\"CreateRecipe\" trigger={trigger} />,\r\n  },\r\n];\r\n// eslint-disable-next-line react/prop-types\r\nconst SidebarMenu = ({ selectedPanel }) => {\r\n  const setSelectedMenuItem = useSetRecoilState(selectedMenuItemState);\r\n\r\n  const handleMouseClickPanel = (e, { _key }) => {\r\n    setSelectedMenuItem((prev) => {\r\n      if (prev.key === _key)\r\n        return { key: false, type: false, name: false, panel: null, icon: \"\" };\r\n      return menuItems.find((x) => x.key === _key);\r\n    });\r\n  };\r\n\r\n  const handleMouseClickModel = (e, { _key }) => {\r\n    console.log(\"clicking\");\r\n    // menuItems.find((x) => x.key === _key).panel(true);\r\n    // setSelectedMenuItem((prev) => {\r\n    //   if (prev.key === _key)\r\n    //     return { key: false, type: false, name: false, panel: null, icon: \"\" };\r\n    //   return menuItems.find((x) => x.key === _key);\r\n    // });\r\n  };\r\n\r\n  const selectedContainer = useRecoilValue(selectedContainerState);\r\n\r\n  return (\r\n    <Menu icon vertical compact>\r\n      {menuItems\r\n        .filter((item) => item.type === \"host\")\r\n        .map((item) => (\r\n          <Menu.Item\r\n            key={item.key}\r\n            _key={item.key}\r\n            name={item.name}\r\n            active={selectedPanel === item.name}\r\n            onClick={handleMouseClickPanel}\r\n          >\r\n            <div>\r\n              <Icon.Group>\r\n                <Icon name={item.icon} size=\"large\" />\r\n                {item.cornerIcon && <Icon name={item.cornerIcon} corner />}\r\n              </Icon.Group>\r\n            </div>\r\n          </Menu.Item>\r\n        ))}\r\n      <Divider fitted />\r\n      <Divider hidden />\r\n      {menuItems\r\n        .filter((item) => item.type === \"container\")\r\n        .map((item) => (\r\n          <Menu.Item\r\n            key={item.key}\r\n            _key={item.key}\r\n            name={item.name}\r\n            active={selectedPanel === item.name}\r\n            onClick={handleMouseClickPanel}\r\n            disabled={!selectedContainer}\r\n          >\r\n            <div>\r\n              <Icon.Group>\r\n                <Icon name={item.icon} size=\"large\" />\r\n                {item.cornerIcon && <Icon name={item.cornerIcon} corner />}\r\n              </Icon.Group>\r\n            </div>\r\n          </Menu.Item>\r\n        ))}\r\n      <Divider fitted />\r\n      <Divider hidden />\r\n      {menuItems\r\n        .filter((item) => item.type === \"action\")\r\n        .map((item) =>\r\n          item.panel(\r\n            <Menu.Item\r\n              key={item.key}\r\n              _key={item.key}\r\n              name={item.name}\r\n              active={selectedPanel === item.name}\r\n              onClick={handleMouseClickModel}\r\n            >\r\n              <div>\r\n                <Icon.Group>\r\n                  <Icon name={item.icon} size=\"large\" />\r\n                  {item.cornerIcon && <Icon name={item.cornerIcon} corner />}\r\n                </Icon.Group>\r\n              </div>\r\n            </Menu.Item>,\r\n          ),\r\n        )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default SidebarMenu;\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport {\r\n  containerListState,\r\n  containerNetworkListState,\r\n  containerStatsListState,\r\n  imagesListState,\r\n} from \"../recoil/Container\";\r\n\r\nconst StatusNag = () => {\r\n  const containerList = useRecoilValue(containerListState);\r\n  const containerStatsList = useRecoilValue(containerStatsListState);\r\n  const containerNetworkList = useRecoilValue(containerNetworkListState);\r\n  const imagesList = useRecoilValue(imagesListState);\r\n\r\n  const [visable, setVisable] = useState(true);\r\n  const [conatinerStatus, setConatinerStatus] = useState(false);\r\n  const [statsStatus, setStatsStatus] = useState(false);\r\n  const [netowrkStatus, setNetowrkStatus] = useState(false);\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n\r\n  const handleClose = () => setVisable(false);\r\n\r\n  useEffect(() => {\r\n    if (containerList.length !== 0) setConatinerStatus(true);\r\n  }, [containerList]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(containerStatsList).length !== 0) setStatsStatus(true);\r\n  }, [containerStatsList]);\r\n\r\n  useEffect(() => {\r\n    if (containerNetworkList.length !== 0) setNetowrkStatus(true);\r\n  }, [containerNetworkList]);\r\n\r\n  useEffect(() => {\r\n    if (imagesList.length !== 0) setImageStatus(true);\r\n  }, [imagesList]);\r\n\r\n  useEffect(() => {\r\n    if (conatinerStatus && statsStatus && netowrkStatus && imageStatus)\r\n      setVisable(false);\r\n  }, [conatinerStatus, statsStatus, netowrkStatus, imageStatus]);\r\n\r\n  return (\r\n    <>\r\n      {visable && (\r\n        <div className=\"ui status overlay nag\">\r\n          <div className=\"title\">\r\n            {conatinerStatus ? (\r\n              <Icon name=\"check\" color=\"green\" />\r\n            ) : (\r\n              <Icon name=\"x\" color=\"red\" />\r\n            )}\r\n            <span>Container List </span>\r\n            {statsStatus ? (\r\n              <Icon name=\"check\" color=\"green\" />\r\n            ) : (\r\n              <Icon name=\"x\" color=\"red\" />\r\n            )}\r\n            <span>Stats List </span>\r\n            {netowrkStatus ? (\r\n              <Icon name=\"check\" color=\"green\" />\r\n            ) : (\r\n              <Icon name=\"x\" color=\"red\" />\r\n            )}\r\n            <span>Network List </span>\r\n            {imageStatus ? (\r\n              <Icon name=\"check\" color=\"green\" />\r\n            ) : (\r\n              <Icon name=\"x\" color=\"red\" />\r\n            )}\r\n            <span>Image List </span>\r\n          </div>\r\n          <Icon name=\"close\" onClick={handleClose} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// StatusNag.propTypes = {};\r\n\r\nexport default StatusNag;\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst SocketStatusNag = ({ visable }) => (\r\n  <>\r\n    {!visable && (\r\n      <div className=\"ui red status overlay nag\">\r\n        <div className=\"title\">\r\n          <span>\r\n            Couldn&apos;t connect to IDM (Check your connection and try again.)\r\n          </span>\r\n          {/* {conatinerStatus ? (\r\n              <Icon name=\"check\" color=\"green\" />\r\n            ) : (\r\n              <Icon name=\"x\" color=\"red\" />\r\n            )}\r\n            <span>Container List </span> */}\r\n        </div>\r\n        {/* <Icon name=\"close\" onClick={handleClose} /> */}\r\n      </div>\r\n    )}\r\n  </>\r\n);\r\n\r\n// StatusNag.propTypes = {};\r\n\r\nexport default SocketStatusNag;\r\n","// no time\r\nconst keyDict = {\r\n  SUCCESS: \"✔️ Success!\",\r\n  RECIPE_UNPACKING: \"⌛ Recipe Unpacking.\",\r\n  RECIPE_EXTRACT_FINISHED: \"✔️ Recipe Extract Finished.\",\r\n  RECIPE_IMPORT_FINISHED: \"✔️ Recipe Import Finished.\",\r\n  CRAFT_PREPARE: \"⌛ Preparing.\",\r\n  CRAFT_PULLING_IMAGE: \"🖼️ Pulling Images.\",\r\n  CRAFT_NETWORK_CREATED: \"🌐 Network Created.\",\r\n  CRAFT_CONTAINER_CREATED: \"📦 Container Created.\",\r\n  CRAFT_FINISHED: \"✔️ Recipe Deployed!\",\r\n  BAD_ZIPFILE: \"❌ Bad Zip(might corrupted or wrong file)\",\r\n  INCORRECT_RECIPE_STRUCTURE: \"❌ Incorrect Recipe Structure.\",\r\n  MISSING_RECIPE_FILE: \"❌ Missing Recipe File.(Can't find recipe.json)\",\r\n  INCORRECT_RECIPE_JSON_FORMAT: \"❌ Incorrect Recipe Json Format.\",\r\n  NO_SUCH_RECIPE: \"❌ no\",\r\n  MISSING_VARIABLE: \"❌ Missing Variable.\",\r\n  BAD_PREFIX_NAME: \"❌ Prefix must be [a-z_]+\",\r\n};\r\nconst formatter = (key, msg = \"\") => `${keyDict[key]} ${msg}`;\r\n\r\nexport default formatter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Sidebar } from \"semantic-ui-react\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { ReactFlowProvider } from \"react-flow-renderer\";\r\nimport { toast } from \"react-toastify\";\r\nimport SidebarPanel from \"../sidebar/Sidebar\";\r\nimport GraphBoard from \"../flowboard/GraphBoard\";\r\nimport SidebarMenu from \"../sidebar/Menu\";\r\nimport { selectedMenuItemState } from \"../../recoil/Menu\";\r\nimport {\r\n  containerListState,\r\n  containerNetworkListState,\r\n  containerStatsListState,\r\n  imagesListState,\r\n} from \"../../recoil/Container\";\r\nimport {\r\n  containersSocket,\r\n  imagesSocket,\r\n  networksSocket,\r\n  recipesSocket,\r\n} from \"../../recoil/Socketio\";\r\nimport StatusNag from \"../StatusNag\";\r\nimport SocketStatusNag from \"../SocketStatusNag\";\r\nimport formatter from \"../../utils/Message\";\r\n\r\nconst Main = () => {\r\n  const selectedMenuItem = useRecoilValue(selectedMenuItemState);\r\n\r\n  const setContainerListState = useSetRecoilState(containerListState);\r\n  const setContainerStatsListState = useSetRecoilState(containerStatsListState);\r\n  const setContainerNetworkListState = useSetRecoilState(\r\n    containerNetworkListState,\r\n  );\r\n  const setImagesListState = useSetRecoilState(imagesListState);\r\n\r\n  const recipeSocket = useRecoilValue(recipesSocket);\r\n  const setContainerSocket = useSetRecoilState(containersSocket);\r\n  const setImagesSocket = useSetRecoilState(imagesSocket);\r\n  const setNetworksSocket = useSetRecoilState(networksSocket);\r\n  const setRecipesSocket = useSetRecoilState(recipesSocket);\r\n\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const wsContainer = io(\"http://127.0.0.1:4636/containers\");\r\n\r\n    wsContainer.on(\"connect\", () => {\r\n      console.log(wsContainer.id);\r\n      setIsConnected(true);\r\n    });\r\n\r\n    wsContainer.on(\"disconnect\", () => {\r\n      setIsConnected(false);\r\n    });\r\n\r\n    const listTimer = setInterval(() => {\r\n      wsContainer.volatile.emit(\"list\", { all: true }, (ack) => {\r\n        setContainerListState(ack);\r\n      });\r\n    }, 5000);\r\n\r\n    const statsTimer = setInterval(() => {\r\n      wsContainer.volatile.emit(\"list_stats\", (ack) => {\r\n        setContainerStatsListState(ack);\r\n      });\r\n    }, 7000);\r\n\r\n    setContainerSocket(wsContainer);\r\n\r\n    return () => {\r\n      clearInterval(listTimer);\r\n      clearInterval(statsTimer);\r\n      wsContainer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const wsNetwork = io(\"http://127.0.0.1:4636/networks\");\r\n    wsNetwork.on(\"connect\", () => {\r\n      console.log(wsNetwork.id);\r\n    });\r\n\r\n    const listTimer = setInterval(() => {\r\n      wsNetwork.volatile.emit(\"list\", {}, (ack) => {\r\n        setContainerNetworkListState(ack);\r\n      });\r\n    }, 3000);\r\n\r\n    setNetworksSocket(wsNetwork);\r\n\r\n    return () => {\r\n      clearInterval(listTimer);\r\n      wsNetwork.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const wsImage = io(\"http://127.0.0.1:4636/images\");\r\n    wsImage.on(\"connect\", () => {\r\n      console.log(wsImage.id);\r\n    });\r\n\r\n    const listTimer = setInterval(() => {\r\n      wsImage.volatile.emit(\"list\", (ack) => {\r\n        setImagesListState(ack);\r\n      });\r\n    }, 4000);\r\n\r\n    setImagesSocket(wsImage);\r\n\r\n    return () => {\r\n      clearInterval(listTimer);\r\n      wsImage.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const wsRecipe = io(\"http://127.0.0.1:4636/recipes\");\r\n    wsRecipe.on(\"connect\", () => {\r\n      console.log(wsRecipe.id);\r\n    });\r\n\r\n    setRecipesSocket(wsRecipe);\r\n\r\n    return () => {\r\n      wsRecipe.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (recipeSocket) {\r\n      recipeSocket.on(\"message\", (msg) => {\r\n        toast.info(formatter(msg.message));\r\n      });\r\n    }\r\n    return () => {\r\n      if (recipeSocket) {\r\n        recipeSocket.removeAllListeners(\"message\");\r\n      }\r\n    };\r\n  }, [recipeSocket]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app\">\r\n        <StatusNag />\r\n        <SocketStatusNag visable={isConnected} />\r\n        <Sidebar.Pushable style={{ flexGrow: \"1\" }}>\r\n          <Sidebar\r\n            animation=\"overlay\"\r\n            direction=\"right\"\r\n            visible={!!selectedMenuItem.name}\r\n            className=\"with-toolbar\"\r\n            style={{ overflow: \"hidden\" }}\r\n          >\r\n            <SidebarPanel selectedPanel={selectedMenuItem} />\r\n          </Sidebar>\r\n          <Sidebar.Pusher style={{ height: \"100%\" }}>\r\n            <ReactFlowProvider>\r\n              <GraphBoard />\r\n            </ReactFlowProvider>\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n        <SidebarMenu selectedPanel={selectedMenuItem.name} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect } from \"react\";\r\nimport { RecoilRoot, useRecoilSnapshot } from \"recoil\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/pages/Main\";\r\n\r\n// function DebugObserver() {\r\n//   const snapshot = useRecoilSnapshot();\r\n//   useEffect(() => {\r\n//     console.debug(\"The following atoms were modified:\");\r\n//     // eslint-disable-next-line no-restricted-syntax\r\n//     for (const node of snapshot.getNodes_UNSTABLE({ isModified: true })) {\r\n//       console.debug(node.key, snapshot.getLoadable(node));\r\n//     }\r\n//   }, [snapshot]);\r\n//   return null;\r\n// }\r\n\r\nconst App = () => (\r\n  <RecoilRoot>\r\n    {/* <DebugObserver /> */}\r\n    <ToastContainer position=\"top-left\" />\r\n    <Main />\r\n  </RecoilRoot>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"fomantic-ui-css/semantic.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}