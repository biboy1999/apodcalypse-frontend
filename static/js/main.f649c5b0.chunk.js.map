{"version":3,"sources":["recoil/Container.js","components/sidebar/Sidebar.jsx","components/TopLabelProgress.jsx","components/flowboard/LabelNodeHandle.jsx","components/flowboard/ContainerNode.jsx","components/flowboard/NetworkNode.jsx","utils/GraphUtils.js","recoil/Graph.js","recoil/Socketio.js","components/flowboard/ContextMenu.jsx","components/flowboard/GraphBoard.jsx","recoil/Menu.js","components/ConfirmModal.jsx","components/sidebar/panel/ContainersPanel.jsx","components/sidebar/panel/ImagesPanel.jsx","components/StackedProgress.jsx","components/UsageCard.jsx","components/sidebar/panel/OverviewPanel.jsx","components/sidebar/panel/StatusPanel.jsx","components/sidebar/panel/networkPanel.jsx","components/sidebar/model/recipe/RecipesBrowser.jsx","components/form/nestedFieldArray.jsx","components/form/fieldArray.jsx","components/sidebar/model/recipe/RecipeSetting.jsx","components/sidebar/model/RecipeModel.jsx","components/sidebar/panel/LogsPanel.jsx","components/sidebar/model/UploadRecipe.jsx","components/sidebar/Menu.jsx","components/StatusNag.jsx","components/SocketStatusNag.jsx","utils/Message.js","components/pages/Main.jsx","App.jsx","index.jsx"],"names":["containerListState","atom","key","default","containerStatsListState","containerNetworkListState","imagesListState","selectedContainerState","undefined","containerUsageState","selector","get","containerStatsList","Object","entries","reduce","result","value","cpu","cpu_stats","cpu_usage","total_usage","precpu_stats","system_cpu_usage","online_cpus","memory","memory_stats","usage","stats","cache","totalMemory","limit","name","Math","round","containerPanelListState","containerList","length","map","container","id","Id","Name","state","State","Status","image","Config","Image","created","Created","SidebarPanel","selectedPanel","selectedContainer","useRecoilValue","className","Header","as","Subheader","type","data","panel","TopLabelProgress","memo","title","label","total","Grid","Column","floated","width","textAlign","Progress","size","propTypes","PropTypes","string","isRequired","number","CustomHandle","styled","Handle","backgroundcolor","position","CustomNodeHandle","isConnectable","defaultProps","ContainerNode","style","wordBreak","healthyStatus","Label","color","horizontal","substring","ceil","processCount","columns","celled","verticalAlign","Row","stretched","divided","networkSettings","Ports","split","privatePort","HostPort","toUpperCase","LabelNodeHandle","Networks","flatMap","NetworkID","IPAddress","attached","content","status","NetworkNode","driver","gateway","subnet","elk","ELK","defaultLayoutOptions","updateLayout","elements","a","nodes","edges","forEach","el","isNode","portList","__rf","handleBounds","source","target","push","height","layoutOptions","portConstraints","ports","handle","index","sourcePort","targetPort","layout","children","newGraph","filter","node","find","n","x","y","random","graphPositionState","setGraphPositionState","set","newPosition","graphPosition","graphNodesState","containerNetworkList","containerUsage","Array","isArray","keys","containerNode","Health","NetworkSettings","networkNode","network","Driver","IPAM","Gateway","Subnet","graphEdgesState","some","sourceHandle","graphElementState","graphEdges","graphNodes","positionedNodes","imagesSocket","dangerouslyAllowMutability","containersSocket","networksSocket","recipesSocket","CustomMenu","Menu","posx","posy","ColorSpan","span","ContextMenu","open","startContainer","stopContainer","deleteAll","vertical","Item","onClick","onLoad","reactFlowInstance","console","log","fitView","nodeTypes","GraphBaord","reactFlowElement","networkSocket","containerSocket","setGraphPosition","useSetRecoilState","runOnce","useRef","useState","confirmOpen","setConfirmOpen","elementsToRemove","setElementsToRemove","posX","setPosX","posY","setPosY","showMenu","setShowMenu","useStoreState","selectedElements","nodeHasDimension","onLayout","assign","memoConfirmList","useMemo","element","networkLink","Modal","Content","e","confirmList","onElementsRemove","setSelectedContainer","onSelectionContextMenu","useCallback","preventDefault","pageX","pageY","useEffect","current","every","update","maxZoom","minZoom","onConnect","link","emit","toast","info","onSelectionChange","firstElements","clonedData","prev","onPaneClick","Confirm","header","Icon","confirmButton","Button","negative","onCancel","onConfirm","c","force","containerId","networkId","elementRemove","left","bottom","nodeColor","nodeStrokeColor","nodeStrokeWidth","gap","selectedMenuItemState","ConfirmModal","trigger","confirmCallback","setOpen","handleConfirmClick","choose","onClose","onOpen","Group","Actions","selectedContainersId","Set","ContainersPanel","containers","handlecheck","checked","add","delete","dividing","positive","clear","Divider","Table","fixed","compact","basic","selectable","fullWidth","HeaderCell","Checkbox","disabled","Body","Cell","onChange","ImagePanel","imageList","RepoTags","join","Size","toFixed","StackedProgress","allZero","bar","i","precision","percent","Popup","backgroundColor","display","minWidth","margin","UsageCard","labelSuffix","sum","acc","b","Card","fluid","OverviewPanel","networkList","imagesList","cpuUsage","substr","memoryUsage","centered","alignItems","Description","statuslist","conatinerId","time","StatusPanel","shift","ResponsiveContainer","maxHeight","LineChart","top","right","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","Legend","Line","stroke","isAnimationActive","selectedNetowrksId","networksList","sorted","sort","widths","RecipesBrowser","handleClick","recipeSocket","recipeList","setRecipeList","ack","nestIndex","control","register","getValues","useFieldArray","fields","remove","append","item","k","subheader","required","Fields","setValue","prepend","RecipeSetting","recipeName","handleClose","useForm","handleSubmit","reset","variablesFields","recipeCanonicalId","setRecipeCanonicalId","recipeJson","JSON","parse","canonical_id","defaultvalue","variables","vars","desc","description","envvar","nestedArray","environment_variables","env","Form","onSubmit","prefix","variablesArgs","envArgs","placeholder","RecipeModel","view","selectedRecipe","setSelectedRecipe","corner","scrolling","form","LogsPanel","term","fitAddon","FitAddon","contianerSocket","terminal","tail","on","line","writeln","removeAllListeners","fit","options","convertEol","ref","addons","onResize","UploadRecipe","Segment","stackable","Input","files","reader","FileReader","onload","evt","readAsArrayBuffer","primary","htmlFor","menuItems","icon","cornerIcon","SidebarMenu","setSelectedMenuItem","handleMouseClickPanel","_key","active","fitted","hidden","StatusNag","visable","setVisable","conatinerStatus","setConatinerStatus","statsStatus","setStatsStatus","netowrkStatus","setNetowrkStatus","imageStatus","setImageStatus","SocketStatusNag","keyDict","SUCCESS","RECIPE_UNPACKING","RECIPE_EXTRACT_FINISHED","RECIPE_IMPORT_FINISHED","CRAFT_PREPARE","CRAFT_PULLING_IMAGE","CRAFT_NETWORK_CREATED","CRAFT_CONTAINER_CREATED","CRAFT_FINISHED","BAD_ZIPFILE","INCORRECT_RECIPE_STRUCTURE","MISSING_RECIPE_FILE","INCORRECT_RECIPE_JSON_FORMAT","NO_SUCH_RECIPE","MISSING_VARIABLE","BAD_PREFIX_NAME","formatter","msg","Main","selectedMenuItem","setContainerListState","setContainerStatsListState","setContainerNetworkListState","setImagesListState","setContainerSocket","setImagesSocket","setNetworksSocket","setRecipesSocket","isConnected","setIsConnected","wsContainer","io","waitList","listTimer","setInterval","all","waitStats","statsTimer","clearInterval","disconnect","wsNetwork","wsImage","wsRecipe","message","Sidebar","Pushable","flexGrow","animation","direction","visible","overflow","Pusher","GraphBoard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f649c5b0.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nconst containerListState = atom({\n  key: \"containerListState\",\n  default: [],\n});\n\nconst containerStatsListState = atom({\n  key: \"containerStatsListState\",\n  default: [],\n});\n\nconst containerNetworkListState = atom({\n  key: \"containerNetworkListState\",\n  default: [],\n});\n\nconst imagesListState = atom({\n  key: \"imagesListState\",\n  default: [],\n});\n\nconst selectedContainerState = atom({\n  key: \"selectedContainerState\",\n  default: undefined,\n});\n\n// container usage\nconst containerUsageState = selector({\n  key: \"containerUsageState\",\n  get: ({ get }) => {\n    const containerStatsList = get(containerStatsListState);\n    return Object.entries(containerStatsList).reduce((result, [key, value]) => {\n      // usage calculation\n      const cpuDelta =\n        value?.cpu_stats.cpu_usage.total_usage -\n        value?.precpu_stats.cpu_usage.total_usage;\n      const systemCpuDelta =\n        value?.cpu_stats.system_cpu_usage -\n        value?.precpu_stats.system_cpu_usage;\n      const cpu =\n        (cpuDelta / systemCpuDelta) * value?.cpu_stats.online_cpus * 100.0;\n      const memory =\n        (value?.memory_stats.usage - value?.memory_stats.stats?.cache) /\n        1024 /\n        1024;\n      const totalMemory = value?.memory_stats.limit / 1024 / 1024;\n\n      // eslint-disable-next-line no-param-reassign\n      result[key] = {\n        name: value.name,\n        cpu: cpu || 0,\n        memory: Math.round(memory) || 0,\n        totalMemory: Math.round(totalMemory) || 0,\n      };\n      return result;\n    }, {});\n  },\n});\n\n// side panel\nconst containerPanelListState = selector({\n  key: \"containerPanelListState\",\n  get: ({ get }) => {\n    const containerList = get(containerListState);\n\n    if (containerList.length === 0) return [];\n    return containerList.map((container) => ({\n      id: container.Id,\n      name: container.Name,\n      state: container.State.Status,\n      image: container.Config.Image,\n      created: container.Created,\n    }));\n  },\n});\n\nexport {\n  containerListState,\n  selectedContainerState,\n  containerStatsListState,\n  imagesListState,\n  containerUsageState,\n  containerNetworkListState,\n  containerPanelListState,\n};\n","import { Header } from \"semantic-ui-react\";\nimport { useRecoilValue } from \"recoil\";\nimport PropTypes from \"prop-types\";\nimport { selectedContainerState } from \"../../recoil/Container\";\n\nconst SidebarPanel = ({ selectedPanel }) => {\n  const selectedContainer = useRecoilValue(selectedContainerState);\n\n  return (\n    <div className=\"grid-container\">\n      <div className=\"infotitlebar\">\n        <Header as=\"h3\">\n          {selectedPanel.name}\n          <Header.Subheader>\n            {selectedPanel.type === \"host\"\n              ? \"Hostname\"\n              : selectedContainer?.data.name}\n          </Header.Subheader>\n        </Header>\n      </div>\n      {selectedPanel.panel}\n    </div>\n  );\n};\n\nSidebarPanel.propTypes = {\n  selectedPanel: PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    panel: PropTypes.element,\n  }).isRequired,\n};\n\nexport default SidebarPanel;\n","import { memo } from \"react\";\nimport { Progress, Grid } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nconst TopLabelProgress = memo(({ title, label, value, total }) => (\n  <>\n    <div>\n      <Grid>\n        <Grid.Column floated=\"left\" width={8}>\n          {title}\n        </Grid.Column>\n        <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\n          {label}\n        </Grid.Column>\n      </Grid>\n      <Progress\n        value={value}\n        total={total}\n        className=\"reverse-indicating\"\n        size=\"tiny\"\n      />\n    </div>\n  </>\n));\n\nTopLabelProgress.propTypes = {\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default TopLabelProgress;\n","import PropTypes from \"prop-types\";\nimport { Handle } from \"react-flow-renderer\";\nimport styled from \"styled-components\";\n\nconst CustomHandle = styled(Handle)`\n  position: absolute;\n  width: 25px;\n  height: calc(100% - 4px);\n  background-color: ${({ backgroundcolor }) => backgroundcolor};\n  border: medium none;\n  transform: translateY(0px);\n  top: 2px;\n\n  ${({ position }) => {\n    switch (position) {\n      case \"right\":\n        return `border-radius: 0px 10px 10px 0px;\n        right: -36px;`;\n      case \"left\":\n        return `border-radius: 10px 0px 0px 10px;\n        left: -26px;`;\n      default:\n        return \"\";\n    }\n  }}\n`;\n\nconst CustomNodeHandle = ({\n  id,\n  type,\n  position,\n  isConnectable = true,\n  backgroundcolor = \"#718792\",\n}) => (\n  <CustomHandle\n    position={position}\n    id={id}\n    type={type}\n    isConnectable={isConnectable}\n    backgroundcolor={backgroundcolor}\n  />\n);\n\nCustomNodeHandle.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n  isConnectable: PropTypes.bool,\n  backgroundcolor: PropTypes.string,\n};\n\nCustomNodeHandle.defaultProps = {\n  isConnectable: true,\n  backgroundcolor: \"#718792\",\n};\n\nexport default CustomNodeHandle;\n","import { Header, Label, Grid } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport TopLabelProgress from \"../TopLabelProgress\";\nimport LabelNodeHandle from \"./LabelNodeHandle\";\n\nconst ContainerNode = ({ data }) => (\n  <>\n    <Header as=\"h5\" style={{ wordBreak: \"break-all\" }}>\n      {data.name}\n      {data.healthyStatus != null && (\n        <Label\n          color={\n            data.healthyStatus === \"healthy\"\n              ? \"green\"\n              : data.healthyStatus === \"starting\"\n              ? \"yellow\"\n              : \"red\"\n          }\n          size=\"mini\"\n          horizontal\n        >\n          {data.healthyStatus}\n        </Label>\n      )}\n      <Header.Subheader>{`#${data.id.substring(0, 12)}`}</Header.Subheader>\n    </Header>\n\n    <TopLabelProgress\n      title=\"CPU\"\n      label={data.cpu != null ? `${Math.ceil(data.cpu)}%` : \"n/a\"}\n      value={data.cpu ?? 0}\n      total={100}\n    />\n\n    <TopLabelProgress\n      title=\"Memory\"\n      label={\n        data.memory !== null\n          ? `${Math.round(data.memory)}/${Math.round(data.totalMemory)} MiB`\n          : \"n/a\"\n      }\n      value={data.memory ?? 0}\n      total={data.totalMemory}\n    />\n\n    <Grid>\n      <Grid.Column floated=\"left\" width={8}>\n        Processes:\n      </Grid.Column>\n      <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\n        {data.processCount != null || \"n/a\"}\n      </Grid.Column>\n    </Grid>\n\n    <div>IP Table</div>\n    <Grid\n      columns=\"equal\"\n      className=\"\"\n      celled=\"internally\"\n      verticalAlign=\"middle\"\n      textAlign=\"center\"\n    >\n      <Grid.Row stretched>\n        <Grid.Column>\n          <Grid divided=\"vertically\" textAlign=\"center\">\n            {Object.entries(data.networkSettings.Ports).map(([id, value]) => {\n              const [privatePort, type] = id.split(\"/\");\n              return (\n                <Grid.Row\n                  key={`${data.id}-${privatePort}:${value?.HostPort}/${type}`}\n                >\n                  {value\n                    ? `${privatePort}:${\n                        value[0]?.HostPort\n                      }/${type.toUpperCase()}`\n                    : `${privatePort}/${type.toUpperCase()}`}\n                </Grid.Row>\n              );\n            })}\n          </Grid>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Grid divided=\"vertically\" textAlign=\"center\">\n            <Grid.Row>\n              Connect Network\n              <LabelNodeHandle\n                type=\"source\"\n                position=\"right\"\n                id={data.id}\n                backgroundcolor=\"#57f281\"\n              />\n            </Grid.Row>\n            {Object.entries(data.networkSettings.Networks).flatMap(\n              ([, value]) => {\n                if (value.NetworkID === \"\") return [];\n                return (\n                  <Grid.Row key={`${data.id}-${value.NetworkID}`}>\n                    {value.IPAddress}\n                    <LabelNodeHandle\n                      type=\"source\"\n                      position=\"right\"\n                      id={`${data.id}-${value.NetworkID}`}\n                      isConnectable={false}\n                    />\n                  </Grid.Row>\n                );\n              },\n            )}\n          </Grid>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n\n    <Label\n      attached=\"top right\"\n      size=\"tiny\"\n      content={data.status}\n      color={data.status === \"running\" ? \"green\" : \"red\"}\n    />\n  </>\n);\n\nContainerNode.propTypes = {\n  data: PropTypes.shape({\n    healthyStatus: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    cpu: PropTypes.number,\n    memory: PropTypes.number,\n    totalMemory: PropTypes.number,\n    processCount: PropTypes.number,\n    status: PropTypes.string,\n    networkSettings: PropTypes.object,\n  }).isRequired,\n};\n\nexport default ContainerNode;\n","import { Header, Grid } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport LabelNodeHandle from \"./LabelNodeHandle\";\n\nconst NetworkNode = ({ data }) => (\n  <>\n    <Header as=\"h5\" style={{ wordBreak: \"break-all\" }}>\n      {data.name}\n      <Header.Subheader>{`#${data.id.substring(0, 12)}`}</Header.Subheader>\n    </Header>\n\n    <Grid className=\"very compact\">\n      <Grid.Column floated=\"left\" width={8}>\n        Driver:\n      </Grid.Column>\n      <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\n        {data.driver}\n      </Grid.Column>\n\n      {data.gateway != null && (\n        <>\n          <Grid.Column floated=\"left\" width={8}>\n            Gateway:\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\n            {data.gateway}\n          </Grid.Column>\n        </>\n      )}\n      {data.subnet != null && (\n        <>\n          <Grid.Column floated=\"left\" width={8}>\n            Subnet:\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\n            {data.subnet}\n          </Grid.Column>\n        </>\n      )}\n    </Grid>\n\n    <LabelNodeHandle type=\"target\" position=\"left\" id={data.id} />\n  </>\n);\n\nNetworkNode.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    driver: PropTypes.string,\n    gateway: PropTypes.string,\n    subnet: PropTypes.string,\n  }).isRequired,\n};\n\nexport default NetworkNode;\n","import ELK from \"elkjs/lib/elk.bundled\";\nimport { isNode } from \"react-flow-renderer\";\n\nconst elk = new ELK({\n  // workerUrl: \"./elk-worker.min.js\",\n  defaultLayoutOptions: {\n    \"elk.algorithm\": \"layered\",\n    \"elk.direction\": \"RIGHT\",\n    \"elk.spacing.nodeNode\": \"100\",\n    \"elk.layered.spacing.nodeNodeBetweenLayers\": \"100\",\n    \"elk.edgeRouting\": \"ORTHOGONAL\",\n    \"elk.layered.layering.strategy\": \"MIN_WIDTH\",\n    \"elk.layered.nodePlacement.strategy\": \"LINEAR_SEGMENTS\",\n    \"elk.spacing.edgeNode\": \"50\",\n  },\n});\n\nconst updateLayout = async (elements) => {\n  const DEFAULT_WIDTH = 75;\n  const DEFAULT_HEIGHT = 75;\n  const nodes = [];\n  const edges = [];\n\n  elements.forEach((el) => {\n    if (isNode(el)) {\n      const portList =\n        el.__rf?.handleBounds.source ?? el.__rf?.handleBounds.target ?? [];\n      nodes.push({\n        id: el.id,\n        // eslint-disable-next-line no-underscore-dangle\n        width: el.__rf?.width ?? DEFAULT_WIDTH,\n        // eslint-disable-next-line no-underscore-dangle\n        height: el.__rf?.height ?? DEFAULT_HEIGHT,\n        layoutOptions: {\n          portConstraints: \"FIXED_ORDER\",\n          \"portAlignment.east\": \"END\",\n        },\n        ports: [\n          ...portList.map((handle, index) => ({\n            id: handle.id,\n            width: 0,\n            height: 0,\n            layoutOptions: {\n              \"port.side\": handle.position === \"right\" ? \"EAST\" : \"NORTH\",\n              \"port.index\": index,\n            },\n          })),\n        ],\n      });\n    } else {\n      edges.push({\n        id: el.id,\n        sourcePort: `${el.source}-${el.target}`,\n        targetPort: el.target,\n        source: el.source,\n        target: el.target,\n      });\n    }\n  });\n\n  const newGraph = await elk.layout({\n    id: \"root\",\n    children: nodes,\n    // eslint-disable-next-line object-shorthand\n    edges: edges,\n  });\n\n  return elements\n    .filter((el) => {\n      const node = newGraph?.children?.find((n) => n.id === el.id);\n      return isNode(el) && node?.x && node?.y && node?.width && node?.height;\n    })\n    .map((el) => {\n      const node = newGraph?.children?.find((n) => n.id === el.id);\n      return {\n        [el.id]: {\n          position: {\n            // hack: slighltiy different position to notify react flow about the change\n            x: node.x - node.width / 2 + Math.random() / 1000,\n            y: node.y - node.height / 2,\n          },\n        },\n      };\n    });\n};\n\nexport default updateLayout;\n","import { atom, selector } from \"recoil\";\nimport {\n  containerListState,\n  containerNetworkListState,\n  containerUsageState,\n} from \"./Container\";\n\nconst graphPositionState = atom({\n  key: \"graphPositionState\",\n  default: {},\n});\n\nconst setGraphPositionState = selector({\n  key: \"setGraphPositionState\",\n  set: ({ set, get }, newPosition) => {\n    const graphPosition = get(graphPositionState);\n    set(graphPositionState, { ...graphPosition, ...newPosition });\n  },\n});\n\nconst graphNodesState = selector({\n  key: \"graphNodesState\",\n  get: ({ get }) => {\n    const containerList = get(containerListState);\n    // const containerStatsList = get(containerStatsListState);\n    const containerNetworkList = get(containerNetworkListState);\n    const containerUsage = get(containerUsageState);\n\n    if (!Array.isArray(containerList) || !containerList.length) return [];\n    if (Object.keys(containerUsage).length === 0) return [];\n    if (!Array.isArray(containerNetworkList) || !containerNetworkList.length)\n      return [];\n\n    const containerNode = containerList.map((container) => {\n      const stats = containerUsage[container.Id];\n      return {\n        id: container.Id,\n        type: \"container\",\n        data: {\n          id: container.Id,\n          name: container.Name,\n          status: container.State.Status,\n          healthyStatus: container.State.Health?.Status,\n          cpu: stats?.cpu,\n          memory: stats?.memory,\n          totalMemory: stats?.totalMemory,\n          processCount: null,\n          networkSettings: container.NetworkSettings,\n        },\n      };\n    });\n\n    // TODO: multiple network config\n    const networkNode = containerNetworkList.map((network) => ({\n      id: network.Id,\n      type: \"network\",\n      data: {\n        id: network.Id,\n        name: network.Name,\n        driver: network.Driver,\n        gateway: network.IPAM.Config[0]?.Gateway,\n        subnet: network.IPAM.Config[0]?.Subnet,\n      },\n    }));\n    return [...containerNode, ...networkNode];\n  },\n});\n\nconst graphEdgesState = selector({\n  key: \"graphEdgesState\",\n  get: ({ get }) => {\n    const containerList = get(containerListState);\n    const containerNetworkList = get(containerNetworkListState);\n\n    if (!Array.isArray(containerList) || !containerList.length) return [];\n    if (!Array.isArray(containerNetworkList) || !containerNetworkList.length)\n      return [];\n\n    const edge = containerList.flatMap((container) =>\n      Object.entries(container.NetworkSettings.Networks).flatMap(\n        ([, value]) => {\n          // check network exist\n          if (!containerNetworkList.some((el) => el.Id === value.NetworkID))\n            return [];\n          return {\n            id: `${container.Id}-${value.NetworkID}`,\n            type: \"smoothstep\",\n            source: container.Id,\n            sourceHandle: `${container.Id}-${value.NetworkID}`,\n            target: value.NetworkID,\n          };\n        },\n      ),\n    );\n    return edge;\n  },\n});\n\nconst graphElementState = selector({\n  key: \"graphElementState\",\n  get: ({ get }) => {\n    const graphPosition = get(graphPositionState);\n    const graphEdges = get(graphEdgesState);\n    const graphNodes = get(graphNodesState);\n\n    if (!Array.isArray(graphNodes) || !graphNodes.length) return [];\n    if (!Array.isArray(graphEdges) || !graphEdges.length) return [];\n\n    const positionedNodes = graphNodes.map((node) => {\n      const position = graphPosition[node.id] ?? { position: { x: 0, y: 0 } };\n\n      return { ...node, ...position };\n    });\n\n    return [...positionedNodes, ...graphEdges];\n  },\n});\n\nexport { graphElementState, setGraphPositionState };\n","import { atom } from \"recoil\";\n\nconst imagesSocket = atom({\n  key: \"imageSocket\",\n  default: null,\n  dangerouslyAllowMutability: true,\n});\n\nconst containersSocket = atom({\n  key: \"containersSocket\",\n  default: null,\n  dangerouslyAllowMutability: true,\n});\n\nconst networksSocket = atom({\n  key: \"networksSocket\",\n  default: null,\n  dangerouslyAllowMutability: true,\n});\n\nconst recipesSocket = atom({\n  key: \"recipesSocket\",\n  default: null,\n  dangerouslyAllowMutability: true,\n});\n\n// eslint-disable-next-line import/prefer-default-export\nexport { imagesSocket, containersSocket, networksSocket, recipesSocket };\n","/* eslint-disable react/prop-types */\nimport styled from \"styled-components\";\nimport { Menu } from \"semantic-ui-react\";\n\n// const ContextMenu = ({ open, Xpos, Ypos }) => {};\nconst CustomMenu = styled(Menu)`\n  position: absolute;\n  width: 50px;\n  left: ${({ posx }) => posx}px;\n  top: ${({ posy }) => posy}px;\n  z-index: 1000;\n`;\n\nconst ColorSpan = styled.span`\n  color: ${({ color }) => color};\n`;\n\nconst ContextMenu = ({\n  open,\n  posx,\n  posy,\n  startContainer,\n  stopContainer,\n  deleteAll,\n  //   deleteContainer,\n  //   deleteNetwork,\n}) =>\n  open && (\n    <CustomMenu vertical posx={posx} posy={posy}>\n      <CustomMenu.Item>\n        <CustomMenu.Header>Container</CustomMenu.Header>\n        <CustomMenu.Menu>\n          <CustomMenu.Item onClick={startContainer}>\n            <ColorSpan color=\"Green\">Start selected</ColorSpan>\n          </CustomMenu.Item>\n          <CustomMenu.Item onClick={stopContainer}>\n            <ColorSpan color=\"Orange\">Stop selected</ColorSpan>\n          </CustomMenu.Item>\n          {/* <CustomMenu.Item onClick={() => deleteContainer}>\n            <ColorSpan color=\"red\">Delete Selected</ColorSpan>\n          </CustomMenu.Item> */}\n        </CustomMenu.Menu>\n      </CustomMenu.Item>\n      <CustomMenu.Item>\n        <CustomMenu.Header>Action</CustomMenu.Header>\n        <CustomMenu.Menu>\n          <CustomMenu.Item onClick={deleteAll}>\n            <ColorSpan color=\"red\">Delete selected</ColorSpan>\n          </CustomMenu.Item>\n        </CustomMenu.Menu>\n      </CustomMenu.Item>\n    </CustomMenu>\n  );\n\nexport default ContextMenu;\n","import ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  ControlButton,\n  useStoreState,\n} from \"react-flow-renderer\";\nimport { Button, Confirm, Icon, Modal } from \"semantic-ui-react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { useEffect, useMemo, useRef, useState, useCallback } from \"react\";\nimport { toast } from \"react-toastify\";\nimport ContainerNode from \"./ContainerNode\";\nimport NetworkNode from \"./NetworkNode\";\nimport updateLayout from \"../../utils/GraphUtils\";\nimport { selectedContainerState } from \"../../recoil/Container\";\nimport { graphElementState, setGraphPositionState } from \"../../recoil/Graph\";\nimport { networksSocket, containersSocket } from \"../../recoil/Socketio\";\nimport ContextMenu from \"./ContextMenu\";\n\nconst onLoad = (reactFlowInstance) => {\n  console.log(\"flow loaded:\", reactFlowInstance);\n  reactFlowInstance.fitView();\n};\n\nconst nodeTypes = {\n  container: ContainerNode,\n  network: NetworkNode,\n};\n\nconst GraphBaord = () => {\n  // external state\n  const reactFlowElement = useRecoilValue(graphElementState);\n  const networkSocket = useRecoilValue(networksSocket);\n  const containerSocket = useRecoilValue(containersSocket);\n  const setGraphPosition = useSetRecoilState(setGraphPositionState);\n\n  // local state\n  const runOnce = useRef(false);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [elementsToRemove, setElementsToRemove] = useState(null);\n\n  const [posX, setPosX] = useState(0);\n  const [posY, setPosY] = useState(0);\n  const [showMenu, setShowMenu] = useState(false);\n  // reactflow state\n  const nodes = useStoreState((state) => state.nodes);\n  const edges = useStoreState((state) => state.edges);\n  const selectedElements = useStoreState((state) => state.selectedElements);\n\n  const nodeHasDimension = (el) => el.__rf.width && el.__rf.height;\n\n  const onLayout = async () => {\n    const result = await updateLayout([...edges, ...nodes]);\n    setGraphPosition(Object.assign({}, ...result));\n  };\n\n  const elementRemove = (elements) => {\n    if (!elements) return;\n    setConfirmOpen(false);\n    const containerNode = elements.filter(\n      (element) => element.type === \"container\",\n    );\n    const networkNode = elements.filter(\n      (element) => element.type === \"network\",\n    );\n    const networkLink = elements.filter(\n      (element) => element.type === \"smoothstep\",\n    );\n\n    containerNode.forEach((c) => {\n      containerSocket.emit(\"remove\", c.data.id, { force: true });\n      toast.info(`🗑️ Removing Container: ${c.data.id.substring(0, 12)}`);\n    });\n\n    networkNode.forEach((n) => {\n      networkSocket.emit(\"remove\", n.data.id);\n      toast.info(`🗑️ Removing Network: ${n.data.id.substring(0, 12)}`);\n    });\n\n    networkLink.forEach((link) => {\n      const containerId = link.source;\n      const networkId = link.target;\n      networkSocket.emit(\"container_disonnect\", containerId, networkId);\n      toast.info(`Unlink Container: ${containerId.substring(0, 12)}`);\n    });\n  };\n\n  const confirmList = (elements) => {\n    if (!elements) return \"\";\n    const containerNode = elements.filter(\n      (element) => element.type === \"container\",\n    );\n    const networkNode = elements.filter(\n      (element) => element.type === \"network\",\n    );\n    const networkLink = elements.filter(\n      (element) => element.type === \"smoothstep\",\n    );\n    return (\n      <Modal.Content>\n        <p>Action can&apos;t be reverted. Are you sure to proceed?</p>\n        <div className=\"ui list\">\n          {containerNode.length !== 0 && (\n            <div className=\"item\">\n              <i className=\"dice d6 icon\" />\n              <div className=\"content\">\n                <div className=\"header\">Containers</div>\n                <div className=\"description\">Total {containerNode.length}</div>\n                <div className=\"list\">\n                  {containerNode.map((e) => (\n                    <div className=\"item\" key={e.data.id}>\n                      <div className=\"content\">\n                        <div className=\"header\">{e.data.name}</div>\n                        <div className=\"description\">\n                          {e.data.id.substring(0, 12)}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n          {networkNode.length !== 0 && (\n            <div className=\"item\">\n              <i className=\"sitemap icon\" />\n              <div className=\"content\">\n                <div className=\"header\">Networks</div>\n                <div className=\"description\">Total {networkNode.length}</div>\n                <div className=\"list\">\n                  {networkNode.map((e) => (\n                    <div className=\"item\" key={e.data.id}>\n                      <div className=\"content\">\n                        <div className=\"header\">{e.data.name}</div>\n                        <div className=\"description\">\n                          {e.data.id.substring(0, 12)}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n          {networkLink.length !== 0 && (\n            <div className=\"item\">\n              <i className=\"linkify icon\" />\n              <div className=\"content\">\n                <div className=\"header\">Links</div>\n                <div className=\"description\">Total {networkLink.length}</div>\n                <div className=\"list\">\n                  {networkLink.map((e) => (\n                    <div className=\"item\" key={`${e.source}-${e.target}`}>\n                      <div className=\"content\">\n                        <div className=\"header\">{`${e.source.substring(\n                          0,\n                          12,\n                        )} - ${e.target.substring(0, 12)}`}</div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </Modal.Content>\n    );\n  };\n\n  const memoConfirmList = useMemo(\n    () => confirmList(elementsToRemove),\n    [elementsToRemove],\n  );\n\n  const onElementsRemove = (elements) => {\n    setElementsToRemove(elements);\n    setShowMenu(false);\n    setConfirmOpen(true);\n  };\n\n  const onConnect = (link) => {\n    console.log(link);\n    networkSocket.emit(\"container_connect\", link.source, link.target);\n    toast.info(\n      `Linking Network: ${link.source.substring(\n        0,\n        12,\n      )} - ${link.target.substring(0, 12)}`,\n    );\n  };\n\n  // on selection change\n  const setSelectedContainer = useSetRecoilState(selectedContainerState);\n  const onSelectionChange = (e) => {\n    // data.name data.id\n    const firstElements = e?.filter((x) => x.type === \"container\")?.[0];\n    if (firstElements) {\n      const clonedData = {\n        data: { id: firstElements.data.id, name: firstElements.data.name },\n      };\n      setSelectedContainer((prev) => clonedData ?? prev);\n    }\n  };\n\n  const onSelectionContextMenu = useCallback(\n    (e) => {\n      e.preventDefault();\n      setPosX(e.pageX);\n      setPosY(e.pageY);\n      setShowMenu(true);\n    },\n    [setPosX, setPosY],\n  );\n\n  const onPaneClick = () => {\n    if (showMenu) setShowMenu(false);\n  };\n\n  const startContainer = (elements) => {\n    setShowMenu(false);\n    elements\n      .filter((e) => e.type === \"container\")\n      .forEach(({ data: { id } }) => {\n        containerSocket.emit(\"start\", id, {});\n        toast.info(`🟢 Starting Container: ${id.substring(0, 12)}`);\n      });\n  };\n\n  const stopContainer = (elements) => {\n    setShowMenu(false);\n    elements\n      .filter((e) => e.type === \"container\")\n      .forEach(({ data: { id } }) => {\n        containerSocket.emit(\"stop\", id, {});\n        toast.info(`🟥 Stopping Container: ${id.substring(0, 12)}`);\n      });\n  };\n\n  useEffect(() => {\n    if (\n      !runOnce.current &&\n      nodes.length !== 0 &&\n      nodes.every(nodeHasDimension)\n    ) {\n      const update = async () => {\n        await onLayout();\n      };\n      update();\n      runOnce.current = true;\n    }\n  }, [nodes, edges]);\n\n  return (\n    <ReactFlow\n      maxZoom={2}\n      minZoom={0.1}\n      elements={reactFlowElement}\n      nodeTypes={nodeTypes}\n      onConnect={onConnect}\n      onLoad={onLoad}\n      onElementsRemove={(e) => onElementsRemove(e)}\n      onSelectionChange={onSelectionChange}\n      onSelectionContextMenu={onSelectionContextMenu}\n      onPaneClick={onPaneClick}\n    >\n      <Confirm\n        open={confirmOpen}\n        size=\"tiny\"\n        header={\n          <Modal.Header>\n            <Icon name=\"exclamation triangle\" />\n            <span> Confirm</span>\n          </Modal.Header>\n        }\n        confirmButton={<Button negative>Yes</Button>}\n        content={() => memoConfirmList}\n        onCancel={() => setConfirmOpen(false)}\n        onConfirm={() => elementRemove(elementsToRemove)}\n      />\n      <ContextMenu\n        open={showMenu}\n        posx={posX}\n        posy={posY}\n        startContainer={() => startContainer(selectedElements)}\n        stopContainer={() => stopContainer(selectedElements)}\n        deleteAll={() => onElementsRemove(selectedElements)}\n      />\n      <Controls style={{ left: \"220px\", bottom: \"51px\" }}>\n        <ControlButton onClick={() => onLayout()}>\n          <Icon name=\"project diagram\" />\n        </ControlButton>\n      </Controls>\n      <MiniMap\n        style={{ left: \"10px\", bottom: \"10px\" }}\n        nodeColor={(node) => {\n          switch (node.type) {\n            case \"container\":\n              return \"#d6e2ff\";\n            case \"network\":\n              return \"#e494ff\";\n            default:\n              return \"#ffffff\";\n          }\n        }}\n        nodeStrokeColor={(node) => {\n          switch (node.type) {\n            case \"container\":\n              return node.data.status === \"running\" ? \"#3dff12\" : \"#ff6666\";\n            // return \"#6b96ff\";\n            case \"network\":\n              return \"#e494ff\";\n            default:\n              return \"#ffffff\";\n          }\n        }}\n        nodeStrokeWidth={20}\n      />\n      <Background color=\"#aaa\" gap={16} />\n    </ReactFlow>\n  );\n};\n\nexport default GraphBaord;\n","import { atom } from \"recoil\";\n\nconst selectedMenuItemState = atom({\n  key: \"selectedMenuItemState\",\n  default: { key: false, name: false, panel: undefined },\n});\n\n// eslint-disable-next-line import/prefer-default-export\nexport { selectedMenuItemState };\n","import { useState } from \"react\";\nimport { Modal, Icon, Button } from \"semantic-ui-react\";\n\n// eslint-disable-next-line react/prop-types\nconst ConfirmModal = ({ trigger, confirmCallback }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleConfirmClick = (choose) => {\n    confirmCallback(choose);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Modal\n        size=\"tiny\"\n        trigger={trigger}\n        open={open}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n      >\n        <Modal.Header>\n          <Icon.Group>\n            <Icon name=\"exclamation triangle\" />\n          </Icon.Group>\n          <span> Confirm</span>\n        </Modal.Header>\n        <Modal.Content>\n          <p>Action can&apos;t be reverted. Are you sure to proceed?</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={() => handleConfirmClick(false)}>Cancel</Button>\n          <Button onClick={() => handleConfirmClick(true)} negative>\n            Yes\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\nexport default ConfirmModal;\n","import { toast } from \"react-toastify\";\nimport { useRecoilValue } from \"recoil\";\nimport {\n  Table,\n  Label,\n  Icon,\n  Button,\n  Checkbox,\n  Divider,\n  Header,\n} from \"semantic-ui-react\";\nimport { containerPanelListState } from \"../../../recoil/Container\";\nimport { containersSocket } from \"../../../recoil/Socketio\";\nimport ConfirmModal from \"../../ConfirmModal\";\n\nconst selectedContainersId = new Set([]);\n\nconst ContainersPanel = () => {\n  const containers = useRecoilValue(containerPanelListState);\n  const containerSocket = useRecoilValue(containersSocket);\n\n  const handlecheck = (e, { checked, id }) => {\n    if (checked) selectedContainersId.add(id);\n    else selectedContainersId.delete(id);\n  };\n\n  const startContainer = () => {\n    selectedContainersId.forEach((id) => {\n      containerSocket.emit(\"start\", id, {});\n      toast.info(`🟢 Starting Container: ${id.substring(0, 12)}`);\n    });\n  };\n\n  const stopContainer = () => {\n    selectedContainersId.forEach((id) => {\n      containerSocket.emit(\"stop\", id, {});\n      toast.info(`🟥 Stopping Container: ${id.substring(0, 12)}`);\n    });\n  };\n\n  const deleteContainer = (confirm) => {\n    if (!confirm) return;\n    selectedContainersId.forEach((id) => {\n      containerSocket.emit(\"remove\", id, { force: true });\n      toast.info(`🗑️ Removing Container: ${id.substring(0, 12)}`);\n    });\n    selectedContainersId.clear();\n  };\n\n  return (\n    <>\n      <div className=\"flex-box\">\n        <Header dividing size=\"large\">\n          Action\n        </Header>\n        <Button.Group>\n          <Button positive onClick={startContainer}>\n            <Icon name=\"play\" />\n            Start\n          </Button>\n          <Button color=\"yellow\" onClick={stopContainer}>\n            <Icon name=\"pause\" />\n            Stop\n          </Button>\n\n          <ConfirmModal\n            trigger={\n              <Button negative>\n                <Icon name=\"trash\" />\n                Delete\n              </Button>\n            }\n            confirmCallback={(choose) => deleteContainer(choose)}\n          />\n        </Button.Group>\n        <Divider />\n\n        <div className=\"flex-tab\">\n          <Table fixed compact=\"very\" basic=\"very\" selectable>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell style={{ width: \"min-content\" }}>\n                  <Checkbox disabled />\n                </Table.HeaderCell>\n                <Table.HeaderCell>Status</Table.HeaderCell>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell>ID</Table.HeaderCell>\n                <Table.HeaderCell>Image</Table.HeaderCell>\n                <Table.HeaderCell>Created at</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {containers.map((container) => (\n                <Table.Row key={container.id}>\n                  <Table.Cell>\n                    <Checkbox id={container.id} onChange={handlecheck} />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {(container.state === \"exited\" ||\n                      container.state === \"dead\") && (\n                      <Label color=\"red\">{container.state}</Label>\n                    )}\n                    {container.state === \"running\" && (\n                      <Label color=\"green\">{container.state}</Label>\n                    )}\n                    {(container.state === \"created\" ||\n                      container.state === \"restarting\" ||\n                      container.state === \"paused\") && (\n                      <Label color=\"yellow\">{container.state}</Label>\n                    )}\n                  </Table.Cell>\n                  <Table.Cell className=\"warp-text\">\n                    {container.name}\n                  </Table.Cell>\n                  <Table.Cell>{container.id.substring(0, 12)}</Table.Cell>\n                  <Table.Cell>{container.name}</Table.Cell>\n                  <Table.Cell>{container.created}</Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ContainersPanel;\n","import { useRecoilValue } from \"recoil\";\nimport {\n  Button,\n  Icon,\n  Table,\n  Divider,\n  Checkbox,\n  Popup,\n  Header,\n} from \"semantic-ui-react\";\nimport { imagesListState } from \"../../../recoil/Container\";\n\nconst ImagePanel = () => {\n  const imageList = useRecoilValue(imagesListState);\n  return (\n    <>\n      <div className=\"flex-box\">\n        {/* <Header dividing size=\"large\">\n          Action\n        </Header>\n        <Button.Group widths=\"2\">\n          <Popup\n            content=\"Remove unused images\"\n            position=\"bottom center\"\n            trigger={\n              <Button>\n                <Icon.Group>\n                  <Icon name=\"database\" />\n                  <Icon name=\"times\" corner />\n                </Icon.Group>\n                Purge\n              </Button>\n            }\n          />\n          <Button negative>\n            <Icon name=\"trash\" />\n            Remove Selected\n          </Button>\n        </Button.Group>\n        <Divider /> */}\n        <div className=\"flex-tab\">\n          <Table fixed compact=\"very\" basic=\"very\" selectable>\n            <Table.Header fullWidth>\n              <Table.Row>\n                {/* <Table.HeaderCell style={{ width: \"min-content\" }}>\n                  <Checkbox />\n                </Table.HeaderCell> */}\n                <Table.HeaderCell>ID</Table.HeaderCell>\n                <Table.HeaderCell>Tags</Table.HeaderCell>\n                <Table.HeaderCell>Size</Table.HeaderCell>\n                <Table.HeaderCell>Created</Table.HeaderCell>\n                <Table.HeaderCell width=\"1\" />\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {imageList.map((e) => (\n                <Table.Row key={e.Id}>\n                  {/* <Table.Cell>\n                    <Checkbox />\n                  </Table.Cell> */}\n                  <Table.Cell>{e.Id}</Table.Cell>\n                  <Table.Cell className=\"warp-text\">\n                    {e.RepoTags.join(\",\")}\n                  </Table.Cell>\n                  <Table.Cell>\n                    {(e.Size / 1024 / 1024).toFixed(2)} MB\n                  </Table.Cell>\n                  <Table.Cell>{e.Created}</Table.Cell>\n                  <Table.Cell>\n                    <Icon name=\"arrow right\" />\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ImagePanel;\n","import { memo } from \"react\";\nimport { Popup, Header } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\n// this is trash\n// const derivePrecision = (min, total) => {\n//   let precisionPower = 0;\n//   let precision = 1;\n//   let ratio = min / total;\n//   while (precisionPower < 10) {\n//     ratio *= precision;\n//     if (ratio > 1) {\n//       break;\n//     }\n//     precision = (precisionPower++) ** 10;\n//   }\n//   return precision;\n// };\n\nconst getPercent = (value, total, precision) =>\n  precision > 0\n    ? Math.round(value * (10 * precision)) / (10 * precision)\n    : Math.round(value);\n\nconst StackedProgress = memo(({ total, data }) => {\n  const allZero = data.every((e) => e.value === 0);\n  // const autoPrecision = derivePrecision(\n  //   Math.min.apply(\n  //     null,\n  //     data.map((e) => e.value),\n  //   ),\n  //   total,\n  // );\n\n  const bar = data.map((e, i, { length }) => {\n    const percent = (e.value / total) * 100;\n    return (\n      <Popup\n        key={e.id}\n        position=\"top center\"\n        value={percent}\n        trigger={\n          <div\n            className=\"bar highlight\"\n            style={{\n              backgroundColor: allZero\n                ? \"transparent\"\n                : `#${e.id.substring(0, 6)}`,\n              width: `${percent}%`,\n              display:\n                allZero && i + 1 === length\n                  ? \"block\"\n                  : percent === 0\n                  ? \"none\"\n                  : \"block\",\n              minWidth: \"5px\",\n            }}\n          >\n            <div className=\"progress\">\n              {`${getPercent(percent, total, 2)}%`}\n            </div>\n          </div>\n        }\n      >\n        <Popup.Content>\n          <Header size=\"tiny\">\n            {e.name}\n            <Header.Subheader>{e.id}</Header.Subheader>\n          </Header>\n        </Popup.Content>\n      </Popup>\n    );\n  });\n\n  return (\n    <>\n      <div className=\"ui multiple progress\" style={{ margin: \"0px\" }}>\n        {bar}\n      </div>\n    </>\n  );\n});\n\nStackedProgress.propTypes = {\n  total: PropTypes.number.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default StackedProgress;\n","import { Card } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport StackedProgress from \"./StackedProgress\";\n\nconst UsageCard = ({ data, title, labelSuffix, total }) => {\n  const sum = data.reduce((acc, b) => acc + b.value, 0).toFixed(2);\n  return (\n    <>\n      <Card.Group>\n        <Card fluid>\n          <Card.Content>\n            <Card.Header>\n              <span>{title}</span>\n              <span className=\"right floated\">{sum + labelSuffix}</span>\n            </Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <StackedProgress total={total} data={data} />\n          </Card.Content>\n        </Card>\n      </Card.Group>\n    </>\n  );\n};\n\nUsageCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  labelSuffix: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default UsageCard;\n","import { Icon, Card } from \"semantic-ui-react\";\nimport { useRecoilValue } from \"recoil\";\nimport UsageCard from \"../../UsageCard\";\nimport {\n  containerListState,\n  containerNetworkListState,\n  containerUsageState,\n  imagesListState,\n} from \"../../../recoil/Container\";\n\nconst OverviewPanel = () => {\n  const containerUsage = useRecoilValue(containerUsageState);\n  const containerList = useRecoilValue(containerListState);\n  const networkList = useRecoilValue(containerNetworkListState);\n  const imagesList = useRecoilValue(imagesListState);\n\n  const cpuUsage = Object.entries(containerUsage).map(([id, value]) => ({\n    id: id.substr(0, 12),\n    name: value.name,\n    value: value.cpu,\n  }));\n\n  const memoryUsage = Object.entries(containerUsage).map(([id, value]) => ({\n    id: id.substr(0, 12),\n    name: value.name,\n    value: value.memory,\n  }));\n\n  const totalMemory = 1.94 * 1024;\n\n  return (\n    <div className=\"infosidebar\">\n      <UsageCard\n        total={400}\n        title=\"CPU Usage\"\n        labelSuffix=\"%\"\n        data={cpuUsage}\n      />\n      <UsageCard\n        total={totalMemory}\n        title=\"Memory Usage\"\n        labelSuffix={` MiB / ${totalMemory} MiB`}\n        data={memoryUsage}\n      />\n      <Card.Group centered className=\"horizontal\">\n        <Card style={{ width: \"170px\", alignItems: \"center\", minWidth: \"0px\" }}>\n          <div>\n            <Icon name=\"dice d6\" size=\"huge\" />\n          </div>\n          <Card.Content>\n            <Card.Header>{containerList.length}</Card.Header>\n            <Card.Description>Containers</Card.Description>\n          </Card.Content>\n        </Card>\n        <Card style={{ width: \"170px\", alignItems: \"center\", minWidth: \"0px\" }}>\n          <Icon name=\"window restore\" size=\"huge\" />\n          <Card.Content>\n            <Card.Header>{imagesList.length}</Card.Header>\n            <Card.Description>Images</Card.Description>\n          </Card.Content>\n        </Card>\n        <Card style={{ width: \"170px\", alignItems: \"center\", minWidth: \"0px\" }}>\n          <Icon name=\"sitemap\" size=\"huge\" />\n          <Card.Content>\n            <Card.Header>{networkList.length}</Card.Header>\n            <Card.Description>Networks</Card.Description>\n          </Card.Content>\n        </Card>\n      </Card.Group>\n    </div>\n  );\n};\n\nexport default OverviewPanel;\n","import {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n} from \"recharts\";\nimport { useRecoilValue } from \"recoil\";\nimport {\n  selectedContainerState,\n  containerUsageState,\n} from \"../../../recoil/Container\";\n\nconst statuslist = {\n  conatinerId: \"\",\n  status: [...Array(50)].map(() => ({\n    time: null,\n    cpu: 0,\n    memory: 0,\n  })),\n};\n\nconst StatusPanel = () => {\n  const selectedContainer = useRecoilValue(selectedContainerState);\n  const containerUsage = useRecoilValue(containerUsageState);\n\n  if (selectedContainer.data.id === statuslist.conatinerId) {\n    statuslist.status.shift();\n    statuslist.status.push({\n      time: null,\n      cpu: containerUsage[selectedContainer.data.id].cpu,\n      memory: containerUsage[selectedContainer.data.id].memory,\n    });\n  } else {\n    statuslist.conatinerId = selectedContainer.data.id;\n    statuslist.status = [...Array(50)].map(() => ({\n      time: null,\n      cpu: 0,\n      memory: 0,\n    }));\n  }\n\n  return (\n    <>\n      <div className=\"flex-box\">\n        <h1>CPU</h1>\n        <ResponsiveContainer maxHeight={300}>\n          <LineChart\n            data={statuslist.status}\n            margin={{\n              top: 10,\n              right: 30,\n              left: 0,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis type=\"number\" domain={[0, 100]} />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"linear\"\n              dataKey=\"cpu\"\n              stroke=\"#8884d8\"\n              isAnimationActive={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n        <h1>Memory</h1>\n        <ResponsiveContainer maxHeight={300}>\n          <LineChart\n            data={statuslist.status}\n            margin={{\n              top: 10,\n              right: 30,\n              left: 0,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis type=\"number\" domain={[0, 8192]} />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"linear\"\n              dataKey=\"memory\"\n              stroke=\"#8884d8\"\n              isAnimationActive={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </>\n  );\n};\n\nexport default StatusPanel;\n","import { toast } from \"react-toastify\";\nimport { useRecoilValue } from \"recoil\";\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Header,\n  Icon,\n  Table,\n} from \"semantic-ui-react\";\nimport { containerNetworkListState } from \"../../../recoil/Container\";\nimport { networksSocket } from \"../../../recoil/Socketio\";\nimport ConfirmModal from \"../../ConfirmModal\";\n\nconst selectedNetowrksId = new Set([]);\n\nconst ImagePanel = () => {\n  const networksList = useRecoilValue(containerNetworkListState);\n  const networkSocket = useRecoilValue(networksSocket);\n\n  const sorted = [...networksList].sort((a, b) => a.Id > b.Id);\n\n  const handlecheck = (e, { checked, id }) => {\n    if (checked) selectedNetowrksId.add(id);\n    else selectedNetowrksId.delete(id);\n  };\n\n  const deleteNetowrk = (confirm) => {\n    if (!confirm) return;\n    selectedNetowrksId.forEach((id) => {\n      networkSocket.emit(\"remove\", id, { force: true });\n      toast.info(`🗑️ Removing Network: ${id.substring(0, 12)}`);\n    });\n    selectedNetowrksId.clear();\n  };\n  return (\n    <>\n      <div className=\"flex-box\">\n        <Header dividing size=\"large\">\n          Action\n        </Header>\n        <Button.Group widths=\"2\">\n          <ConfirmModal\n            trigger={\n              <Button negative>\n                <Icon name=\"trash\" />\n                Remove\n              </Button>\n            }\n            confirmCallback={(choose) => deleteNetowrk(choose)}\n          />\n        </Button.Group>\n        <Divider />\n        <div className=\"flex-tab\">\n          <Table fixed compact=\"very\" basic=\"very\" selectable>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell style={{ width: \"min-content\" }}>\n                  <Checkbox disabled />\n                </Table.HeaderCell>\n                <Table.HeaderCell>ID</Table.HeaderCell>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell>Driver</Table.HeaderCell>\n                <Table.HeaderCell>Created</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {sorted.map((e) => (\n                <Table.Row key={e.Id}>\n                  <Table.Cell>\n                    <Checkbox id={e.Id} onChange={handlecheck} />\n                  </Table.Cell>\n                  <Table.Cell>{e.Id}</Table.Cell>\n                  <Table.Cell className=\"warp-text\">{e.Name}</Table.Cell>\n                  <Table.Cell>{e.Driver}</Table.Cell>\n                  <Table.Cell>{e.Created}</Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ImagePanel;\n","import { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { Card } from \"semantic-ui-react\";\nimport { recipesSocket } from \"../../../../recoil/Socketio\";\n\n// eslint-disable-next-line react/prop-types\nconst RecipesBrowser = ({ handleClick }) => {\n  const recipeSocket = useRecoilValue(recipesSocket);\n  const [recipeList, setRecipeList] = useState([]);\n  useEffect(() => {\n    recipeSocket.emit(\"list\", (ack) => {\n      setRecipeList(ack);\n    });\n  }, [recipeSocket]);\n  return (\n    <Card.Group>\n      {recipeList.map((name) => (\n        <Card key={name} id={name} header={name} onClick={handleClick} />\n      ))}\n    </Card.Group>\n  );\n};\n\nexport default RecipesBrowser;\n","import React from \"react\";\nimport { useFieldArray } from \"react-hook-form\";\nimport { Divider, Header } from \"semantic-ui-react\";\n\n// eslint-disable-next-line react/prop-types\nexport default ({ nestIndex, control, register, getValues }) => {\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: `envvar.${nestIndex}.nestedArray`,\n  });\n\n  return (\n    <div>\n      {fields.map((item, k) => (\n        <div key={item.id} className=\"field\">\n          <Header\n            as=\"h4\"\n            content={getValues(`envvar.${nestIndex}.nestedArray.${k}.key`)}\n            subheader={getValues(`envvar.${nestIndex}.nestedArray.${k}.desc`)}\n          />\n          <input\n            required={getValues(\n              `envvar.${nestIndex}.nestedArray.${k}.required`,\n            )}\n            type={\n              getValues(`envvar.${nestIndex}.nestedArray.${k}.type`) ===\n              \"password\"\n                ? \"password\"\n                : \"text\"\n            }\n            {...register(`envvar.${nestIndex}.nestedArray.${k}.value`)}\n          />\n        </div>\n      ))}\n      <Divider />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFieldArray } from \"react-hook-form\";\nimport { Header } from \"semantic-ui-react\";\nimport NestedArray from \"./nestedFieldArray\";\n\n// eslint-disable-next-line react/prop-types\nexport default function Fields({ control, register, setValue, getValues }) {\n  const { fields, append, remove, prepend } = useFieldArray({\n    control,\n    name: \"envvar\",\n  });\n\n  return (\n    <>\n      <ul>\n        {fields.map((item, index) => (\n          <li key={item.id}>\n            <Header as=\"h2\" content={getValues(`envvar.${index}.name`)} />\n            <NestedArray\n              nestIndex={index}\n              {...{ control, register, getValues }}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useFieldArray, useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { useRecoilValue } from \"recoil\";\nimport { Divider, Form, Header } from \"semantic-ui-react\";\nimport { recipesSocket } from \"../../../../recoil/Socketio\";\nimport FieldArray from \"../../../form/fieldArray\";\n\n// eslint-disable-next-line react/prop-types\nconst RecipeSetting = ({ recipeName, handleClose }) => {\n  const recipeSocket = useRecoilValue(recipesSocket);\n\n  const { handleSubmit, control, register, getValues, setValue, reset } =\n    useForm();\n  const { fields: variablesFields } = useFieldArray({\n    control,\n    name: \"variables\",\n  });\n\n  const [recipeCanonicalId, setRecipeCanonicalId] = useState(\"\");\n\n  const onSubmit = (data) => {\n    const { prefix, variables, envvar } = data;\n    const variablesArgs = Object.assign(\n      {},\n      ...variables.map((vars) => ({\n        [vars.key]: vars.value,\n      })),\n    );\n\n    const envArgs = Object.assign(\n      {},\n      ...envvar.map((container) => ({\n        [container.name]: Object.assign(\n          {},\n          ...container.nestedArray.flatMap((env) =>\n            env.value !== \"\" ? { [env.key]: env.value } : [],\n          ),\n        ),\n      })),\n    );\n    console.log(\"sended\");\n    recipeSocket.emit(\n      \"craft\",\n      recipeCanonicalId,\n      prefix,\n      variablesArgs,\n      envArgs,\n    );\n\n    handleClose();\n  };\n\n  useEffect(() => {\n    if (recipeSocket)\n      recipeSocket.emit(\"get_recipe\", recipeName, (ack) => {\n        const recipeJson = JSON.parse(ack);\n        setRecipeCanonicalId(recipeJson.canonical_id);\n        const defaultvalue = {\n          variables: recipeJson.variables.map((vars) => ({\n            key: vars.key,\n            desc: vars.description,\n            value: vars.default,\n            type: vars.type,\n            required: vars.required,\n          })),\n          envvar: recipeJson.containers.map((c) => ({\n            name: c.name,\n            nestedArray: c.environment_variables.map((env) => ({\n              key: env.key,\n              desc: env.description,\n              value: env.default,\n              type: env.type,\n              required: env.required,\n            })),\n          })),\n        };\n        reset(defaultvalue);\n      });\n  }, [recipeSocket]);\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)} id=\"recipe-form\">\n      <Header as=\"h1\" content=\"Recipe Settings\" />\n      <Divider />\n      <Header\n        as=\"h3\"\n        content=\"Prefix name\"\n        subheader=\"For conatiner group prefix name\"\n      />\n      <input type=\"text\" required {...register(`prefix`)} />\n      <Header as=\"h1\" content=\"Variables\" />\n      <Divider />\n      {variablesFields.map((item, index) => (\n        <div key={item.id} className=\"field\">\n          <Header as=\"h3\" content={item.key} subheader={item.desc} />\n          <input\n            type=\"text\"\n            placeholder={item.desc}\n            {...register(`variables.${index}.value`)}\n            required={item.required}\n          />\n        </div>\n      ))}\n      <Header as=\"h1\" content=\"Environment Variables\" />\n      <Divider />\n      <FieldArray {...{ control, register, getValues, setValue }} />\n    </Form>\n  );\n};\n\nexport default RecipeSetting;\n","import { useEffect, useState } from \"react\";\nimport { Modal, Icon, Button } from \"semantic-ui-react\";\nimport ModeSelection from \"./recipe/ModeSelection\";\nimport RecipesBrowser from \"./recipe/RecipesBrowser\";\nimport RecipeSetting from \"./recipe/RecipeSetting\";\n\n// eslint-disable-next-line react/prop-types\nconst RecipeModel = ({ trigger }) => {\n  const [open, setOpen] = useState(false);\n  const [selectedRecipe, setSelectedRecipe] = useState(\"\");\n\n  const handleRecipeSelectClick = (e, { id }) => {\n    setSelectedRecipe(id);\n  };\n\n  // clear state\n  const handleClose = () => {\n    setSelectedRecipe(\"\");\n    setOpen(false);\n  };\n\n  let view;\n  view = <RecipesBrowser handleClick={handleRecipeSelectClick} />;\n  if (selectedRecipe !== \"\")\n    view = (\n      <RecipeSetting recipeName={selectedRecipe} handleClose={handleClose} />\n    );\n\n  return (\n    <>\n      <Modal\n        size=\"large\"\n        trigger={trigger}\n        onOpen={() => setOpen(true)}\n        onClose={() => handleClose()}\n        open={open}\n      >\n        <Modal.Header>\n          <Icon.Group>\n            <Icon name=\"window restore\" />\n            <Icon name=\"add\" corner />\n          </Icon.Group>\n          <span> Recipe Wizard</span>\n        </Modal.Header>\n        <Modal.Content scrolling>{view}</Modal.Content>\n        <Modal.Actions>\n          {selectedRecipe !== \"\" && (\n            <Button positive form=\"recipe-form\">\n              <Icon name=\"plus\" />\n              Create\n            </Button>\n          )}\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\nexport default RecipeModel;\n","import { useRef, useEffect } from \"react\";\nimport { FitAddon } from \"xterm-addon-fit\";\nimport { XTerm } from \"xterm-for-react\";\nimport { useRecoilValue } from \"recoil\";\nimport { containersSocket } from \"../../../recoil/Socketio\";\nimport { selectedContainerState } from \"../../../recoil/Container\";\n\nconst LogsPanel = () => {\n  const term = useRef(null);\n  const fitAddon = new FitAddon();\n\n  const contianerSocket = useRecoilValue(containersSocket);\n\n  const selectedContainer = useRecoilValue(selectedContainerState);\n\n  useEffect(() => {\n    term.current.terminal.clear();\n    contianerSocket.emit(\"listen_logs\", selectedContainer.data.id, {\n      tail: 200,\n    });\n    contianerSocket.on(\"logs\", (line) => {\n      term.current.terminal.writeln(line);\n    });\n\n    return () => {\n      contianerSocket.emit(\"stop_listen_logs\", selectedContainer.data.id);\n      contianerSocket.removeAllListeners(\"logs\");\n    };\n  }, [selectedContainer]);\n\n  useEffect(() => {\n    fitAddon.fit();\n  });\n  return (\n    <>\n      <div className=\"flex-box\">\n        <XTerm\n          className=\"flex-tab\"\n          options={{ convertEol: true }}\n          ref={term}\n          addons={[fitAddon]}\n          onResize={fitAddon.fit()}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default LogsPanel;\n","import { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport {\n  Modal,\n  Icon,\n  Button,\n  Header,\n  Grid,\n  Segment,\n  Input,\n} from \"semantic-ui-react\";\nimport { recipesSocket } from \"../../../recoil/Socketio\";\n// eslint-disable-next-line react/prop-types\nconst UploadRecipe = ({ trigger }) => {\n  const recipeSocket = useRecoilValue(recipesSocket);\n\n  const [open, setOpen] = useState(false);\n\n  const handleFiles = ({ target: { files } }) => {\n    if (files[0]) {\n      const reader = new FileReader();\n      reader.onload = (evt) => {\n        recipeSocket.emit(\"upload\", evt.target.result);\n        setOpen(false);\n      };\n      reader.readAsArrayBuffer(files[0]);\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        size=\"large\"\n        trigger={trigger}\n        open={open}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n      >\n        <Modal.Header>\n          <Icon.Group>\n            <Icon name=\"window restore\" />\n            <Icon name=\"add\" corner />\n          </Icon.Group>\n          <span> Recipe Wizard</span>\n        </Modal.Header>\n        <Modal.Content scrolling>\n          <Segment placeholder>\n            <Grid columns=\"2\" stackable textAlign=\"center\">\n              <Grid.Row verticalAlign=\"middle\">\n                <Grid.Column>\n                  <Header>\n                    <div>\n                      <Icon.Group size=\"huge\">\n                        <Icon name=\"upload\" />\n                        <Icon corner=\"bottom right\" name=\"scroll\" />\n                      </Icon.Group>\n                    </div>\n                    <br />\n                    Upload recipe zip\n                  </Header>\n                  <Input\n                    id=\"file-upload\"\n                    type=\"file\"\n                    style={{ display: \"none\" }}\n                    onChange={handleFiles}\n                  />\n                  <Button as=\"label\" primary htmlFor=\"file-upload\">\n                    Select File\n                  </Button>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Segment>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\nexport default UploadRecipe;\n","import { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { Icon, Menu, Divider } from \"semantic-ui-react\";\nimport { selectedContainerState } from \"../../recoil/Container\";\nimport { selectedMenuItemState } from \"../../recoil/Menu\";\nimport ContainersPanel from \"./panel/ContainersPanel\";\nimport ImagePanel from \"./panel/ImagesPanel\";\nimport OverviewPanel from \"./panel/OverviewPanel\";\nimport StatusPanel from \"./panel/StatusPanel\";\nimport NetworkPanel from \"./panel/networkPanel\";\nimport RecipeModel from \"./model/RecipeModel\";\nimport LogsPanel from \"./panel/LogsPanel\";\nimport UploadRecipe from \"./model/UploadRecipe\";\n\nconst menuItems = [\n  {\n    key: \"overview\",\n    type: \"host\",\n    name: \"Overview\",\n    icon: \"desktop\",\n    panel: <OverviewPanel />,\n  },\n  {\n    key: \"containers\",\n    type: \"host\",\n    name: \"Containers\",\n    icon: \"dice d6\",\n    panel: <ContainersPanel />,\n  },\n  {\n    key: \"images\",\n    type: \"host\",\n    name: \"Images\",\n    icon: \"window restore\",\n    panel: <ImagePanel />,\n  },\n  {\n    key: \"networks\",\n    type: \"host\",\n    name: \"Networks\",\n    icon: \"sitemap\",\n    panel: <NetworkPanel />,\n  },\n  {\n    key: \"status\",\n    type: \"container\",\n    name: \"Status\",\n    icon: \"chart area\",\n    panel: <StatusPanel />,\n  },\n  // {\n  //   key: \"terminal\",\n  //   type: \"container\",\n  //   name: \"Terminal\",\n  //   icon: \"terminal\",\n  //   panel: <AttachPanel />,\n  // },\n  {\n    key: \"logs\",\n    type: \"container\",\n    name: \"Logs\",\n    icon: \"stream\",\n    panel: <LogsPanel />,\n  },\n  // { key: \"inspect\", type: \"container\", name: \"Inspect\", icon: \"search\" },\n  // { key: \"setting\", type: \"container\", name: \"Settings\", icon: \"wrench\" },\n\n  // {\n  //   key: \"CreateContainer\",\n  //   type: \"action\",\n  //   name: \"Create Container\",\n  //   icon: \"dice d6\",\n  //   cornerIcon: \"add\",\n  //   panel: (trigger) => (\n  //     <AddContainer key=\"CreateContainer\" trigger={trigger} />\n  //   ),\n  // },\n  // {\n  //   key: \"CreateImage\",\n  //   type: \"action\",\n  //   name: \"Create Images\",\n  //   icon: \"window restore\",\n  //   cornerIcon: \"add\",\n  //   panel: (trigger) => <AddImage key=\"CreateImage\" trigger={trigger} />,\n  // },\n  {\n    key: \"UploadRecipe\",\n    type: \"action\",\n    name: \"Upload Recipe\",\n    icon: \"upload\",\n    cornerIcon: \"scroll\",\n    panel: (trigger) => <UploadRecipe key=\"CreateImage\" trigger={trigger} />,\n  },\n  {\n    key: \"CreateRecipe\",\n    type: \"action\",\n    name: \"Create Recipe\",\n    icon: \"scroll\",\n    cornerIcon: \"add\",\n    panel: (trigger) => <RecipeModel key=\"CreateRecipe\" trigger={trigger} />,\n  },\n];\n// eslint-disable-next-line react/prop-types\nconst SidebarMenu = ({ selectedPanel }) => {\n  const setSelectedMenuItem = useSetRecoilState(selectedMenuItemState);\n\n  const handleMouseClickPanel = (e, { _key }) => {\n    setSelectedMenuItem((prev) => {\n      if (prev.key === _key)\n        return { key: false, type: false, name: false, panel: null, icon: \"\" };\n      return menuItems.find((x) => x.key === _key);\n    });\n  };\n\n  const selectedContainer = useRecoilValue(selectedContainerState);\n\n  return (\n    <Menu icon vertical compact>\n      {menuItems\n        .filter((item) => item.type === \"host\")\n        .map((item) => (\n          <Menu.Item\n            key={item.key}\n            _key={item.key}\n            name={item.name}\n            active={selectedPanel === item.name}\n            onClick={handleMouseClickPanel}\n          >\n            <div>\n              <Icon.Group>\n                <Icon name={item.icon} size=\"large\" />\n                {item.cornerIcon && <Icon name={item.cornerIcon} corner />}\n              </Icon.Group>\n            </div>\n          </Menu.Item>\n        ))}\n      <Divider fitted />\n      <Divider hidden />\n      {menuItems\n        .filter((item) => item.type === \"container\")\n        .map((item) => (\n          <Menu.Item\n            key={item.key}\n            _key={item.key}\n            name={item.name}\n            active={selectedPanel === item.name}\n            onClick={handleMouseClickPanel}\n            disabled={!selectedContainer}\n          >\n            <div>\n              <Icon.Group>\n                <Icon name={item.icon} size=\"large\" />\n                {item.cornerIcon && <Icon name={item.cornerIcon} corner />}\n              </Icon.Group>\n            </div>\n          </Menu.Item>\n        ))}\n      <Divider fitted />\n      <Divider hidden />\n      {menuItems\n        .filter((item) => item.type === \"action\")\n        .map((item) =>\n          item.panel(\n            <Menu.Item\n              key={item.key}\n              _key={item.key}\n              name={item.name}\n              active={selectedPanel === item.name}\n            >\n              <div>\n                <Icon.Group>\n                  <Icon name={item.icon} size=\"large\" />\n                  {item.cornerIcon && <Icon name={item.cornerIcon} corner />}\n                </Icon.Group>\n              </div>\n            </Menu.Item>,\n          ),\n        )}\n    </Menu>\n  );\n};\n\nexport default SidebarMenu;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useState, useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { Icon } from \"semantic-ui-react\";\nimport {\n  containerListState,\n  containerNetworkListState,\n  containerStatsListState,\n  imagesListState,\n} from \"../recoil/Container\";\n\nconst StatusNag = () => {\n  const containerList = useRecoilValue(containerListState);\n  const containerStatsList = useRecoilValue(containerStatsListState);\n  const containerNetworkList = useRecoilValue(containerNetworkListState);\n  const imagesList = useRecoilValue(imagesListState);\n\n  const [visable, setVisable] = useState(true);\n  const [conatinerStatus, setConatinerStatus] = useState(false);\n  const [statsStatus, setStatsStatus] = useState(false);\n  const [netowrkStatus, setNetowrkStatus] = useState(false);\n  const [imageStatus, setImageStatus] = useState(false);\n\n  const handleClose = () => setVisable(false);\n\n  useEffect(() => {\n    if (containerList.length !== 0) setConatinerStatus(true);\n  }, [containerList]);\n\n  useEffect(() => {\n    if (Object.keys(containerStatsList).length !== 0) setStatsStatus(true);\n  }, [containerStatsList]);\n\n  useEffect(() => {\n    if (containerNetworkList.length !== 0) setNetowrkStatus(true);\n  }, [containerNetworkList]);\n\n  useEffect(() => {\n    if (imagesList.length !== 0) setImageStatus(true);\n  }, [imagesList]);\n\n  useEffect(() => {\n    if (conatinerStatus && statsStatus && netowrkStatus && imageStatus)\n      setVisable(false);\n  }, [conatinerStatus, statsStatus, netowrkStatus, imageStatus]);\n\n  return (\n    <>\n      {visable && (\n        <div className=\"ui status overlay nag\">\n          <div className=\"title\">\n            {conatinerStatus ? (\n              <Icon name=\"check\" color=\"green\" />\n            ) : (\n              <Icon name=\"x\" color=\"red\" />\n            )}\n            <span>Container List </span>\n            {statsStatus ? (\n              <Icon name=\"check\" color=\"green\" />\n            ) : (\n              <Icon name=\"x\" color=\"red\" />\n            )}\n            <span>Stats List </span>\n            {netowrkStatus ? (\n              <Icon name=\"check\" color=\"green\" />\n            ) : (\n              <Icon name=\"x\" color=\"red\" />\n            )}\n            <span>Network List </span>\n            {imageStatus ? (\n              <Icon name=\"check\" color=\"green\" />\n            ) : (\n              <Icon name=\"x\" color=\"red\" />\n            )}\n            <span>Image List </span>\n          </div>\n          <Icon name=\"close\" onClick={handleClose} />\n        </div>\n      )}\n    </>\n  );\n};\n\n// StatusNag.propTypes = {};\n\nexport default StatusNag;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useState, useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { Icon } from \"semantic-ui-react\";\n\n// eslint-disable-next-line react/prop-types\nconst SocketStatusNag = ({ visable }) => (\n  <>\n    {!visable && (\n      <div className=\"ui red status overlay nag\">\n        <div className=\"title\">\n          <span>\n            Couldn&apos;t connect to IDM (Check your connection and try again.)\n          </span>\n          {/* {conatinerStatus ? (\n              <Icon name=\"check\" color=\"green\" />\n            ) : (\n              <Icon name=\"x\" color=\"red\" />\n            )}\n            <span>Container List </span> */}\n        </div>\n        {/* <Icon name=\"close\" onClick={handleClose} /> */}\n      </div>\n    )}\n  </>\n);\n\n// StatusNag.propTypes = {};\n\nexport default SocketStatusNag;\n","// no time\nconst keyDict = {\n  SUCCESS: \"✔️ Success!\",\n  RECIPE_UNPACKING: \"⌛ Recipe Unpacking.\",\n  RECIPE_EXTRACT_FINISHED: \"✔️ Recipe Extract Finished.\",\n  RECIPE_IMPORT_FINISHED: \"✔️ Recipe Import Finished.\",\n  CRAFT_PREPARE: \"⌛ Preparing.\",\n  CRAFT_PULLING_IMAGE: \"🖼️ Pulling Images.\",\n  CRAFT_NETWORK_CREATED: \"🌐 Network Created.\",\n  CRAFT_CONTAINER_CREATED: \"📦 Container Created.\",\n  CRAFT_FINISHED: \"✔️ Recipe Deployed!\",\n  BAD_ZIPFILE: \"❌ Bad Zip(might corrupted or wrong file)\",\n  INCORRECT_RECIPE_STRUCTURE: \"❌ Incorrect Recipe Structure.\",\n  MISSING_RECIPE_FILE: \"❌ Missing Recipe File.(Can't find recipe.json)\",\n  INCORRECT_RECIPE_JSON_FORMAT: \"❌ Incorrect Recipe Json Format.\",\n  NO_SUCH_RECIPE: \"❌ no\",\n  MISSING_VARIABLE: \"❌ Missing Variable.\",\n  BAD_PREFIX_NAME: \"❌ Prefix must be [a-z_]+\",\n};\nconst formatter = (key, msg = \"\") => `${keyDict[key]} ${msg}`;\n\nexport default formatter;\n","import React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Sidebar } from \"semantic-ui-react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { ReactFlowProvider } from \"react-flow-renderer\";\nimport { toast } from \"react-toastify\";\nimport SidebarPanel from \"../sidebar/Sidebar\";\nimport GraphBoard from \"../flowboard/GraphBoard\";\nimport SidebarMenu from \"../sidebar/Menu\";\nimport { selectedMenuItemState } from \"../../recoil/Menu\";\nimport {\n  containerListState,\n  containerNetworkListState,\n  containerStatsListState,\n  imagesListState,\n} from \"../../recoil/Container\";\nimport {\n  containersSocket,\n  imagesSocket,\n  networksSocket,\n  recipesSocket,\n} from \"../../recoil/Socketio\";\nimport StatusNag from \"../StatusNag\";\nimport SocketStatusNag from \"../SocketStatusNag\";\nimport formatter from \"../../utils/Message\";\n\nconst Main = () => {\n  const selectedMenuItem = useRecoilValue(selectedMenuItemState);\n\n  const setContainerListState = useSetRecoilState(containerListState);\n  const setContainerStatsListState = useSetRecoilState(containerStatsListState);\n  const setContainerNetworkListState = useSetRecoilState(\n    containerNetworkListState,\n  );\n  const setImagesListState = useSetRecoilState(imagesListState);\n\n  const recipeSocket = useRecoilValue(recipesSocket);\n  const setContainerSocket = useSetRecoilState(containersSocket);\n  const setImagesSocket = useSetRecoilState(imagesSocket);\n  const setNetworksSocket = useSetRecoilState(networksSocket);\n  const setRecipesSocket = useSetRecoilState(recipesSocket);\n\n  const [isConnected, setIsConnected] = useState(false);\n\n  // container listener\n  useEffect(() => {\n    const wsContainer = io(\"http://127.0.0.1:4636/containers\");\n\n    wsContainer.on(\"connect\", () => {\n      console.log(wsContainer.id);\n      setIsConnected(true);\n    });\n\n    wsContainer.on(\"disconnect\", () => {\n      setIsConnected(false);\n    });\n\n    let waitList = false;\n    const listTimer = setInterval(() => {\n      if (!waitList) {\n        wsContainer.emit(\"list\", { all: true }, (ack) => {\n          setContainerListState(ack);\n          waitList = false;\n        });\n        waitList = true;\n      }\n    }, 1000);\n\n    let waitStats = false;\n    const statsTimer = setInterval(() => {\n      if (!waitStats) {\n        // console.time(\"stats\");\n        wsContainer.emit(\"list_stats\", (ack) => {\n          setContainerStatsListState(ack);\n          waitStats = false;\n          // console.timeEnd(\"stats\");\n        });\n        waitStats = true;\n      }\n    }, 1000);\n\n    setContainerSocket(wsContainer);\n\n    return () => {\n      clearInterval(listTimer);\n      clearInterval(statsTimer);\n      wsContainer.disconnect();\n    };\n  }, []);\n\n  // network listener\n  useEffect(() => {\n    const wsNetwork = io(\"http://127.0.0.1:4636/networks\");\n    wsNetwork.on(\"connect\", () => {\n      console.log(wsNetwork.id);\n    });\n\n    let waitList = false;\n    const listTimer = setInterval(() => {\n      if (!waitList) {\n        wsNetwork.emit(\"list\", {}, (ack) => {\n          setContainerNetworkListState(ack);\n          waitList = false;\n        });\n        waitList = true;\n      }\n    }, 1000);\n\n    setNetworksSocket(wsNetwork);\n\n    return () => {\n      clearInterval(listTimer);\n      wsNetwork.disconnect();\n    };\n  }, []);\n\n  // image listener\n  useEffect(() => {\n    const wsImage = io(\"http://127.0.0.1:4636/images\");\n    wsImage.on(\"connect\", () => {\n      console.log(wsImage.id);\n    });\n\n    let waitList = false;\n    const listTimer = setInterval(() => {\n      if (!waitList) {\n        wsImage.emit(\"list\", (ack) => {\n          setImagesListState(ack);\n          waitList = false;\n        });\n        waitList = true;\n      }\n    }, 1000);\n\n    setImagesSocket(wsImage);\n\n    return () => {\n      clearInterval(listTimer);\n      wsImage.disconnect();\n    };\n  }, []);\n\n  // recipe listener\n  useEffect(() => {\n    const wsRecipe = io(\"http://127.0.0.1:4636/recipes\");\n    wsRecipe.on(\"connect\", () => {\n      console.log(wsRecipe.id);\n    });\n\n    setRecipesSocket(wsRecipe);\n\n    return () => {\n      wsRecipe.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (recipeSocket) {\n      recipeSocket.on(\"message\", (msg) => {\n        toast.info(formatter(msg.message));\n      });\n    }\n    return () => {\n      if (recipeSocket) {\n        recipeSocket.removeAllListeners(\"message\");\n      }\n    };\n  }, [recipeSocket]);\n\n  return (\n    <>\n      <div className=\"app\">\n        <StatusNag />\n        <SocketStatusNag visable={isConnected} />\n        <Sidebar.Pushable style={{ flexGrow: \"1\" }}>\n          <Sidebar\n            animation=\"overlay\"\n            direction=\"right\"\n            visible={!!selectedMenuItem.name}\n            className=\"with-toolbar\"\n            style={{ overflow: \"hidden\" }}\n          >\n            <SidebarPanel selectedPanel={selectedMenuItem} />\n          </Sidebar>\n          <Sidebar.Pusher style={{ height: \"100%\" }}>\n            <ReactFlowProvider>\n              <GraphBoard />\n            </ReactFlowProvider>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n        <SidebarMenu selectedPanel={selectedMenuItem.name} />\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n","import React, { useEffect } from \"react\";\nimport { RecoilRoot, useRecoilSnapshot } from \"recoil\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport Main from \"./components/pages/Main\";\n\n// function DebugObserver() {\n//   const snapshot = useRecoilSnapshot();\n//   useEffect(() => {\n//     console.debug(\"The following atoms were modified:\");\n//     // eslint-disable-next-line no-restricted-syntax\n//     for (const node of snapshot.getNodes_UNSTABLE({ isModified: true })) {\n//       console.debug(node.key, snapshot.getLoadable(node));\n//     }\n//   }, [snapshot]);\n//   return null;\n// }\n\nconst App = () => (\n  <RecoilRoot>\n    {/* <DebugObserver /> */}\n    <ToastContainer position=\"top-left\" />\n    <Main />\n  </RecoilRoot>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"fomantic-ui-css/semantic.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}