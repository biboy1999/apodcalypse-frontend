{"version":3,"sources":["recoil/Container.js","components/sidebar/Sidebar.jsx","components/TopLabelProgress.jsx","components/flowboard/LabelNodeHandle.jsx","components/flowboard/ContainerNode.jsx","components/flowboard/NetworkNode.jsx","recoil/Graph.js","utils/GraphUtils.js","components/flowboard/GraphBoard.jsx","recoil/Menu.js","recoil/Socketio.js","components/sidebar/panel/ContainersPanel.jsx","components/sidebar/panel/ImagesPanel.jsx","components/StackedProgress.jsx","components/UsageCard.jsx","components/sidebar/panel/OverviewPanel.jsx","components/sidebar/panel/StatusPanel.jsx","components/sidebar/model/AddImage.jsx","components/sidebar/model/AddContainer.jsx","components/sidebar/panel/networkPanel.jsx","components/sidebar/model/recipe/ModeSelection.jsx","components/sidebar/model/recipe/RecipesBrowser.jsx","components/form/nestedFieldArray.jsx","components/form/fieldArray.jsx","components/sidebar/model/recipe/RecipeSetting.jsx","components/sidebar/model/RecipeModel.jsx","components/sidebar/panel/LogsPanel.jsx","components/sidebar/Menu.jsx","components/StatusNag.jsx","components/pages/Main.jsx","App.jsx","index.jsx"],"names":["containerListState","atom","key","default","containerStatsListState","containerNetworkListState","imagesListState","selectedContainerState","undefined","containerUsageState","selector","get","containerStatsList","Object","entries","reduce","result","value","cpu","cpu_stats","cpu_usage","total_usage","precpu_stats","system_cpu_usage","online_cpus","memory","memory_stats","usage","stats","cache","totalMemory","limit","name","Math","round","containerPanelListState","containerList","length","map","container","id","Id","Name","state","State","Status","image","Config","Image","created","Created","SidebarPanel","selectedPanel","selectedContainer","useRecoilValue","className","Header","as","Subheader","type","data","panel","TopLabelProgress","memo","title","label","total","Grid","Column","floated","width","textAlign","Progress","size","propTypes","PropTypes","string","isRequired","number","CustomHandle","styled","Handle","position","CustomNodeHandle","ContainerNode","style","wordBreak","healthyStatus","Label","color","horizontal","substring","ceil","processCount","columns","celled","verticalAlign","Row","stretched","divided","networkSettings","Ports","split","privatePort","HostPort","toUpperCase","Networks","flatMap","NetworkID","IPAddress","LabelNodeHandle","attached","content","status","NetworkNode","driver","gateway","subnet","graphPositionState","setGraphPositionState","set","newPosition","graphPosition","graphNodesState","containerNetworkList","containerUsage","Array","isArray","keys","containerNode","Health","NetworkSettings","networkNode","network","Driver","IPAM","Gateway","Subnet","graphEdgesState","some","el","source","sourceHandle","target","graphElementState","graphEdges","graphNodes","positionedNodes","node","x","y","elk","ELK","defaultLayoutOptions","updateLayout","elements","a","nodes","edges","forEach","isNode","portList","__rf","handleBounds","push","height","layoutOptions","portConstraints","ports","handle","index","sourcePort","targetPort","layout","children","newGraph","filter","find","n","random","onLoad","reactFlowInstance","console","log","fitView","nodeTypes","GraphBaord","reactFlowElement","setGraphPosition","useSetRecoilState","useStoreState","onLayout","assign","setSelectedContainer","onSelectionChange","e","prev","left","bottom","onClick","Icon","gap","selectedMenuItemState","imagesSocket","dangerouslyAllowMutability","containersSocket","networksSocket","recipesSocket","selectedContainersId","Set","ContainersPanel","containers","containerSocket","handlecheck","checked","add","delete","dividing","Button","Group","positive","emit","negative","Divider","Table","fixed","compact","basic","selectable","fullWidth","HeaderCell","Checkbox","disabled","Body","Cell","onChange","ImagePanel","imageList","RepoTags","join","Size","toFixed","StackedProgress","allZero","every","bar","i","precision","percent","Popup","trigger","backgroundColor","display","minWidth","Content","margin","UsageCard","labelSuffix","sum","acc","b","Card","fluid","OverviewPanel","networkList","imagesList","cpuUsage","substr","memoryUsage","centered","alignItems","Description","statuslist","conatinerId","time","StatusPanel","shift","ResponsiveContainer","maxHeight","LineChart","top","right","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","Legend","Line","stroke","isAnimationActive","panes","menuItem","Menu","Item","render","Tab","Pane","Form","Input","placeholder","Segment","icon","primary","AddImage","Modal","corner","scrolling","menu","pointing","widths","capList","AddContainer","useState","selectedStep","setSelectedStep","useForm","handleSubmit","control","register","useFieldArray","envFields","fields","envAppend","append","envRemove","remove","imageForm","defaultvalue","field","containerForm","item","Accordion","Field","panels","htmlFor","networkForm","onSubmit","Step","link","active","Title","Actions","form","networksList","sorted","sort","ModeSelection","handleModeChoose","stackable","vertical","RecipesBrowser","handleClick","recipeSocket","recipeList","setRecipeList","useEffect","ack","header","nestIndex","getValues","k","subheader","Fields","setValue","prepend","RecipeSetting","recipeName","reset","variablesFields","recipeCanonicalId","setRecipeCanonicalId","on","msg","removeAllListeners","recipeJson","JSON","parse","canonical_id","variables","vars","desc","description","envvar","c","nestedArray","environment_variables","env","prefix","variablesArgs","envArgs","defaultValue","Date","now","toString","RecipeModel","view","mode","setMode","selectedRecipe","setSelectedRecipe","LogsPanel","term","useRef","fitAddon","FitAddon","contianerSocket","tail","character","current","terminal","write","clear","fit","options","convertEol","ref","addons","onResize","menuItems","cornerIcon","SidebarMenu","setSelectedMenuItem","handleMouseClickPanel","_key","handleMouseClickModel","fitted","hidden","StatusNag","visable","setVisable","Main","selectedMenuItem","setContainerListState","setContainerStatsListState","setContainerNetworkListState","setImagesListState","setContainerSocket","setImagesSocket","setNetworksSocket","setRecipesSocket","wsContainer","io","listTimer","setInterval","volatile","all","statsTimer","clearInterval","disconnect","wsNetwork","wsImage","wsRecipe","Sidebar","Pushable","flexGrow","animation","direction","visible","overflow","Pusher","GraphBoard","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.96d3590e.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\r\n\r\nconst containerListState = atom({\r\n  key: \"containerListState\",\r\n  default: [],\r\n});\r\n\r\nconst containerStatsListState = atom({\r\n  key: \"containerStatsListState\",\r\n  default: [],\r\n});\r\n\r\nconst containerNetworkListState = atom({\r\n  key: \"containerNetworkListState\",\r\n  default: [],\r\n});\r\n\r\nconst imagesListState = atom({\r\n  key: \"imagesListState\",\r\n  default: [],\r\n});\r\n\r\nconst selectedContainerState = atom({\r\n  key: \"selectedContainerState\",\r\n  default: undefined,\r\n});\r\n\r\n// container usage\r\nconst containerUsageState = selector({\r\n  key: \"containerUsageState\",\r\n  get: ({ get }) => {\r\n    const containerStatsList = get(containerStatsListState);\r\n    return Object.entries(containerStatsList).reduce((result, [key, value]) => {\r\n      // usage calculation\r\n      const cpuDelta =\r\n        value?.cpu_stats.cpu_usage.total_usage -\r\n        value?.precpu_stats.cpu_usage.total_usage;\r\n      const systemCpuDelta =\r\n        value?.cpu_stats.system_cpu_usage -\r\n        value?.precpu_stats.system_cpu_usage;\r\n      const cpu =\r\n        (cpuDelta / systemCpuDelta) * value?.cpu_stats.online_cpus * 100.0;\r\n      const memory =\r\n        (value?.memory_stats.usage - value?.memory_stats.stats?.cache) /\r\n        1024 /\r\n        1024;\r\n      const totalMemory = value?.memory_stats.limit / 1024 / 1024;\r\n\r\n      // eslint-disable-next-line no-param-reassign\r\n      result[key] = {\r\n        name: value.name,\r\n        cpu: cpu || 0,\r\n        memory: Math.round(memory) || 0,\r\n        totalMemory: Math.round(totalMemory) || 0,\r\n      };\r\n      return result;\r\n    }, {});\r\n  },\r\n});\r\n\r\n// side panel\r\nconst containerPanelListState = selector({\r\n  key: \"containerPanelListState\",\r\n  get: ({ get }) => {\r\n    const containerList = get(containerListState);\r\n\r\n    if (containerList.length === 0) return [];\r\n    return containerList.map((container) => ({\r\n      id: container.Id,\r\n      name: container.Name,\r\n      state: container.State.Status,\r\n      image: container.Config.Image,\r\n      created: container.Created,\r\n    }));\r\n  },\r\n});\r\n\r\nexport {\r\n  containerListState,\r\n  selectedContainerState,\r\n  containerStatsListState,\r\n  imagesListState,\r\n  containerUsageState,\r\n  containerNetworkListState,\r\n  containerPanelListState,\r\n};\r\n","import { Header } from \"semantic-ui-react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport PropTypes from \"prop-types\";\r\nimport { selectedContainerState } from \"../../recoil/Container\";\r\n\r\nconst SidebarPanel = ({ selectedPanel }) => {\r\n  const selectedContainer = useRecoilValue(selectedContainerState);\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div className=\"infotitlebar\">\r\n        <Header as=\"h3\">\r\n          {selectedPanel.name}\r\n          <Header.Subheader>\r\n            {selectedPanel.type === \"host\"\r\n              ? \"Hostname\"\r\n              : selectedContainer?.data.name}\r\n          </Header.Subheader>\r\n        </Header>\r\n      </div>\r\n      {selectedPanel.panel}\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebarPanel.propTypes = {\r\n  selectedPanel: PropTypes.shape({\r\n    key: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired,\r\n    panel: PropTypes.element,\r\n  }).isRequired,\r\n};\r\n\r\nexport default SidebarPanel;\r\n","import { memo } from \"react\";\r\nimport { Progress, Grid } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TopLabelProgress = memo(({ title, label, value, total }) => (\r\n  <>\r\n    <div>\r\n      <Grid>\r\n        <Grid.Column floated=\"left\" width={8}>\r\n          {title}\r\n        </Grid.Column>\r\n        <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\r\n          {label}\r\n        </Grid.Column>\r\n      </Grid>\r\n      <Progress\r\n        value={value}\r\n        total={total}\r\n        className=\"reverse-indicating\"\r\n        size=\"tiny\"\r\n      />\r\n    </div>\r\n  </>\r\n));\r\n\r\nTopLabelProgress.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TopLabelProgress;\r\n","import PropTypes from \"prop-types\";\r\nimport { Handle } from \"react-flow-renderer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CustomHandle = styled(Handle)`\r\n  position: absolute;\r\n  width: 25px;\r\n  height: calc(100% - 4px);\r\n  background-color: #718792;\r\n  border: medium none;\r\n  transform: translateY(0px);\r\n  top: 2px;\r\n\r\n  ${({ position }) => {\r\n    switch (position) {\r\n      case \"right\":\r\n        return `border-radius: 0px 10px 10px 0px;\r\n        right: -36px;`;\r\n      case \"left\":\r\n        return `border-radius: 10px 0px 0px 10px;\r\n        left: -26px;`;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }}\r\n`;\r\n\r\nconst CustomNodeHandle = ({ id, type, position }) => (\r\n  <CustomHandle position={position} id={id} type={type} />\r\n);\r\n\r\nCustomNodeHandle.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  position: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CustomNodeHandle;\r\n","import { Header, Label, Grid } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TopLabelProgress from \"../TopLabelProgress\";\r\nimport LabelNodeHandle from \"./LabelNodeHandle\";\r\n\r\nconst ContainerNode = ({ data }) => (\r\n  <>\r\n    <Header as=\"h5\" style={{ wordBreak: \"break-all\" }}>\r\n      {data.name}\r\n      {data.healthyStatus != null && (\r\n        <Label\r\n          color={\r\n            data.healthyStatus === \"healthy\"\r\n              ? \"green\"\r\n              : data.healthyStatus === \"starting\"\r\n              ? \"yellow\"\r\n              : \"red\"\r\n          }\r\n          size=\"mini\"\r\n          horizontal\r\n        >\r\n          {data.healthyStatus}\r\n        </Label>\r\n      )}\r\n      <Header.Subheader>{`#${data.id.substring(0, 12)}`}</Header.Subheader>\r\n    </Header>\r\n\r\n    <TopLabelProgress\r\n      title=\"CPU\"\r\n      label={data.cpu != null ? `${Math.ceil(data.cpu)}%` : \"n/a\"}\r\n      value={data.cpu ?? 0}\r\n      total={100}\r\n    />\r\n\r\n    <TopLabelProgress\r\n      title=\"Memory\"\r\n      label={\r\n        data.memory !== null\r\n          ? `${Math.round(data.memory)}/${Math.round(data.totalMemory)} MiB`\r\n          : \"n/a\"\r\n      }\r\n      value={data.memory ?? 0}\r\n      total={data.totalMemory}\r\n    />\r\n\r\n    <Grid>\r\n      <Grid.Column floated=\"left\" width={8}>\r\n        Processes:\r\n      </Grid.Column>\r\n      <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\r\n        {data.processCount != null || \"n/a\"}\r\n      </Grid.Column>\r\n    </Grid>\r\n\r\n    <div>IP Table</div>\r\n    <Grid\r\n      columns=\"equal\"\r\n      className=\"\"\r\n      celled=\"internally\"\r\n      verticalAlign=\"middle\"\r\n      textAlign=\"center\"\r\n    >\r\n      <Grid.Row stretched>\r\n        <Grid.Column>\r\n          <Grid divided=\"vertically\" textAlign=\"center\">\r\n            {Object.entries(data.networkSettings.Ports).map(([id, value]) => {\r\n              const [privatePort, type] = id.split(\"/\");\r\n              return (\r\n                <Grid.Row\r\n                  key={`${data.id}-${privatePort}:${value?.HostPort}/${type}`}\r\n                >\r\n                  {value\r\n                    ? `${privatePort}:${\r\n                        value[0]?.HostPort\r\n                      }/${type.toUpperCase()}`\r\n                    : `${privatePort}/${type.toUpperCase()}`}\r\n                </Grid.Row>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n          <Grid divided=\"vertically\" textAlign=\"center\">\r\n            {Object.entries(data.networkSettings.Networks).flatMap(\r\n              ([, value]) => {\r\n                if (value.NetworkID === \"\") return [];\r\n                return (\r\n                  <Grid.Row key={`${data.id}-${value.NetworkID}`}>\r\n                    {value.IPAddress}\r\n                    <LabelNodeHandle\r\n                      type=\"source\"\r\n                      position=\"right\"\r\n                      id={`${data.id}-${value.NetworkID}`}\r\n                    />\r\n                  </Grid.Row>\r\n                );\r\n              },\r\n            )}\r\n          </Grid>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n\r\n    <Label\r\n      attached=\"top right\"\r\n      size=\"tiny\"\r\n      content={data.status}\r\n      color={data.status === \"running\" ? \"green\" : \"red\"}\r\n    />\r\n  </>\r\n);\r\n\r\nContainerNode.propTypes = {\r\n  data: PropTypes.shape({\r\n    healthyStatus: PropTypes.string,\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    cpu: PropTypes.number,\r\n    memory: PropTypes.number,\r\n    totalMemory: PropTypes.number,\r\n    processCount: PropTypes.number,\r\n    status: PropTypes.string,\r\n    networkSettings: PropTypes.object,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ContainerNode;\r\n","import { Header, Grid } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LabelNodeHandle from \"./LabelNodeHandle\";\r\n\r\nconst NetworkNode = ({ data }) => (\r\n  <>\r\n    <Header as=\"h5\" style={{ wordBreak: \"break-all\" }}>\r\n      {data.name}\r\n      <Header.Subheader>{`#${data.id.substring(0, 12)}`}</Header.Subheader>\r\n    </Header>\r\n\r\n    <Grid className=\"very compact\">\r\n      <Grid.Column floated=\"left\" width={8}>\r\n        Driver:\r\n      </Grid.Column>\r\n      <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\r\n        {data.driver}\r\n      </Grid.Column>\r\n\r\n      {data.gateway != null && (\r\n        <>\r\n          <Grid.Column floated=\"left\" width={8}>\r\n            Gateway:\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\r\n            {data.gateway}\r\n          </Grid.Column>\r\n        </>\r\n      )}\r\n      {data.subnet != null && (\r\n        <>\r\n          <Grid.Column floated=\"left\" width={8}>\r\n            Subnet:\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" width={8} textAlign=\"right\">\r\n            {data.subnet}\r\n          </Grid.Column>\r\n        </>\r\n      )}\r\n    </Grid>\r\n\r\n    <LabelNodeHandle type=\"target\" position=\"left\" id={data.id} />\r\n  </>\r\n);\r\n\r\nNetworkNode.propTypes = {\r\n  data: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    id: PropTypes.string,\r\n    driver: PropTypes.string,\r\n    gateway: PropTypes.string,\r\n    subnet: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nexport default NetworkNode;\r\n","import { atom, selector } from \"recoil\";\r\nimport {\r\n  containerListState,\r\n  containerNetworkListState,\r\n  containerUsageState,\r\n} from \"./Container\";\r\n\r\nconst graphPositionState = atom({\r\n  key: \"graphPositionState\",\r\n  default: {},\r\n});\r\n\r\nconst setGraphPositionState = selector({\r\n  key: \"setGraphPositionState\",\r\n  set: ({ set, get }, newPosition) => {\r\n    const graphPosition = get(graphPositionState);\r\n    set(graphPositionState, { ...graphPosition, ...newPosition });\r\n  },\r\n});\r\n\r\nconst graphNodesState = selector({\r\n  key: \"graphNodesState\",\r\n  get: ({ get }) => {\r\n    const containerList = get(containerListState);\r\n    // const containerStatsList = get(containerStatsListState);\r\n    const containerNetworkList = get(containerNetworkListState);\r\n    const containerUsage = get(containerUsageState);\r\n\r\n    if (!Array.isArray(containerList) || !containerList.length) return [];\r\n    if (Object.keys(containerUsage).length === 0) return [];\r\n    if (!Array.isArray(containerNetworkList) || !containerNetworkList.length)\r\n      return [];\r\n\r\n    const containerNode = containerList.map((container) => {\r\n      const stats = containerUsage[container.Id];\r\n      return {\r\n        id: container.Id,\r\n        type: \"container\",\r\n        data: {\r\n          id: container.Id,\r\n          name: container.Name,\r\n          status: container.State.Status,\r\n          healthyStatus: container.State.Health?.Status,\r\n          cpu: stats?.cpu,\r\n          memory: stats?.memory,\r\n          totalMemory: stats?.totalMemory,\r\n          processCount: null,\r\n          networkSettings: container.NetworkSettings,\r\n        },\r\n      };\r\n    });\r\n\r\n    // TODO: multiple network config\r\n    const networkNode = containerNetworkList.map((network) => ({\r\n      id: network.Id,\r\n      type: \"network\",\r\n      data: {\r\n        id: network.Id,\r\n        name: network.Name,\r\n        driver: network.Driver,\r\n        gateway: network.IPAM.Config[0]?.Gateway,\r\n        subnet: network.IPAM.Config[0]?.Subnet,\r\n      },\r\n    }));\r\n    return [...containerNode, ...networkNode];\r\n  },\r\n});\r\n\r\nconst graphEdgesState = selector({\r\n  key: \"graphEdgesState\",\r\n  get: ({ get }) => {\r\n    const containerList = get(containerListState);\r\n    const containerNetworkList = get(containerNetworkListState);\r\n\r\n    if (!Array.isArray(containerList) || !containerList.length) return [];\r\n    if (!Array.isArray(containerNetworkList) || !containerNetworkList.length)\r\n      return [];\r\n\r\n    const edge = containerList.flatMap((container) =>\r\n      Object.entries(container.NetworkSettings.Networks).flatMap(\r\n        ([, value]) => {\r\n          // check network exist\r\n          if (!containerNetworkList.some((el) => el.Id === value.NetworkID))\r\n            return [];\r\n          return {\r\n            id: `${container.Id}-${value.NetworkID}`,\r\n            type: \"smoothstep\",\r\n            source: container.Id,\r\n            sourceHandle: `${container.Id}-${value.NetworkID}`,\r\n            target: value.NetworkID,\r\n          };\r\n        },\r\n      ),\r\n    );\r\n    return edge;\r\n  },\r\n});\r\n\r\nconst graphElementState = selector({\r\n  key: \"graphElementState\",\r\n  get: ({ get }) => {\r\n    const graphPosition = get(graphPositionState);\r\n    const graphEdges = get(graphEdgesState);\r\n    const graphNodes = get(graphNodesState);\r\n\r\n    if (!Array.isArray(graphNodes) || !graphNodes.length) return [];\r\n    if (!Array.isArray(graphEdges) || !graphEdges.length) return [];\r\n\r\n    const positionedNodes = graphNodes.map((node) => {\r\n      const position = graphPosition[node.id] ?? { position: { x: 0, y: 0 } };\r\n      return { ...node, ...position };\r\n    });\r\n\r\n    return [...positionedNodes, ...graphEdges];\r\n  },\r\n});\r\n\r\nexport { graphElementState, setGraphPositionState };\r\n","import ELK from \"elkjs/lib/elk.bundled\";\r\nimport { isNode } from \"react-flow-renderer\";\r\n\r\nconst elk = new ELK({\r\n  // workerUrl: \"./elk-worker.min.js\",\r\n  defaultLayoutOptions: {\r\n    \"elk.algorithm\": \"layered\",\r\n    \"elk.direction\": \"RIGHT\",\r\n    \"elk.spacing.nodeNode\": \"100\",\r\n    \"elk.layered.spacing.nodeNodeBetweenLayers\": \"100\",\r\n    \"elk.edgeRouting\": \"ORTHOGONAL\",\r\n    \"elk.layered.layering.strategy\": \"MIN_WIDTH\",\r\n    \"elk.layered.nodePlacement.strategy\": \"LINEAR_SEGMENTS\",\r\n    \"elk.spacing.edgeNode\": \"50\",\r\n  },\r\n});\r\n\r\nconst updateLayout = async (elements) => {\r\n  const DEFAULT_WIDTH = 75;\r\n  const DEFAULT_HEIGHT = 75;\r\n  const nodes = [];\r\n  const edges = [];\r\n\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      const portList =\r\n        el.__rf?.handleBounds.source ?? el.__rf?.handleBounds.target ?? [];\r\n      // console.log(el.__rf?.handleBounds);\r\n      nodes.push({\r\n        id: el.id,\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        width: el.__rf?.width ?? DEFAULT_WIDTH,\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        height: el.__rf?.height ?? DEFAULT_HEIGHT,\r\n        layoutOptions: {\r\n          portConstraints: \"FIXED_ORDER\",\r\n          \"portAlignment.east\": \"END\",\r\n        },\r\n        ports: [\r\n          ...portList.map((handle, index) => ({\r\n            id: handle.id,\r\n            width: 0,\r\n            height: 0,\r\n            layoutOptions: {\r\n              \"port.side\": handle.position === \"right\" ? \"EAST\" : \"NORTH\",\r\n              \"port.index\": index,\r\n            },\r\n          })),\r\n        ],\r\n      });\r\n    } else {\r\n      // console.log(el);\r\n      edges.push({\r\n        id: el.id,\r\n        sourcePort: `${el.source}-${el.target}`,\r\n        targetPort: el.target,\r\n        source: el.source,\r\n        target: el.target,\r\n      });\r\n    }\r\n  });\r\n\r\n  const newGraph = await elk.layout({\r\n    id: \"root\",\r\n    children: nodes,\r\n    // eslint-disable-next-line object-shorthand\r\n    edges: edges,\r\n  });\r\n\r\n  return elements\r\n    .filter((el) => {\r\n      const node = newGraph?.children?.find((n) => n.id === el.id);\r\n      return isNode(el) && node?.x && node?.y && node?.width && node?.height;\r\n    })\r\n    .map((el) => {\r\n      const node = newGraph?.children?.find((n) => n.id === el.id);\r\n      return {\r\n        [el.id]: {\r\n          position: {\r\n            // hack: slighltiy different position to notify react flow about the change\r\n            x: node.x - node.width / 2 + Math.random() / 1000,\r\n            y: node.y - node.height / 2,\r\n          },\r\n        },\r\n      };\r\n    });\r\n};\r\n\r\nexport default updateLayout;\r\n","import ReactFlow, {\r\n  removeElements,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  ControlButton,\r\n  useUpdateNodeInternals,\r\n  ReactFlowProvider,\r\n  useStoreState,\r\n} from \"react-flow-renderer\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport ContainerNode from \"./ContainerNode\";\r\nimport { selectedContainerState } from \"../../recoil/Container\";\r\nimport NetworkNode from \"./NetworkNode\";\r\nimport { graphElementState, setGraphPositionState } from \"../../recoil/Graph\";\r\nimport updateLayout from \"../../utils/GraphUtils\";\r\n\r\nconst onLoad = (reactFlowInstance) => {\r\n  console.log(\"flow loaded:\", reactFlowInstance);\r\n  reactFlowInstance.fitView();\r\n};\r\n\r\nconst nodeTypes = {\r\n  container: ContainerNode,\r\n  network: NetworkNode,\r\n};\r\n\r\nconst GraphBaord = () => {\r\n  // external state\r\n  const reactFlowElement = useRecoilValue(graphElementState);\r\n  const setGraphPosition = useSetRecoilState(setGraphPositionState);\r\n  // reactflow state\r\n  const nodes = useStoreState((state) => state.nodes);\r\n  const edges = useStoreState((state) => state.edges);\r\n\r\n  const onLayout = async () => {\r\n    const result = await updateLayout([...edges, ...nodes]);\r\n    setGraphPosition(Object.assign({}, ...result));\r\n  };\r\n\r\n  // const onElementsRemove = (elementsToRemove) =>\r\n  //   setElements((els) => removeElements(elementsToRemove, els));\r\n  // const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n\r\n  // on selection change\r\n  const setSelectedContainer = useSetRecoilState(selectedContainerState);\r\n  const onSelectionChange = (e) => {\r\n    setSelectedContainer(\r\n      (prev) => e?.filter((x) => x.type === \"container\")?.[0] ?? prev,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ReactFlow\r\n      elements={reactFlowElement}\r\n      nodeTypes={nodeTypes}\r\n      // onElementsRemove={onElementsRemove}\r\n      // onConnect={onConnect}\r\n      onLoad={onLoad}\r\n      onSelectionChange={onSelectionChange}\r\n    >\r\n      <Controls style={{ left: \"220px\", bottom: \"51px\" }}>\r\n        <ControlButton onClick={() => onLayout()}>\r\n          <Icon name=\"project diagram\" />\r\n        </ControlButton>\r\n      </Controls>\r\n      <MiniMap style={{ left: \"10px\", bottom: \"10px\" }} />\r\n      <Background color=\"#aaa\" gap={16} />\r\n    </ReactFlow>\r\n  );\r\n};\r\n\r\nexport default GraphBaord;\r\n","import { atom } from \"recoil\";\r\n\r\nconst selectedMenuItemState = atom({\r\n  key: \"selectedMenuItemState\",\r\n  default: { key: false, name: false, panel: undefined },\r\n});\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport { selectedMenuItemState };\r\n","import { atom } from \"recoil\";\r\n\r\nconst imagesSocket = atom({\r\n  key: \"imageSocket\",\r\n  default: null,\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\nconst containersSocket = atom({\r\n  key: \"containersSocket\",\r\n  default: null,\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\nconst networksSocket = atom({\r\n  key: \"networksSocket\",\r\n  default: null,\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\nconst recipesSocket = atom({\r\n  key: \"recipesSocket\",\r\n  default: null,\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport { imagesSocket, containersSocket, networksSocket, recipesSocket };\r\n","import { useRecoilValue } from \"recoil\";\r\nimport {\r\n  Table,\r\n  Label,\r\n  Icon,\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { containerPanelListState } from \"../../../recoil/Container\";\r\nimport { containersSocket } from \"../../../recoil/Socketio\";\r\n\r\nconst selectedContainersId = new Set([]);\r\n\r\nconst ContainersPanel = () => {\r\n  const containers = useRecoilValue(containerPanelListState);\r\n  const containerSocket = useRecoilValue(containersSocket);\r\n\r\n  const handlecheck = (e, { checked, id }) => {\r\n    if (checked) selectedContainersId.add(id);\r\n    else selectedContainersId.delete(id);\r\n  };\r\n\r\n  const startContainer = () => {\r\n    selectedContainersId.forEach((id) => containerSocket.emit(\"start\", id, {}));\r\n  };\r\n\r\n  const stopContainer = () => {\r\n    selectedContainersId.forEach((id) => containerSocket.emit(\"stop\", id, {}));\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"flex-box\">\r\n        <Header dividing size=\"large\">\r\n          Action\r\n        </Header>\r\n        <Button.Group>\r\n          <Button positive onClick={startContainer}>\r\n            <Icon name=\"play\" />\r\n            Start\r\n          </Button>\r\n          <Button color=\"yellow\" onClick={stopContainer}>\r\n            <Icon name=\"pause\" />\r\n            Stop\r\n          </Button>\r\n          <Button negative>\r\n            <Icon name=\"trash\" />\r\n            Delete\r\n          </Button>\r\n        </Button.Group>\r\n        <Divider />\r\n\r\n        <div className=\"flex-tab\">\r\n          <Table fixed compact=\"very\" basic=\"very\" selectable>\r\n            <Table.Header fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell style={{ width: \"min-content\" }}>\r\n                  <Checkbox disabled />\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>Status</Table.HeaderCell>\r\n                <Table.HeaderCell>Name</Table.HeaderCell>\r\n                <Table.HeaderCell>ID</Table.HeaderCell>\r\n                <Table.HeaderCell>Image</Table.HeaderCell>\r\n                <Table.HeaderCell width=\"1\" />\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {containers.map((container) => (\r\n                <Table.Row key={container.id}>\r\n                  <Table.Cell>\r\n                    <Checkbox id={container.id} onChange={handlecheck} />\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    {(container.state === \"exited\" ||\r\n                      container.state === \"dead\") && (\r\n                      <Label color=\"red\">{container.state}</Label>\r\n                    )}\r\n                    {container.state === \"running\" && (\r\n                      <Label color=\"green\">{container.state}</Label>\r\n                    )}\r\n                    {(container.state === \"created\" ||\r\n                      container.state === \"restarting\" ||\r\n                      container.state === \"paused\") && (\r\n                      <Label color=\"yellow\">{container.state}</Label>\r\n                    )}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"warp-text\">\r\n                    {container.name}\r\n                  </Table.Cell>\r\n                  <Table.Cell>{container.id.substring(0, 12)}</Table.Cell>\r\n                  <Table.Cell>{container.name}</Table.Cell>\r\n                  <Table.Cell>{container.created}</Table.Cell>\r\n                </Table.Row>\r\n              ))}\r\n            </Table.Body>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ContainersPanel;\r\n","import { useRecoilValue } from \"recoil\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  Divider,\r\n  Checkbox,\r\n  Popup,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { imagesListState } from \"../../../recoil/Container\";\r\n\r\nconst ImagePanel = () => {\r\n  const imageList = useRecoilValue(imagesListState);\r\n  // console.log(imageList);\r\n  return (\r\n    <>\r\n      <div className=\"flex-box\">\r\n        {/* <Header dividing size=\"large\">\r\n          Action\r\n        </Header>\r\n        <Button.Group widths=\"2\">\r\n          <Popup\r\n            content=\"Remove unused images\"\r\n            position=\"bottom center\"\r\n            trigger={\r\n              <Button>\r\n                <Icon.Group>\r\n                  <Icon name=\"database\" />\r\n                  <Icon name=\"times\" corner />\r\n                </Icon.Group>\r\n                Purge\r\n              </Button>\r\n            }\r\n          />\r\n          <Button negative>\r\n            <Icon name=\"trash\" />\r\n            Remove Selected\r\n          </Button>\r\n        </Button.Group>\r\n        <Divider /> */}\r\n        <div className=\"flex-tab\">\r\n          <Table fixed compact=\"very\" basic=\"very\" selectable>\r\n            <Table.Header fullWidth>\r\n              <Table.Row>\r\n                {/* <Table.HeaderCell style={{ width: \"min-content\" }}>\r\n                  <Checkbox />\r\n                </Table.HeaderCell> */}\r\n                <Table.HeaderCell>ID</Table.HeaderCell>\r\n                <Table.HeaderCell>Tags</Table.HeaderCell>\r\n                <Table.HeaderCell>Size</Table.HeaderCell>\r\n                <Table.HeaderCell>Created</Table.HeaderCell>\r\n                <Table.HeaderCell width=\"1\" />\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {imageList.map((e) => (\r\n                <Table.Row key={e.Id}>\r\n                  {/* <Table.Cell>\r\n                    <Checkbox />\r\n                  </Table.Cell> */}\r\n                  <Table.Cell>{e.Id}</Table.Cell>\r\n                  <Table.Cell className=\"warp-text\">\r\n                    {e.RepoTags.join(\",\")}\r\n                  </Table.Cell>\r\n                  <Table.Cell>\r\n                    {(e.Size / 1024 / 1024).toFixed(2)} MB\r\n                  </Table.Cell>\r\n                  <Table.Cell>{e.Created}</Table.Cell>\r\n                  <Table.Cell>\r\n                    <Icon name=\"arrow right\" />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              ))}\r\n            </Table.Body>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ImagePanel;\r\n","import { memo } from \"react\";\r\nimport { Popup, Header } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// this is trash\r\n// const derivePrecision = (min, total) => {\r\n//   let precisionPower = 0;\r\n//   let precision = 1;\r\n//   let ratio = min / total;\r\n//   while (precisionPower < 10) {\r\n//     ratio *= precision;\r\n//     if (ratio > 1) {\r\n//       break;\r\n//     }\r\n//     precision = (precisionPower++) ** 10;\r\n//   }\r\n//   return precision;\r\n// };\r\n\r\nconst getPercent = (value, total, precision) =>\r\n  precision > 0\r\n    ? Math.round(value * (10 * precision)) / (10 * precision)\r\n    : Math.round(value);\r\n\r\nconst StackedProgress = memo(({ total, data }) => {\r\n  const allZero = data.every((e) => e.value === 0);\r\n  // const autoPrecision = derivePrecision(\r\n  //   Math.min.apply(\r\n  //     null,\r\n  //     data.map((e) => e.value),\r\n  //   ),\r\n  //   total,\r\n  // );\r\n\r\n  const bar = data.map((e, i, { length }) => {\r\n    const percent = (e.value / total) * 100;\r\n    return (\r\n      <Popup\r\n        key={e.id}\r\n        position=\"top center\"\r\n        value={percent}\r\n        trigger={\r\n          <div\r\n            className=\"bar highlight\"\r\n            style={{\r\n              backgroundColor: allZero\r\n                ? \"transparent\"\r\n                : `#${e.id.substring(0, 6)}`,\r\n              width: `${percent}%`,\r\n              display:\r\n                allZero && i + 1 === length\r\n                  ? \"block\"\r\n                  : percent === 0\r\n                  ? \"none\"\r\n                  : \"block\",\r\n              minWidth: \"5px\",\r\n            }}\r\n          >\r\n            <div className=\"progress\">\r\n              {`${getPercent(percent, total, 2)}%`}\r\n            </div>\r\n          </div>\r\n        }\r\n      >\r\n        <Popup.Content>\r\n          <Header size=\"tiny\">\r\n            {e.name}\r\n            <Header.Subheader>{e.id}</Header.Subheader>\r\n          </Header>\r\n        </Popup.Content>\r\n      </Popup>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ui multiple progress\" style={{ margin: \"0px\" }}>\r\n        {bar}\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nStackedProgress.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default StackedProgress;\r\n","import { Card } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StackedProgress from \"./StackedProgress\";\r\n\r\nconst UsageCard = ({ data, title, labelSuffix, total }) => {\r\n  const sum = data.reduce((acc, b) => acc + b.value, 0).toFixed(2);\r\n  return (\r\n    <>\r\n      <Card.Group>\r\n        <Card fluid>\r\n          <Card.Content>\r\n            <Card.Header>\r\n              <span>{title}</span>\r\n              <span className=\"right floated\">{sum + labelSuffix}</span>\r\n            </Card.Header>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <StackedProgress total={total} data={data} />\r\n          </Card.Content>\r\n        </Card>\r\n      </Card.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nUsageCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  labelSuffix: PropTypes.string.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default UsageCard;\r\n","import { Icon, Card } from \"semantic-ui-react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport UsageCard from \"../../UsageCard\";\r\nimport {\r\n  containerListState,\r\n  containerNetworkListState,\r\n  containerUsageState,\r\n  imagesListState,\r\n} from \"../../../recoil/Container\";\r\n\r\nconst OverviewPanel = () => {\r\n  const containerUsage = useRecoilValue(containerUsageState);\r\n  const containerList = useRecoilValue(containerListState);\r\n  const networkList = useRecoilValue(containerNetworkListState);\r\n  const imagesList = useRecoilValue(imagesListState);\r\n\r\n  const cpuUsage = Object.entries(containerUsage).map(([id, value]) => ({\r\n    id: id.substr(0, 12),\r\n    name: value.name,\r\n    value: value.cpu,\r\n  }));\r\n\r\n  const memoryUsage = Object.entries(containerUsage).map(([id, value]) => ({\r\n    id: id.substr(0, 12),\r\n    name: value.name,\r\n    value: value.memory,\r\n  }));\r\n\r\n  const totalMemory = 1.94 * 1024;\r\n\r\n  return (\r\n    <div className=\"infosidebar\">\r\n      <UsageCard\r\n        total={400}\r\n        title=\"CPU Usage\"\r\n        labelSuffix=\"%\"\r\n        data={cpuUsage}\r\n      />\r\n      <UsageCard\r\n        total={totalMemory}\r\n        title=\"Memory Usage\"\r\n        labelSuffix={` MiB / ${totalMemory} MiB`}\r\n        data={memoryUsage}\r\n      />\r\n      <Card.Group centered className=\"horizontal\">\r\n        <Card style={{ width: \"170px\", alignItems: \"center\", minWidth: \"0px\" }}>\r\n          <div>\r\n            <Icon name=\"dice d6\" size=\"huge\" />\r\n          </div>\r\n          <Card.Content>\r\n            <Card.Header>{containerList.length}</Card.Header>\r\n            <Card.Description>Containers</Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n        <Card style={{ width: \"170px\", alignItems: \"center\", minWidth: \"0px\" }}>\r\n          <Icon name=\"window restore\" size=\"huge\" />\r\n          <Card.Content>\r\n            <Card.Header>{imagesList.length}</Card.Header>\r\n            <Card.Description>Images</Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n        <Card style={{ width: \"170px\", alignItems: \"center\", minWidth: \"0px\" }}>\r\n          <Icon name=\"sitemap\" size=\"huge\" />\r\n          <Card.Content>\r\n            <Card.Header>{networkList.length}</Card.Header>\r\n            <Card.Description>Networks</Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n      </Card.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewPanel;\r\n","import {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Legend,\r\n} from \"recharts\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport {\r\n  selectedContainerState,\r\n  containerUsageState,\r\n} from \"../../../recoil/Container\";\r\n\r\nconst statuslist = {\r\n  conatinerId: \"\",\r\n  status: [...Array(50)].map(() => ({\r\n    time: null,\r\n    cpu: 0,\r\n    memory: 0,\r\n  })),\r\n};\r\n\r\nconst StatusPanel = () => {\r\n  const selectedContainer = useRecoilValue(selectedContainerState);\r\n  const containerUsage = useRecoilValue(containerUsageState);\r\n\r\n  console.log(statuslist);\r\n  if (selectedContainer.data.id === statuslist.conatinerId) {\r\n    statuslist.status.shift();\r\n    statuslist.status.push({\r\n      time: null,\r\n      cpu: containerUsage[selectedContainer.data.id].cpu,\r\n      memory: containerUsage[selectedContainer.data.id].memory,\r\n    });\r\n  } else {\r\n    statuslist.conatinerId = selectedContainer.data.id;\r\n    statuslist.status = [...Array(50)].map(() => ({\r\n      time: null,\r\n      cpu: 0,\r\n      memory: 0,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex-box\">\r\n        <h1>CPU</h1>\r\n        <ResponsiveContainer maxHeight={300}>\r\n          <LineChart\r\n            data={statuslist.status}\r\n            margin={{\r\n              top: 10,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"time\" />\r\n            <YAxis type=\"number\" domain={[0, 100]} />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line\r\n              type=\"linear\"\r\n              dataKey=\"cpu\"\r\n              stroke=\"#8884d8\"\r\n              isAnimationActive={false}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n        <h1>Memory</h1>\r\n        <ResponsiveContainer maxHeight={300}>\r\n          <LineChart\r\n            data={statuslist.status}\r\n            margin={{\r\n              top: 10,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"time\" />\r\n            <YAxis type=\"number\" domain={[0, 8192]} />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line\r\n              type=\"linear\"\r\n              dataKey=\"memory\"\r\n              stroke=\"#8884d8\"\r\n              isAnimationActive={false}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatusPanel;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Menu,\r\n  Segment,\r\n  Icon,\r\n  Tab,\r\n  Header,\r\n  Button,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\n\r\nconst panes = [\r\n  {\r\n    menuItem: (\r\n      <Menu.Item name=\"registry\">\r\n        <Icon name=\"download\" />\r\n        Pull from registry\r\n      </Menu.Item>\r\n    ),\r\n    render: () => (\r\n      <Tab.Pane>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Input label=\"Registry\" placeholder=\"docker.io\" width=\"16\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Input\r\n              label=\"Image\"\r\n              placeholder=\"hello-world:latest\"\r\n              width=\"16\"\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" positive>\r\n            Pull\r\n          </Button>\r\n        </Form>\r\n      </Tab.Pane>\r\n    ),\r\n  },\r\n  {\r\n    menuItem: (\r\n      <Menu.Item name=\"package\">\r\n        <Icon name=\"upload\" />\r\n        Upload tar/zip\r\n      </Menu.Item>\r\n    ),\r\n    render: () => (\r\n      <Tab.Pane>\r\n        <Segment placeholder>\r\n          <Header icon>\r\n            <Icon name=\"file archive\" />\r\n            Drag file here or click to browse\r\n          </Header>\r\n          <Button primary>Browse</Button>\r\n        </Segment>\r\n      </Tab.Pane>\r\n    ),\r\n  },\r\n  {\r\n    menuItem: (\r\n      <Menu.Item name=\"editor\">\r\n        <Icon name=\"code\" />\r\n        Editor\r\n      </Menu.Item>\r\n    ),\r\n    render: () => <Tab.Pane>Monaco editor here</Tab.Pane>,\r\n  },\r\n];\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst AddImage = ({ trigger }) => (\r\n  <>\r\n    <Modal size=\"large\" trigger={trigger}>\r\n      <Modal.Header>\r\n        <Icon.Group>\r\n          <Icon name=\"window restore\" />\r\n          <Icon name=\"add\" corner />\r\n        </Icon.Group>\r\n        <span> Add Images</span>\r\n      </Modal.Header>\r\n      <Modal.Content scrolling>\r\n        <Tab\r\n          menu={{ pointing: true, widths: \"3\", icon: \"labeled\" }}\r\n          panes={panes}\r\n        />\r\n      </Modal.Content>\r\n    </Modal>\r\n  </>\r\n);\r\nexport default AddImage;\r\n","import { useState } from \"react\";\nimport {\n  Modal,\n  Icon,\n  Form,\n  Divider,\n  Header,\n  Segment,\n  Step,\n  Button,\n  Accordion,\n  Popup,\n} from \"semantic-ui-react\";\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\n\nconst capList = [\n  [\n    \"AUDIT_CONTROL\",\n    \" \tEnable and disable kernel auditing; change auditing filter rules; retrieve auditing status and filtering rules.\",\n  ],\n  [\"AUDIT_READ\", \" \tAllow reading the audit log via multicast netlink socket.\"],\n  [\"BLOCK_SUSPEND\", \" \tAllow preventing system suspends.\"],\n  [\n    \"BPF\",\n    \" \tAllow creating BPF maps, loading BPF Type Format (BTF) data, retrieve JITed code of BPF programs, and more.\",\n  ],\n  [\n    \"CHECKPOINT_RESTORE\",\n    \" \tAllow checkpoint/restore related operations. Introduced in kernel 5.9.\",\n  ],\n  [\n    \"DAC_READ_SEARCH\",\n    \" \tBypass file read permission checks and directory read and execute permission checks.\",\n  ],\n  [\"IPC_LOCK\", \" \tLock memory (mlock(2), mlockall(2), mmap(2), shmctl(2)).\"],\n  [\n    \"IPC_OWNER\",\n    \" \tBypass permission checks for operations on System V IPC objects.\",\n  ],\n  [\"LEASE\", \" \tEstablish leases on arbitrary files (see fcntl(2)).\"],\n  [\n    \"LINUX_IMMUTABLE\",\n    \" \tSet the FS_APPEND_FL and FS_IMMUTABLE_FL i-node flags.\",\n  ],\n  [\n    \"MAC_ADMIN\",\n    \" \tAllow MAC configuration or state changes. Implemented for the Smack LSM.\",\n  ],\n  [\n    \"MAC_OVERRIDE\",\n    \" \tOverride Mandatory Access Control (MAC). Implemented for the Smack Linux Security Module (LSM).\",\n  ],\n  [\"NET_ADMIN\", \" \tPerform various network-related operations.\"],\n  [\"NET_BROADCAST\", \" \tMake socket broadcasts, and listen to multicasts.\"],\n  [\n    \"PERFMON\",\n    \" \tAllow system performance and observability privileged operations using perf_events, i915_perf and other kernel subsystems\",\n  ],\n  [\"SYS_ADMIN\", \" \tPerform a range of system administration operations.\"],\n  [\n    \"SYS_BOOT\",\n    \" \tUse reboot(2) and kexec_load(2), reboot and load a new kernel for later execution.\",\n  ],\n  [\"SYS_MODULE\", \" \tLoad and unload kernel modules.\"],\n  [\n    \"SYS_NICE\",\n    \" \tRaise process nice value (nice(2), setpriority(2)) and change the nice value for arbitrary processes.\",\n  ],\n  [\"SYS_PACCT\", \" \tUse acct(2), switch process accounting on or off.\"],\n  [\"SYS_PTRACE\", \" \tTrace arbitrary processes using ptrace(2).\"],\n  [\"SYS_RAWIO\", \" \tPerform I/O port operations (iopl(2) and ioperm(2)).\"],\n  [\"SYS_RESOURCE\", \" \tOverride resource Limits.\"],\n  [\n    \"SYS_TIME\",\n    \" \tSet system clock (settimeofday(2), stime(2), adjtimex(2)); set real-time (hardware) clock.\",\n  ],\n  [\n    \"SYS_TTY_CONFIG\",\n    \" \tUse vhangup(2); employ various privileged ioctl(2) operations on virtual terminals.\",\n  ],\n  [\"SYSLOG\", \" \tPerform privileged syslog(2) operations.\"],\n  [\"WAKE_ALARM\", \" \tTrigger something that will wake up the system.\"],\n];\n\n// eslint-disable-next-line react/prop-types\nconst AddContainer = ({ trigger }) => {\n  const [selectedStep, setSelectedStep] = useState(0);\n  const { handleSubmit, control, register } = useForm();\n  const onSubmit = (data) => console.log(data);\n\n  const {\n    fields: envFields,\n    append: envAppend,\n    remove: envRemove,\n  } = useFieldArray({\n    control,\n    name: \"env\",\n  });\n\n  // const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\n  //   {\n  //     control,\n  //     name: \"env\",\n  //   },\n  // );\n\n  const imageForm = (\n    <Segment attached>\n      <Controller\n        name=\"Registry\"\n        control={control}\n        defaultvalue=\"\"\n        render={({ field }) => (\n          <Form.Input\n            label=\"Registry\"\n            placeholder=\"docker.io\"\n            width=\"16\"\n            {...field}\n          />\n        )}\n      />\n\n      <Controller\n        name=\"Image\"\n        control={control}\n        defaultvalue=\"\"\n        render={({ field }) => (\n          <Form.Input\n            label=\"Image\"\n            placeholder=\"hello-world:latest\"\n            width=\"16\"\n            {...field}\n          />\n        )}\n      />\n    </Segment>\n  );\n\n  const containerForm = (\n    <Segment attached>\n      <Controller\n        name=\"name\"\n        control={control}\n        defaultvalue=\"\"\n        render={({ field }) => (\n          <Form.Input\n            label=\"name\"\n            placeholder=\"helloWorld\"\n            width=\"16\"\n            {...field}\n          />\n        )}\n      />\n      <Divider />\n      <Header>Environment variable</Header>\n      <Button onClick={() => envAppend({ key: \"\" })} type=\"button\" positive>\n        Add variable\n      </Button>\n      {envFields.map((item, index) => (\n        <Form.Group key={item.id} widths=\"equal\">\n          <Controller\n            name={`env.${index}.key`}\n            control={control}\n            defaultvalue=\"\"\n            render={({ field }) => (\n              <Form.Input label=\"key\" placeholder=\"PATH\" {...field} />\n            )}\n          />\n          <Controller\n            name={`env.${index}.value`}\n            control={control}\n            defaultvalue=\"\"\n            render={({ field }) => (\n              <Form.Input label=\"value\" placeholder=\"/bin\" {...field} />\n            )}\n          />\n          <Button\n            negative\n            type=\"button\"\n            icon=\"trash\"\n            onClick={() => envRemove(index)}\n          />\n        </Form.Group>\n      ))}\n      <Divider />\n      <Header>Capabilities</Header>\n      <Accordion\n        as={Form.Field}\n        panels={[\n          {\n            key: \"cap\",\n            title: \"Advanced\",\n            content: capList.map((x) => (\n              <>\n                <Popup\n                  key={x[0]}\n                  content={x[1]}\n                  trigger={\n                    <input type=\"checkbox\" id={x[0]} {...register(x[0])} />\n                  }\n                />\n                <lable htmlFor={x[0]}> {x[0]}</lable>\n                <br />\n              </>\n              // <Controller\n              //   key={x[0]}\n              //   name={x[0]}\n              //   control={control}\n              //   defaultvalue=\"\"\n              //   render={({ field }) => (\n              //     <Popup\n              //       key={x[0]}\n              //       content={x[1]}\n              //       trigger={<Form.Checkbox toggle label={x[0]} {...field} />}\n              //     />\n              //   )}\n              // />\n              // <Popup\n              //   key={x[0]}\n              //   content={x[1]}\n              //   trigger={\n              //     <Form.Checkbox toggle label={x[0]}   {...register(x[0])} />\n              //   }\n              // />\n            )),\n          },\n        ]}\n      />\n    </Segment>\n  );\n\n  const networkForm = (\n    <Segment attached>\n      <Form.Input label=\"Registry\" placeholder=\"docker.io\" width=\"16\" />\n      <Form.Input label=\"Image\" placeholder=\"hello-world:latest\" width=\"16\" />\n    </Segment>\n  );\n\n  return (\n    <>\n      <Modal size=\"fullscreen\" trigger={trigger}>\n        <Modal.Header>\n          <Icon.Group>\n            <Icon name=\"dice d6\" />\n            <Icon name=\"add\" corner />\n          </Icon.Group>\n          <span> Add Container</span>\n        </Modal.Header>\n        <Modal.Content scrolling>\n          <Form onSubmit={handleSubmit(onSubmit)} id=\"createcontainerform\">\n            <Step.Group fluid attached=\"top\">\n              <Step\n                link\n                active={selectedStep === 0}\n                onClick={() => setSelectedStep(0)}\n              >\n                <Icon name=\"window restore\" />\n                <Step.Content>\n                  <Step.Title>Image</Step.Title>\n                  <Step.Description>Image config.</Step.Description>\n                </Step.Content>\n              </Step>\n              <Step\n                link\n                active={selectedStep === 1}\n                onClick={() => setSelectedStep(1)}\n              >\n                <Icon name=\"dice d6\" />\n                <Step.Content>\n                  <Step.Title>Container</Step.Title>\n                  <Step.Description>\n                    Environment variable, capabilities\n                  </Step.Description>\n                </Step.Content>\n              </Step>\n              <Step\n                link\n                active={selectedStep === 2}\n                onClick={() => setSelectedStep(2)}\n              >\n                <Icon name=\"sitemap\" />\n                <Step.Content>\n                  <Step.Title>Network</Step.Title>\n                  <Step.Description>Port Expose, IP Address</Step.Description>\n                </Step.Content>\n              </Step>\n            </Step.Group>\n            {selectedStep === 0 && imageForm}\n            {selectedStep === 1 && containerForm}\n            {selectedStep === 2 && networkForm}\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            onClick={() =>\n              setSelectedStep((prev) => (prev === 0 ? prev : prev - 1))\n            }\n          >\n            <Icon name=\"angle left\" />\n            Back\n          </Button>\n          <Button\n            positive\n            onClick={() =>\n              setSelectedStep((prev) => (prev === 2 ? prev : prev + 1))\n            }\n          >\n            Next\n            <Icon name=\"angle right\" />\n          </Button>\n          <Button positive form=\"createcontainerform\">\n            <Icon name=\"plus\" />\n            Create\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\nexport default AddContainer;\n","import { useRecoilValue } from \"recoil\";\r\nimport { Table } from \"semantic-ui-react\";\r\nimport { containerNetworkListState } from \"../../../recoil/Container\";\r\n\r\nconst ImagePanel = () => {\r\n  const networksList = useRecoilValue(containerNetworkListState);\r\n  const sorted = [...networksList].sort((a, b) => a.Id > b.Id);\r\n  // console.log(imageList);\r\n  return (\r\n    <>\r\n      <div className=\"flex-box\">\r\n        {/* <Header dividing size=\"large\">\r\n          Action\r\n        </Header>\r\n        <Button.Group widths=\"2\">\r\n          <Popup\r\n            content=\"Remove unused images\"\r\n            position=\"bottom center\"\r\n            trigger={\r\n              <Button>\r\n                <Icon.Group>\r\n                  <Icon name=\"database\" />\r\n                  <Icon name=\"times\" corner />\r\n                </Icon.Group>\r\n                Purge\r\n              </Button>\r\n            }\r\n          />\r\n          <Button negative>\r\n            <Icon name=\"trash\" />\r\n            Remove Selected\r\n          </Button>\r\n        </Button.Group>\r\n        <Divider /> */}\r\n        <div className=\"flex-tab\">\r\n          <Table fixed compact=\"very\" basic=\"very\" selectable>\r\n            <Table.Header fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell>ID</Table.HeaderCell>\r\n                <Table.HeaderCell>Name</Table.HeaderCell>\r\n                <Table.HeaderCell>Driver</Table.HeaderCell>\r\n                <Table.HeaderCell>Created</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {sorted.map((e) => (\r\n                <Table.Row key={e.Id}>\r\n                  <Table.Cell>{e.Id}</Table.Cell>\r\n                  <Table.Cell className=\"warp-text\">{e.Name}</Table.Cell>\r\n                  <Table.Cell>{e.Driver}</Table.Cell>\r\n                  <Table.Cell>{e.Created}</Table.Cell>\r\n                </Table.Row>\r\n              ))}\r\n            </Table.Body>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ImagePanel;\r\n","import {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst ModeSelection = ({ handleModeChoose }) => (\r\n  <Segment placeholder>\r\n    <Grid columns=\"2\" stackable textAlign=\"center\">\r\n      <Divider vertical>Or</Divider>\r\n\r\n      <Grid.Row verticalAlign=\"middle\">\r\n        <Grid.Column>\r\n          <Header>\r\n            <div>\r\n              <Icon.Group size=\"huge\">\r\n                <Icon name=\"scroll\" />\r\n                <Icon corner name=\"pen nib\" />\r\n              </Icon.Group>\r\n            </div>\r\n            <br />\r\n            Create from scratch\r\n          </Header>\r\n          <Button\r\n            as=\"label\"\r\n            primary\r\n            disabled\r\n            onClick={() => handleModeChoose(\"create\")}\r\n          >\r\n            Create\r\n          </Button>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n          <Header>\r\n            <div>\r\n              <Icon.Group size=\"huge\">\r\n                <Icon name=\"upload\" />\r\n                <Icon corner=\"bottom right\" name=\"scroll\" />\r\n              </Icon.Group>\r\n            </div>\r\n            <br />\r\n            Load predefined recipe\r\n          </Header>\r\n          <Button\r\n            as=\"label\"\r\n            primary\r\n            onClick={() => handleModeChoose(\"predefined\")}\r\n          >\r\n            Next\r\n          </Button>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  </Segment>\r\n);\r\n\r\nexport default ModeSelection;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport { recipesSocket } from \"../../../../recoil/Socketio\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst RecipesBrowser = ({ handleClick }) => {\r\n  const recipeSocket = useRecoilValue(recipesSocket);\r\n  const [recipeList, setRecipeList] = useState([]);\r\n  useEffect(() => {\r\n    recipeSocket.emit(\"list\", (ack) => {\r\n      setRecipeList(ack);\r\n    });\r\n  }, [recipeSocket]);\r\n  return (\r\n    <Card.Group>\r\n      {recipeList.map((name) => (\r\n        <Card key={name} id={name} header={name} onClick={handleClick} />\r\n      ))}\r\n    </Card.Group>\r\n  );\r\n};\r\n\r\nexport default RecipesBrowser;\r\n","import React from \"react\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\nimport { Divider, Header } from \"semantic-ui-react\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nexport default ({ nestIndex, control, register, getValues }) => {\r\n  const { fields, remove, append } = useFieldArray({\r\n    control,\r\n    name: `envvar.${nestIndex}.nestedArray`,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {fields.map((item, k) => (\r\n        <div key={item.id} className=\"field\">\r\n          <Header\r\n            as=\"h4\"\r\n            content={getValues(`envvar.${nestIndex}.nestedArray.${k}.key`)}\r\n            subheader={getValues(`envvar.${nestIndex}.nestedArray.${k}.desc`)}\r\n          />\r\n          <input {...register(`envvar.${nestIndex}.nestedArray.${k}.value`)} />\r\n        </div>\r\n      ))}\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport NestedArray from \"./nestedFieldArray\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nexport default function Fields({ control, register, setValue, getValues }) {\r\n  const { fields, append, remove, prepend } = useFieldArray({\r\n    control,\r\n    name: \"envvar\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {fields.map((item, index) => (\r\n          <li key={item.id}>\r\n            <Header as=\"h2\" content={getValues(`envvar.${index}.name`)} />\r\n            <NestedArray\r\n              nestIndex={index}\r\n              {...{ control, register, getValues }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { Divider, Form, Header } from \"semantic-ui-react\";\r\nimport { recipesSocket } from \"../../../../recoil/Socketio\";\r\nimport FieldArray from \"../../../form/fieldArray\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst RecipeSetting = ({ recipeName }) => {\r\n  const recipeSocket = useRecoilValue(recipesSocket);\r\n\r\n  const { handleSubmit, control, register, getValues, setValue, reset } =\r\n    useForm();\r\n  const { fields: variablesFields } = useFieldArray({\r\n    control,\r\n    name: \"variables\",\r\n  });\r\n\r\n  const [recipeCanonicalId, setRecipeCanonicalId] = useState(\"\");\r\n\r\n  const onSubmit = (data) => {\r\n    const { prefix, variables, envvar } = data;\r\n    const variablesArgs = Object.assign(\r\n      {},\r\n      ...variables.map((vars) => ({\r\n        [vars.key]: vars.value,\r\n      })),\r\n    );\r\n\r\n    const envArgs = Object.assign(\r\n      {},\r\n      ...envvar.map((container) => ({\r\n        [container.name]: Object.assign(\r\n          {},\r\n          ...container.nestedArray.flatMap((env) =>\r\n            env.value !== \"\" ? { [env.key]: env.value } : [],\r\n          ),\r\n        ),\r\n      })),\r\n    );\r\n\r\n    recipeSocket.emit(\r\n      \"craft\",\r\n      recipeCanonicalId,\r\n      prefix,\r\n      variablesArgs,\r\n      envArgs,\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    recipeSocket.on(\"message\", (msg) => {\r\n      console.log(msg);\r\n    });\r\n\r\n    return () => {\r\n      recipeSocket.removeAllListeners(\"message\");\r\n    };\r\n  }, [recipeSocket]);\r\n\r\n  useEffect(() => {\r\n    if (recipeSocket)\r\n      recipeSocket.emit(\"get_recipe\", recipeName, (ack) => {\r\n        const recipeJson = JSON.parse(ack);\r\n        setRecipeCanonicalId(recipeJson.canonical_id);\r\n        const defaultvalue = {\r\n          variables: recipeJson.variables.map((vars) => ({\r\n            key: vars.key,\r\n            desc: vars.description,\r\n            value: vars.default,\r\n          })),\r\n          envvar: recipeJson.containers.map((c) => ({\r\n            name: c.name,\r\n            nestedArray: c.environment_variables.map((env) => ({\r\n              key: env.key,\r\n              desc: env.description,\r\n              value: env.default,\r\n            })),\r\n          })),\r\n        };\r\n        reset(defaultvalue);\r\n      });\r\n  }, [recipeSocket]);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit(onSubmit)} id=\"recipe-form\">\r\n      <Header as=\"h1\" content=\"Recipe Settings\" />\r\n      <Divider />\r\n      <Header\r\n        as=\"h3\"\r\n        content=\"Prefix name\"\r\n        subheader=\"For conatiner group prefix name\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        {...register(`prefix`)}\r\n        defaultValue={Math.round(Date.now()).toString(36)}\r\n      />\r\n      <Header as=\"h1\" content=\"Variables\" />\r\n      <Divider />\r\n      {variablesFields.map((item, index) => (\r\n        <div key={item.id} className=\"field\">\r\n          <Header as=\"h3\" content={item.key} subheader={item.desc} />\r\n          <input\r\n            type=\"text\"\r\n            placeholder={item.desc}\r\n            {...register(`variables.${index}.value`)}\r\n          />\r\n        </div>\r\n      ))}\r\n      <Header as=\"h1\" content=\"Environment Variables\" />\r\n      <Divider />\r\n      <FieldArray {...{ control, register, getValues, setValue }} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default RecipeSetting;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Modal, Icon, Button } from \"semantic-ui-react\";\r\nimport ModeSelection from \"./recipe/ModeSelection\";\r\nimport RecipesBrowser from \"./recipe/RecipesBrowser\";\r\nimport RecipeSetting from \"./recipe/RecipeSetting\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst RecipeModel = ({ trigger }) => {\r\n  const [mode, setMode] = useState(null);\r\n  const [selectedRecipe, setSelectedRecipe] = useState(\"\");\r\n\r\n  const handleRecipeSelectClick = (e, { id }) => {\r\n    setSelectedRecipe(id);\r\n  };\r\n\r\n  let view;\r\n  if (mode === \"predefined\") {\r\n    view = <RecipesBrowser handleClick={handleRecipeSelectClick} />;\r\n    if (selectedRecipe !== \"\")\r\n      view = <RecipeSetting recipeName={selectedRecipe} />;\r\n  } else if (mode === \"create\") view = <div>no</div>;\r\n  else view = <ModeSelection handleModeChoose={setMode} />;\r\n\r\n  return (\r\n    <>\r\n      <Modal size=\"fullscreen\" trigger={trigger}>\r\n        <Modal.Header>\r\n          <Icon.Group>\r\n            <Icon name=\"window restore\" />\r\n            <Icon name=\"add\" corner />\r\n          </Icon.Group>\r\n          <span> Recipe Wizard</span>\r\n        </Modal.Header>\r\n        <Modal.Content scrolling>{view}</Modal.Content>\r\n        <Modal.Actions>\r\n          {selectedRecipe !== \"\" && (\r\n            <Button positive form=\"recipe-form\">\r\n              <Icon name=\"plus\" />\r\n              Create\r\n            </Button>\r\n          )}\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default RecipeModel;\r\n","import { useRef, useEffect } from \"react\";\r\nimport { FitAddon } from \"xterm-addon-fit\";\r\nimport { XTerm } from \"xterm-for-react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { containersSocket } from \"../../../recoil/Socketio\";\r\nimport { selectedContainerState } from \"../../../recoil/Container\";\r\n\r\nconst LogsPanel = () => {\r\n  const term = useRef(null);\r\n  const fitAddon = new FitAddon();\r\n\r\n  const contianerSocket = useRecoilValue(containersSocket);\r\n\r\n  const selectedContainer = useRecoilValue(selectedContainerState);\r\n\r\n  useEffect(() => {\r\n    contianerSocket.emit(\"listen_logs\", selectedContainer.data.id, {\r\n      tail: 200,\r\n    });\r\n    contianerSocket.on(\"logs\", (character) => {\r\n      term.current.terminal.write(character);\r\n    });\r\n\r\n    return () => {\r\n      contianerSocket.emit(\"stop_listen_logs\", selectedContainer.data.id);\r\n      contianerSocket.removeAllListeners(\"logs\");\r\n      term.current.terminal.clear();\r\n    };\r\n  }, [selectedContainer]);\r\n\r\n  // useEffect(() => {\r\n  //   const logTimer = setInterval(() => {\r\n  //     contianerSocket.volatile.emit(\r\n  //       \"logs\",\r\n  //       selectedContainer.data.id,\r\n  //       { tail: 200 },\r\n  //       (ack) => {\r\n  //         console.log(new TextDecoder().decode(ack));\r\n  //       },\r\n  //     );\r\n  //   }, 5000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(logTimer);\r\n  //   };\r\n  // }, [selectedContainer]);\r\n\r\n  useEffect(() => {\r\n    fitAddon.fit();\r\n    // ws.current.emit('resize', {\"cols\": term.current.terminal.cols, \"rows\": term.current.terminal.rows})\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"flex-box\">\r\n        <XTerm\r\n          className=\"flex-tab\"\r\n          options={{ convertEol: true }}\r\n          ref={term}\r\n          addons={[fitAddon]}\r\n          onResize={fitAddon.fit()}\r\n          // onKey={(e)=>{\r\n          //   ws.current.emit('pty-input', {'input': e.key});\r\n          // }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogsPanel;\r\n","import { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { Icon, Menu, Divider } from \"semantic-ui-react\";\r\nimport { selectedContainerState } from \"../../recoil/Container\";\r\nimport { selectedMenuItemState } from \"../../recoil/Menu\";\r\nimport ContainersPanel from \"./panel/ContainersPanel\";\r\nimport ImagePanel from \"./panel/ImagesPanel\";\r\nimport OverviewPanel from \"./panel/OverviewPanel\";\r\nimport AttachPanel from \"./panel/AttachPanel\";\r\nimport StatusPanel from \"./panel/StatusPanel\";\r\nimport AddImage from \"./model/AddImage\";\r\nimport AddContainer from \"./model/AddContainer\";\r\nimport NetworkPanel from \"./panel/networkPanel\";\r\nimport RecipeModel from \"./model/RecipeModel\";\r\nimport LogsPanel from \"./panel/LogsPanel\";\r\n\r\nconst menuItems = [\r\n  {\r\n    key: \"overview\",\r\n    type: \"host\",\r\n    name: \"Overview\",\r\n    icon: \"desktop\",\r\n    panel: <OverviewPanel />,\r\n  },\r\n  {\r\n    key: \"containers\",\r\n    type: \"host\",\r\n    name: \"Containers\",\r\n    icon: \"dice d6\",\r\n    panel: <ContainersPanel />,\r\n  },\r\n  {\r\n    key: \"images\",\r\n    type: \"host\",\r\n    name: \"Images\",\r\n    icon: \"window restore\",\r\n    panel: <ImagePanel />,\r\n  },\r\n  {\r\n    key: \"networks\",\r\n    type: \"host\",\r\n    name: \"Networks\",\r\n    icon: \"sitemap\",\r\n    panel: <NetworkPanel />,\r\n  },\r\n  {\r\n    key: \"status\",\r\n    type: \"container\",\r\n    name: \"Status\",\r\n    icon: \"chart area\",\r\n    panel: <StatusPanel />,\r\n  },\r\n  // {\r\n  //   key: \"terminal\",\r\n  //   type: \"container\",\r\n  //   name: \"Terminal\",\r\n  //   icon: \"terminal\",\r\n  //   panel: <AttachPanel />,\r\n  // },\r\n  {\r\n    key: \"logs\",\r\n    type: \"container\",\r\n    name: \"Logs\",\r\n    icon: \"stream\",\r\n    panel: <LogsPanel />,\r\n  },\r\n  // { key: \"inspect\", type: \"container\", name: \"Inspect\", icon: \"search\" },\r\n  // { key: \"setting\", type: \"container\", name: \"Settings\", icon: \"wrench\" },\r\n\r\n  {\r\n    key: \"CreateContainer\",\r\n    type: \"action\",\r\n    name: \"Create Container\",\r\n    icon: \"dice d6\",\r\n    cornerIcon: \"add\",\r\n    panel: (trigger) => (\r\n      <AddContainer key=\"CreateContainer\" trigger={trigger} />\r\n    ),\r\n  },\r\n  {\r\n    key: \"CreateImage\",\r\n    type: \"action\",\r\n    name: \"Create Images\",\r\n    icon: \"window restore\",\r\n    cornerIcon: \"add\",\r\n    panel: (trigger) => <AddImage key=\"CreateImage\" trigger={trigger} />,\r\n  },\r\n  {\r\n    key: \"CreateRecipe\",\r\n    type: \"action\",\r\n    name: \"Create Recipe\",\r\n    icon: \"scroll\",\r\n    cornerIcon: \"add\",\r\n    panel: (trigger) => <RecipeModel key=\"CreateRecipe\" trigger={trigger} />,\r\n  },\r\n];\r\n// eslint-disable-next-line react/prop-types\r\nconst SidebarMenu = ({ selectedPanel }) => {\r\n  const setSelectedMenuItem = useSetRecoilState(selectedMenuItemState);\r\n\r\n  const handleMouseClickPanel = (e, { _key }) => {\r\n    setSelectedMenuItem((prev) => {\r\n      if (prev.key === _key)\r\n        return { key: false, type: false, name: false, panel: null, icon: \"\" };\r\n      return menuItems.find((x) => x.key === _key);\r\n    });\r\n  };\r\n\r\n  const handleMouseClickModel = (e, { _key }) => {\r\n    console.log(\"clicking\");\r\n    // menuItems.find((x) => x.key === _key).panel(true);\r\n    // setSelectedMenuItem((prev) => {\r\n    //   if (prev.key === _key)\r\n    //     return { key: false, type: false, name: false, panel: null, icon: \"\" };\r\n    //   return menuItems.find((x) => x.key === _key);\r\n    // });\r\n  };\r\n\r\n  const selectedContainer = useRecoilValue(selectedContainerState);\r\n\r\n  return (\r\n    <Menu icon vertical compact>\r\n      {menuItems\r\n        .filter((item) => item.type === \"host\")\r\n        .map((item) => (\r\n          <Menu.Item\r\n            key={item.key}\r\n            _key={item.key}\r\n            name={item.name}\r\n            active={selectedPanel === item.name}\r\n            onClick={handleMouseClickPanel}\r\n          >\r\n            <div>\r\n              <Icon.Group>\r\n                <Icon name={item.icon} size=\"large\" />\r\n                {item.cornerIcon && <Icon name={item.cornerIcon} corner />}\r\n              </Icon.Group>\r\n            </div>\r\n          </Menu.Item>\r\n        ))}\r\n      <Divider fitted />\r\n      <Divider hidden />\r\n      {menuItems\r\n        .filter((item) => item.type === \"container\")\r\n        .map((item) => (\r\n          <Menu.Item\r\n            key={item.key}\r\n            _key={item.key}\r\n            name={item.name}\r\n            active={selectedPanel === item.name}\r\n            onClick={handleMouseClickPanel}\r\n            disabled={!selectedContainer}\r\n          >\r\n            <div>\r\n              <Icon.Group>\r\n                <Icon name={item.icon} size=\"large\" />\r\n                {item.cornerIcon && <Icon name={item.cornerIcon} corner />}\r\n              </Icon.Group>\r\n            </div>\r\n          </Menu.Item>\r\n        ))}\r\n      <Divider fitted />\r\n      <Divider hidden />\r\n      {menuItems\r\n        .filter((item) => item.type === \"action\")\r\n        .map((item) =>\r\n          item.panel(\r\n            <Menu.Item\r\n              key={item.key}\r\n              _key={item.key}\r\n              name={item.name}\r\n              active={selectedPanel === item.name}\r\n              onClick={handleMouseClickModel}\r\n            >\r\n              <div>\r\n                <Icon.Group>\r\n                  <Icon name={item.icon} size=\"large\" />\r\n                  {item.cornerIcon && <Icon name={item.cornerIcon} corner />}\r\n                </Icon.Group>\r\n              </div>\r\n            </Menu.Item>,\r\n          ),\r\n        )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default SidebarMenu;\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport { useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport {\r\n  containerListState,\r\n  containerNetworkListState,\r\n  containerStatsListState,\r\n  imagesListState,\r\n} from \"../recoil/Container\";\r\n\r\nconst StatusNag = () => {\r\n  const containerList = useRecoilValue(containerListState);\r\n  const containerStatsList = useRecoilValue(containerStatsListState);\r\n  const containerNetworkList = useRecoilValue(containerNetworkListState);\r\n  const imagesList = useRecoilValue(imagesListState);\r\n\r\n  const [visable, setVisable] = useState(true);\r\n  const handleClose = () => setVisable(false);\r\n  return (\r\n    <>\r\n      {visable && (\r\n        <div className=\"ui status overlay nag\">\r\n          <div className=\"title\">\r\n            {containerList.length === 0 ? (\r\n              <Icon name=\"x\" color=\"red\" />\r\n            ) : (\r\n              <Icon name=\"check\" color=\"green\" />\r\n            )}\r\n            <span>Container List </span>\r\n            {Object.keys(containerStatsList).length === 0 ? (\r\n              <Icon name=\"x\" color=\"red\" />\r\n            ) : (\r\n              <Icon name=\"check\" color=\"green\" />\r\n            )}\r\n            <span>Stats List </span>\r\n            {containerNetworkList.length === 0 ? (\r\n              <Icon name=\"x\" color=\"red\" />\r\n            ) : (\r\n              <Icon name=\"check\" color=\"green\" />\r\n            )}\r\n            <span>Network List </span>\r\n            {imagesList.length === 0 ? (\r\n              <Icon name=\"x\" color=\"red\" />\r\n            ) : (\r\n              <Icon name=\"check\" color=\"green\" />\r\n            )}\r\n            <span>Image List </span>\r\n          </div>\r\n          <Icon name=\"close\" onClick={handleClose} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// StatusNag.propTypes = {};\r\n\r\nexport default StatusNag;\r\n","import React, { useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Sidebar } from \"semantic-ui-react\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { ReactFlowProvider } from \"react-flow-renderer\";\r\nimport SidebarPanel from \"../sidebar/Sidebar\";\r\nimport GraphBoard from \"../flowboard/GraphBoard\";\r\nimport SidebarMenu from \"../sidebar/Menu\";\r\nimport { selectedMenuItemState } from \"../../recoil/Menu\";\r\nimport {\r\n  containerListState,\r\n  containerNetworkListState,\r\n  containerStatsListState,\r\n  imagesListState,\r\n} from \"../../recoil/Container\";\r\nimport {\r\n  containersSocket,\r\n  imagesSocket,\r\n  networksSocket,\r\n  recipesSocket,\r\n} from \"../../recoil/Socketio\";\r\nimport StatusNag from \"../StatusNag\";\r\n\r\nconst Main = () => {\r\n  const selectedMenuItem = useRecoilValue(selectedMenuItemState);\r\n\r\n  const setContainerListState = useSetRecoilState(containerListState);\r\n  const setContainerStatsListState = useSetRecoilState(containerStatsListState);\r\n  const setContainerNetworkListState = useSetRecoilState(\r\n    containerNetworkListState,\r\n  );\r\n  const setImagesListState = useSetRecoilState(imagesListState);\r\n\r\n  const setContainerSocket = useSetRecoilState(containersSocket);\r\n  const setImagesSocket = useSetRecoilState(imagesSocket);\r\n  const setNetworksSocket = useSetRecoilState(networksSocket);\r\n  const setRecipesSocket = useSetRecoilState(recipesSocket);\r\n\r\n  useEffect(() => {\r\n    const wsContainer = io(\"http://127.0.0.1:4636/containers\");\r\n\r\n    wsContainer.on(\"connect\", () => {\r\n      console.log(wsContainer.id);\r\n    });\r\n\r\n    const listTimer = setInterval(() => {\r\n      wsContainer.volatile.emit(\"list\", { all: true }, (ack) => {\r\n        // console.log(ack);\r\n        setContainerListState(ack);\r\n      });\r\n    }, 5000);\r\n\r\n    const statsTimer = setInterval(() => {\r\n      wsContainer.volatile.emit(\"list_stats\", (ack) => {\r\n        // console.log(ack);\r\n        setContainerStatsListState(ack);\r\n      });\r\n    }, 7000);\r\n\r\n    setContainerSocket(wsContainer);\r\n\r\n    return () => {\r\n      clearInterval(listTimer);\r\n      clearInterval(statsTimer);\r\n      wsContainer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const wsNetwork = io(\"http://127.0.0.1:4636/networks\");\r\n    wsNetwork.on(\"connect\", () => {\r\n      console.log(wsNetwork.id);\r\n    });\r\n\r\n    const listTimer = setInterval(() => {\r\n      wsNetwork.volatile.emit(\"list\", {}, (ack) => {\r\n        setContainerNetworkListState(ack);\r\n      });\r\n    }, 3000);\r\n\r\n    setNetworksSocket(wsNetwork);\r\n\r\n    return () => {\r\n      clearInterval(listTimer);\r\n      wsNetwork.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const wsImage = io(\"http://127.0.0.1:4636/images\");\r\n    wsImage.on(\"connect\", () => {\r\n      console.log(wsImage.id);\r\n    });\r\n\r\n    const listTimer = setInterval(() => {\r\n      wsImage.volatile.emit(\"list\", (ack) => {\r\n        setImagesListState(ack);\r\n      });\r\n    }, 4000);\r\n\r\n    setImagesSocket(wsImage);\r\n\r\n    return () => {\r\n      clearInterval(listTimer);\r\n      wsImage.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const wsRecipe = io(\"http://127.0.0.1:4636/recipes\");\r\n    wsRecipe.on(\"connect\", () => {\r\n      console.log(wsRecipe.id);\r\n    });\r\n\r\n    setRecipesSocket(wsRecipe);\r\n\r\n    return () => {\r\n      wsRecipe.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app\">\r\n        <StatusNag />\r\n        <Sidebar.Pushable style={{ flexGrow: \"1\" }}>\r\n          <Sidebar\r\n            animation=\"overlay\"\r\n            direction=\"right\"\r\n            visible={!!selectedMenuItem.name}\r\n            className=\"with-toolbar\"\r\n            style={{ overflow: \"hidden\" }}\r\n          >\r\n            <SidebarPanel selectedPanel={selectedMenuItem} />\r\n          </Sidebar>\r\n          <Sidebar.Pusher style={{ height: \"100%\" }}>\r\n            <ReactFlowProvider>\r\n              <GraphBoard />\r\n            </ReactFlowProvider>\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n        <SidebarMenu selectedPanel={selectedMenuItem.name} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect } from \"react\";\r\nimport { RecoilRoot, useRecoilSnapshot } from \"recoil\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/pages/Main\";\r\n\r\n// function DebugObserver() {\r\n//   const snapshot = useRecoilSnapshot();\r\n//   useEffect(() => {\r\n//     console.debug(\"The following atoms were modified:\");\r\n//     // eslint-disable-next-line no-restricted-syntax\r\n//     for (const node of snapshot.getNodes_UNSTABLE({ isModified: true })) {\r\n//       console.debug(node.key, snapshot.getLoadable(node));\r\n//     }\r\n//   }, [snapshot]);\r\n//   return null;\r\n// }\r\n\r\nconst App = () => (\r\n  <RecoilRoot>\r\n    {/* <DebugObserver /> */}\r\n    <Main />\r\n  </RecoilRoot>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"fomantic-ui-css/semantic.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}